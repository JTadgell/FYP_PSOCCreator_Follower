ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"IntQueue.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	xNormallyEmptyQueue:
  21 0000 00000000 		.space	4
  22              		.align	2
  23              	xNormallyFullQueue:
  24 0004 00000000 		.space	4
  25              		.align	2
  26              	uxHighPriorityLoops1:
  27 0008 00000000 		.space	4
  28              		.align	2
  29              	uxHighPriorityLoops2:
  30 000c 00000000 		.space	4
  31              		.align	2
  32              	uxLowPriorityLoops1:
  33 0010 00000000 		.space	4
  34              		.align	2
  35              	uxLowPriorityLoops2:
  36 0014 00000000 		.space	4
  37              		.data
  38              		.align	2
  39              		.type	xErrorStatus, %object
  40              		.size	xErrorStatus, 4
  41              	xErrorStatus:
  42 0000 01000000 		.word	1
  43              		.bss
  44              		.align	2
  45              	xErrorLine:
  46 0018 00000000 		.space	4
  47              		.align	2
  48              	xWasSuspended:
  49 001c 00000000 		.space	4
  50              		.align	2
  51              	uxValueForNormallyEmptyQueue:
  52 0020 00000000 		.space	4
  53              		.align	2
  54              	uxValueForNormallyFullQueue:
  55 0024 00000000 		.space	4
  56              		.comm	xHighPriorityNormallyEmptyTask1,4,4
  57              		.comm	xHighPriorityNormallyEmptyTask2,4,4
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 2


  58              		.comm	xHighPriorityNormallyFullTask1,4,4
  59              		.comm	xHighPriorityNormallyFullTask2,4,4
  60              		.align	2
  61              	ucNormallyEmptyReceivedValues:
  62 0028 00000000 		.space	200
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.align	2
  64              	ucNormallyFullReceivedValues:
  65 00f0 00000000 		.space	200
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.section	.rodata
  67              		.align	2
  68              	.LC0:
  69 0000 48315152 		.ascii	"H1QRx\000"
  69      7800
  70 0006 0000     		.align	2
  71              	.LC1:
  72 0008 48325152 		.ascii	"H2QRx\000"
  72      7800
  73 000e 0000     		.align	2
  74              	.LC2:
  75 0010 4C315152 		.ascii	"L1QRx\000"
  75      7800
  76 0016 0000     		.align	2
  77              	.LC3:
  78 0018 48315154 		.ascii	"H1QTx\000"
  78      7800
  79 001e 0000     		.align	2
  80              	.LC4:
  81 0020 48325154 		.ascii	"H2QTx\000"
  81      7800
  82 0026 0000     		.align	2
  83              	.LC5:
  84 0028 4C325152 		.ascii	"L2QRx\000"
  84      7800
  85 002e 0000     		.align	2
  86              	.LC6:
  87 0030 4E6F726D 		.ascii	"NormallyFull\000"
  87      616C6C79 
  87      46756C6C 
  87      00
  88 003d 000000   		.align	2
  89              	.LC7:
  90 0040 4E6F726D 		.ascii	"NormallyEmpty\000"
  90      616C6C79 
  90      456D7074 
  90      7900
  91 004e 0000     		.section	.text.vStartInterruptQueueTasks,"ax",%progbits
  92              		.align	2
  93              		.global	vStartInterruptQueueTasks
  94              		.thumb
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 3


  95              		.thumb_func
  96              		.type	vStartInterruptQueueTasks, %function
  97              	vStartInterruptQueueTasks:
  98              	.LFB68:
  99              		.file 1 "..\\..\\Common\\Minimal\\IntQueue.c"
   1:..\..\Common\Minimal/IntQueue.c **** /*
   2:..\..\Common\Minimal/IntQueue.c ****  * FreeRTOS Kernel V10.0.1
   3:..\..\Common\Minimal/IntQueue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\Common\Minimal/IntQueue.c ****  *
   5:..\..\Common\Minimal/IntQueue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\Common\Minimal/IntQueue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\Common\Minimal/IntQueue.c ****  * the Software without restriction, including without limitation the rights to
   8:..\..\Common\Minimal/IntQueue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\Common\Minimal/IntQueue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\Common\Minimal/IntQueue.c ****  * subject to the following conditions:
  11:..\..\Common\Minimal/IntQueue.c ****  *
  12:..\..\Common\Minimal/IntQueue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\Common\Minimal/IntQueue.c ****  * copies or substantial portions of the Software.
  14:..\..\Common\Minimal/IntQueue.c ****  *
  15:..\..\Common\Minimal/IntQueue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\Common\Minimal/IntQueue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\Common\Minimal/IntQueue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\Common\Minimal/IntQueue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\Common\Minimal/IntQueue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\Common\Minimal/IntQueue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\Common\Minimal/IntQueue.c ****  *
  22:..\..\Common\Minimal/IntQueue.c ****  * http://www.FreeRTOS.org
  23:..\..\Common\Minimal/IntQueue.c ****  * http://aws.amazon.com/freertos
  24:..\..\Common\Minimal/IntQueue.c ****  *
  25:..\..\Common\Minimal/IntQueue.c ****  * 1 tab == 4 spaces!
  26:..\..\Common\Minimal/IntQueue.c ****  */
  27:..\..\Common\Minimal/IntQueue.c **** 
  28:..\..\Common\Minimal/IntQueue.c **** /*
  29:..\..\Common\Minimal/IntQueue.c ****  * This file defines one of the more complex set of demo/test tasks.  They are
  30:..\..\Common\Minimal/IntQueue.c ****  * designed to stress test the queue implementation though pseudo simultaneous
  31:..\..\Common\Minimal/IntQueue.c ****  * multiple reads and multiple writes from both tasks of varying priority and
  32:..\..\Common\Minimal/IntQueue.c ****  * interrupts.  The interrupts are prioritised such to ensure that nesting
  33:..\..\Common\Minimal/IntQueue.c ****  * occurs (for those ports that support it).
  34:..\..\Common\Minimal/IntQueue.c ****  *
  35:..\..\Common\Minimal/IntQueue.c ****  * The test ensures that, while being accessed from three tasks and two
  36:..\..\Common\Minimal/IntQueue.c ****  * interrupts, all the data sent to the queues is also received from
  37:..\..\Common\Minimal/IntQueue.c ****  * the same queue, and that no duplicate items are either sent or received.
  38:..\..\Common\Minimal/IntQueue.c ****  * The tests also ensure that a low priority task is never able to successfully
  39:..\..\Common\Minimal/IntQueue.c ****  * read from or write to a queue when a task of higher priority is attempting
  40:..\..\Common\Minimal/IntQueue.c ****  * the same operation.
  41:..\..\Common\Minimal/IntQueue.c ****  */
  42:..\..\Common\Minimal/IntQueue.c **** 
  43:..\..\Common\Minimal/IntQueue.c **** /* Standard includes. */
  44:..\..\Common\Minimal/IntQueue.c **** #include <string.h>
  45:..\..\Common\Minimal/IntQueue.c **** 
  46:..\..\Common\Minimal/IntQueue.c **** /* SafeRTOS includes. */
  47:..\..\Common\Minimal/IntQueue.c **** #include "FreeRTOS.h"
  48:..\..\Common\Minimal/IntQueue.c **** #include "queue.h"
  49:..\..\Common\Minimal/IntQueue.c **** #include "task.h"
  50:..\..\Common\Minimal/IntQueue.c **** 
  51:..\..\Common\Minimal/IntQueue.c **** /* Demo app includes. */
  52:..\..\Common\Minimal/IntQueue.c **** #include "IntQueue.h"
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 4


  53:..\..\Common\Minimal/IntQueue.c **** #include "IntQueueTimer.h"
  54:..\..\Common\Minimal/IntQueue.c **** 
  55:..\..\Common\Minimal/IntQueue.c **** #if( INCLUDE_eTaskGetState != 1 )
  56:..\..\Common\Minimal/IntQueue.c **** 	#error INCLUDE_eTaskGetState must be set to 1 in FreeRTOSConfig.h to use this demo file.
  57:..\..\Common\Minimal/IntQueue.c **** #endif
  58:..\..\Common\Minimal/IntQueue.c **** 
  59:..\..\Common\Minimal/IntQueue.c **** /* Priorities used by test tasks. */
  60:..\..\Common\Minimal/IntQueue.c **** #ifndef intqHIGHER_PRIORITY
  61:..\..\Common\Minimal/IntQueue.c **** 	#define intqHIGHER_PRIORITY		( configMAX_PRIORITIES - 2 )
  62:..\..\Common\Minimal/IntQueue.c **** #endif
  63:..\..\Common\Minimal/IntQueue.c **** #define intqLOWER_PRIORITY		( tskIDLE_PRIORITY )
  64:..\..\Common\Minimal/IntQueue.c **** 
  65:..\..\Common\Minimal/IntQueue.c **** /* The number of values to send/receive before checking that all values were
  66:..\..\Common\Minimal/IntQueue.c **** processed as expected. */
  67:..\..\Common\Minimal/IntQueue.c **** #define intqNUM_VALUES_TO_LOG	( 200 )
  68:..\..\Common\Minimal/IntQueue.c **** #define intqSHORT_DELAY			( 140 )
  69:..\..\Common\Minimal/IntQueue.c **** 
  70:..\..\Common\Minimal/IntQueue.c **** /* The value by which the value being sent to or received from a queue should
  71:..\..\Common\Minimal/IntQueue.c **** increment past intqNUM_VALUES_TO_LOG before we check that all values have been
  72:..\..\Common\Minimal/IntQueue.c **** sent/received correctly.  This is done to ensure that all tasks and interrupts
  73:..\..\Common\Minimal/IntQueue.c **** accessing the queue have completed their accesses with the
  74:..\..\Common\Minimal/IntQueue.c **** intqNUM_VALUES_TO_LOG range. */
  75:..\..\Common\Minimal/IntQueue.c **** #define intqVALUE_OVERRUN		( 50 )
  76:..\..\Common\Minimal/IntQueue.c **** 
  77:..\..\Common\Minimal/IntQueue.c **** /* The delay used by the polling task.  A short delay is used for code
  78:..\..\Common\Minimal/IntQueue.c **** coverage. */
  79:..\..\Common\Minimal/IntQueue.c **** #define intqONE_TICK_DELAY		( 1 )
  80:..\..\Common\Minimal/IntQueue.c **** 
  81:..\..\Common\Minimal/IntQueue.c **** /* Each task and interrupt is given a unique identifier.  This value is used to
  82:..\..\Common\Minimal/IntQueue.c **** identify which task sent or received each value.  The identifier is also used
  83:..\..\Common\Minimal/IntQueue.c **** to distinguish between two tasks that are running the same task function. */
  84:..\..\Common\Minimal/IntQueue.c **** #define intqHIGH_PRIORITY_TASK1	( ( UBaseType_t ) 1 )
  85:..\..\Common\Minimal/IntQueue.c **** #define intqHIGH_PRIORITY_TASK2	( ( UBaseType_t ) 2 )
  86:..\..\Common\Minimal/IntQueue.c **** #define intqLOW_PRIORITY_TASK	( ( UBaseType_t ) 3 )
  87:..\..\Common\Minimal/IntQueue.c **** #define intqFIRST_INTERRUPT		( ( UBaseType_t ) 4 )
  88:..\..\Common\Minimal/IntQueue.c **** #define intqSECOND_INTERRUPT	( ( UBaseType_t ) 5 )
  89:..\..\Common\Minimal/IntQueue.c **** #define intqQUEUE_LENGTH		( ( UBaseType_t ) 10 )
  90:..\..\Common\Minimal/IntQueue.c **** 
  91:..\..\Common\Minimal/IntQueue.c **** /* At least intqMIN_ACCEPTABLE_TASK_COUNT values should be sent to/received
  92:..\..\Common\Minimal/IntQueue.c **** from each queue by each task, otherwise an error is detected. */
  93:..\..\Common\Minimal/IntQueue.c **** #define intqMIN_ACCEPTABLE_TASK_COUNT		( 5 )
  94:..\..\Common\Minimal/IntQueue.c **** 
  95:..\..\Common\Minimal/IntQueue.c **** /* Send the next value to the queue that is normally empty.  This is called
  96:..\..\Common\Minimal/IntQueue.c **** from within the interrupts. */
  97:..\..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_EMPTY_TX()																							\
  98:..\..\Common\Minimal/IntQueue.c **** 	if( xQueueIsQueueFullFromISR( xNormallyEmptyQueue ) != pdTRUE )															\
  99:..\..\Common\Minimal/IntQueue.c **** 	{																														\
 100:..\..\Common\Minimal/IntQueue.c **** 	UBaseType_t uxSavedInterruptStatus;																						\
 101:..\..\Common\Minimal/IntQueue.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();															\
 102:..\..\Common\Minimal/IntQueue.c **** 		{																													\
 103:..\..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyEmptyQueue++;																					\
 104:..\..\Common\Minimal/IntQueue.c **** 			if( xQueueSendFromISR( xNormallyEmptyQueue, ( void * ) &uxValueForNormallyEmptyQueue, &xHigherPr
 105:..\..\Common\Minimal/IntQueue.c **** 			{																												\
 106:..\..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue--;																				\
 107:..\..\Common\Minimal/IntQueue.c **** 			}																												\
 108:..\..\Common\Minimal/IntQueue.c **** 		}																													\
 109:..\..\Common\Minimal/IntQueue.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );														\
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 5


 110:..\..\Common\Minimal/IntQueue.c **** 	}																														\
 111:..\..\Common\Minimal/IntQueue.c **** 
 112:..\..\Common\Minimal/IntQueue.c **** /* Send the next value to the queue that is normally full.  This is called
 113:..\..\Common\Minimal/IntQueue.c **** from within the interrupts. */
 114:..\..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_FULL_TX()																								\
 115:..\..\Common\Minimal/IntQueue.c **** 	if( xQueueIsQueueFullFromISR( xNormallyFullQueue ) != pdTRUE )															\
 116:..\..\Common\Minimal/IntQueue.c **** 	{																														\
 117:..\..\Common\Minimal/IntQueue.c **** 	UBaseType_t uxSavedInterruptStatus;																						\
 118:..\..\Common\Minimal/IntQueue.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();															\
 119:..\..\Common\Minimal/IntQueue.c **** 		{																													\
 120:..\..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;																					\
 121:..\..\Common\Minimal/IntQueue.c **** 			if( xQueueSendFromISR( xNormallyFullQueue, ( void * ) &uxValueForNormallyFullQueue, &xHigherPrio
 122:..\..\Common\Minimal/IntQueue.c **** 			{																												\
 123:..\..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyFullQueue--;																				\
 124:..\..\Common\Minimal/IntQueue.c **** 			} 																												\
 125:..\..\Common\Minimal/IntQueue.c **** 		}																													\
 126:..\..\Common\Minimal/IntQueue.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );														\
 127:..\..\Common\Minimal/IntQueue.c **** 	}																														\
 128:..\..\Common\Minimal/IntQueue.c **** 
 129:..\..\Common\Minimal/IntQueue.c **** /* Receive a value from the normally empty queue.  This is called from within
 130:..\..\Common\Minimal/IntQueue.c **** an interrupt. */
 131:..\..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_EMPTY_RX()																			\
 132:..\..\Common\Minimal/IntQueue.c **** 	if( xQueueReceiveFromISR( xNormallyEmptyQueue, &uxRxedValue, &xHigherPriorityTaskWoken ) != pdPASS
 133:..\..\Common\Minimal/IntQueue.c **** 	{																										\
 134:..\..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );																	\
 135:..\..\Common\Minimal/IntQueue.c **** 	}																										\
 136:..\..\Common\Minimal/IntQueue.c **** 	else																									\
 137:..\..\Common\Minimal/IntQueue.c **** 	{																										\
 138:..\..\Common\Minimal/IntQueue.c **** 		prvRecordValue_NormallyEmpty( uxRxedValue, intqSECOND_INTERRUPT );									\
 139:..\..\Common\Minimal/IntQueue.c **** 	}
 140:..\..\Common\Minimal/IntQueue.c **** 
 141:..\..\Common\Minimal/IntQueue.c **** /* Receive a value from the normally full queue.  This is called from within
 142:..\..\Common\Minimal/IntQueue.c **** an interrupt. */
 143:..\..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_FULL_RX()																				\
 144:..\..\Common\Minimal/IntQueue.c **** 	if( xQueueReceiveFromISR( xNormallyFullQueue, &uxRxedValue, &xHigherPriorityTaskWoken ) == pdPASS 
 145:..\..\Common\Minimal/IntQueue.c **** 	{																										\
 146:..\..\Common\Minimal/IntQueue.c **** 		prvRecordValue_NormallyFull( uxRxedValue, intqSECOND_INTERRUPT );									\
 147:..\..\Common\Minimal/IntQueue.c **** 	}																										\
 148:..\..\Common\Minimal/IntQueue.c **** 
 149:..\..\Common\Minimal/IntQueue.c **** 
 150:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 151:..\..\Common\Minimal/IntQueue.c **** 
 152:..\..\Common\Minimal/IntQueue.c **** /* The two queues used by the test. */
 153:..\..\Common\Minimal/IntQueue.c **** static QueueHandle_t xNormallyEmptyQueue, xNormallyFullQueue;
 154:..\..\Common\Minimal/IntQueue.c **** 
 155:..\..\Common\Minimal/IntQueue.c **** /* Variables used to detect a stall in one of the tasks. */
 156:..\..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t uxHighPriorityLoops1 = 0, uxHighPriorityLoops2 = 0, uxLowPriorityLoops1
 157:..\..\Common\Minimal/IntQueue.c **** 
 158:..\..\Common\Minimal/IntQueue.c **** /* Any unexpected behaviour sets xErrorStatus to fail and log the line that
 159:..\..\Common\Minimal/IntQueue.c **** caused the error in xErrorLine. */
 160:..\..\Common\Minimal/IntQueue.c **** static BaseType_t xErrorStatus = pdPASS;
 161:..\..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t xErrorLine = ( UBaseType_t ) 0;
 162:..\..\Common\Minimal/IntQueue.c **** 
 163:..\..\Common\Minimal/IntQueue.c **** /* Used for sequencing between tasks. */
 164:..\..\Common\Minimal/IntQueue.c **** static BaseType_t xWasSuspended = pdFALSE;
 165:..\..\Common\Minimal/IntQueue.c **** 
 166:..\..\Common\Minimal/IntQueue.c **** /* The values that are sent to the queues.  An incremented value is sent each
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 6


 167:..\..\Common\Minimal/IntQueue.c **** time to each queue. */
 168:..\..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t uxValueForNormallyEmptyQueue = 0, uxValueForNormallyFullQueue = 0;
 169:..\..\Common\Minimal/IntQueue.c **** 
 170:..\..\Common\Minimal/IntQueue.c **** /* A handle to some of the tasks is required so they can be suspended/resumed. */
 171:..\..\Common\Minimal/IntQueue.c **** TaskHandle_t xHighPriorityNormallyEmptyTask1, xHighPriorityNormallyEmptyTask2, xHighPriorityNormall
 172:..\..\Common\Minimal/IntQueue.c **** 
 173:..\..\Common\Minimal/IntQueue.c **** /* When a value is received in a queue the value is ticked off in the array
 174:..\..\Common\Minimal/IntQueue.c **** the array position of the value is set to a the identifier of the task or
 175:..\..\Common\Minimal/IntQueue.c **** interrupt that accessed the queue.  This way missing or duplicate values can be
 176:..\..\Common\Minimal/IntQueue.c **** detected. */
 177:..\..\Common\Minimal/IntQueue.c **** static uint8_t ucNormallyEmptyReceivedValues[ intqNUM_VALUES_TO_LOG ] = { 0 };
 178:..\..\Common\Minimal/IntQueue.c **** static uint8_t ucNormallyFullReceivedValues[ intqNUM_VALUES_TO_LOG ] = { 0 };
 179:..\..\Common\Minimal/IntQueue.c **** 
 180:..\..\Common\Minimal/IntQueue.c **** /* The test tasks themselves. */
 181:..\..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyEmptyTask( void *pvParameters );
 182:..\..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyFullTask( void *pvParameters );
 183:..\..\Common\Minimal/IntQueue.c **** static void prvHigherPriorityNormallyEmptyTask( void *pvParameters );
 184:..\..\Common\Minimal/IntQueue.c **** static void prv1stHigherPriorityNormallyFullTask( void *pvParameters );
 185:..\..\Common\Minimal/IntQueue.c **** static void prv2ndHigherPriorityNormallyFullTask( void *pvParameters );
 186:..\..\Common\Minimal/IntQueue.c **** 
 187:..\..\Common\Minimal/IntQueue.c **** /* Used to mark the positions within the ucNormallyEmptyReceivedValues and
 188:..\..\Common\Minimal/IntQueue.c **** ucNormallyFullReceivedValues arrays, while checking for duplicates. */
 189:..\..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyEmpty( UBaseType_t uxValue, UBaseType_t uxSource );
 190:..\..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyFull( UBaseType_t uxValue, UBaseType_t uxSource );
 191:..\..\Common\Minimal/IntQueue.c **** 
 192:..\..\Common\Minimal/IntQueue.c **** /* Logs the line on which an error occurred. */
 193:..\..\Common\Minimal/IntQueue.c **** static void prvQueueAccessLogError( UBaseType_t uxLine );
 194:..\..\Common\Minimal/IntQueue.c **** 
 195:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 196:..\..\Common\Minimal/IntQueue.c **** 
 197:..\..\Common\Minimal/IntQueue.c **** void vStartInterruptQueueTasks( void )
 198:..\..\Common\Minimal/IntQueue.c **** {
 100              		.loc 1 198 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 82B0     		sub	sp, sp, #8
 109              		.cfi_def_cfa_offset 16
 110 0004 02AF     		add	r7, sp, #8
 111              		.cfi_def_cfa 7, 8
 199:..\..\Common\Minimal/IntQueue.c **** 	/* Start the test tasks. */
 200:..\..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvHigherPriorityNormallyEmptyTask, "H1QRx", configMINIMAL_STACK_SIZE, ( void * ) int
 112              		.loc 1 200 0
 113 0006 0323     		movs	r3, #3
 114 0008 0093     		str	r3, [sp]
 115 000a 2C4B     		ldr	r3, .L2
 116 000c 0193     		str	r3, [sp, #4]
 117 000e 2C48     		ldr	r0, .L2+4
 118 0010 2C49     		ldr	r1, .L2+8
 119 0012 6422     		movs	r2, #100
 120 0014 0123     		movs	r3, #1
 121 0016 FFF7FEFF 		bl	xTaskCreate
 201:..\..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvHigherPriorityNormallyEmptyTask, "H2QRx", configMINIMAL_STACK_SIZE, ( void * ) int
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 7


 122              		.loc 1 201 0
 123 001a 0323     		movs	r3, #3
 124 001c 0093     		str	r3, [sp]
 125 001e 2A4B     		ldr	r3, .L2+12
 126 0020 0193     		str	r3, [sp, #4]
 127 0022 2748     		ldr	r0, .L2+4
 128 0024 2949     		ldr	r1, .L2+16
 129 0026 6422     		movs	r2, #100
 130 0028 0223     		movs	r3, #2
 131 002a FFF7FEFF 		bl	xTaskCreate
 202:..\..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvLowerPriorityNormallyEmptyTask, "L1QRx", configMINIMAL_STACK_SIZE, NULL, intqLOWER
 132              		.loc 1 202 0
 133 002e 0023     		movs	r3, #0
 134 0030 0093     		str	r3, [sp]
 135 0032 0023     		movs	r3, #0
 136 0034 0193     		str	r3, [sp, #4]
 137 0036 2648     		ldr	r0, .L2+20
 138 0038 2649     		ldr	r1, .L2+24
 139 003a 6422     		movs	r2, #100
 140 003c 0023     		movs	r3, #0
 141 003e FFF7FEFF 		bl	xTaskCreate
 203:..\..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prv1stHigherPriorityNormallyFullTask, "H1QTx", configMINIMAL_STACK_SIZE, ( void * ) i
 142              		.loc 1 203 0
 143 0042 0323     		movs	r3, #3
 144 0044 0093     		str	r3, [sp]
 145 0046 244B     		ldr	r3, .L2+28
 146 0048 0193     		str	r3, [sp, #4]
 147 004a 2448     		ldr	r0, .L2+32
 148 004c 2449     		ldr	r1, .L2+36
 149 004e 6422     		movs	r2, #100
 150 0050 0123     		movs	r3, #1
 151 0052 FFF7FEFF 		bl	xTaskCreate
 204:..\..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prv2ndHigherPriorityNormallyFullTask, "H2QTx", configMINIMAL_STACK_SIZE, ( void * ) i
 152              		.loc 1 204 0
 153 0056 0323     		movs	r3, #3
 154 0058 0093     		str	r3, [sp]
 155 005a 224B     		ldr	r3, .L2+40
 156 005c 0193     		str	r3, [sp, #4]
 157 005e 2248     		ldr	r0, .L2+44
 158 0060 2249     		ldr	r1, .L2+48
 159 0062 6422     		movs	r2, #100
 160 0064 0223     		movs	r3, #2
 161 0066 FFF7FEFF 		bl	xTaskCreate
 205:..\..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvLowerPriorityNormallyFullTask, "L2QRx", configMINIMAL_STACK_SIZE, NULL, intqLOWER_
 162              		.loc 1 205 0
 163 006a 0023     		movs	r3, #0
 164 006c 0093     		str	r3, [sp]
 165 006e 0023     		movs	r3, #0
 166 0070 0193     		str	r3, [sp, #4]
 167 0072 1F48     		ldr	r0, .L2+52
 168 0074 1F49     		ldr	r1, .L2+56
 169 0076 6422     		movs	r2, #100
 170 0078 0023     		movs	r3, #0
 171 007a FFF7FEFF 		bl	xTaskCreate
 206:..\..\Common\Minimal/IntQueue.c **** 
 207:..\..\Common\Minimal/IntQueue.c **** 	/* Create the queues that are accessed by multiple tasks and multiple
 208:..\..\Common\Minimal/IntQueue.c **** 	interrupts. */
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 8


 209:..\..\Common\Minimal/IntQueue.c **** 	xNormallyFullQueue = xQueueCreate( intqQUEUE_LENGTH, ( UBaseType_t ) sizeof( UBaseType_t ) );
 172              		.loc 1 209 0
 173 007e 0A20     		movs	r0, #10
 174 0080 0421     		movs	r1, #4
 175 0082 0022     		movs	r2, #0
 176 0084 FFF7FEFF 		bl	xQueueGenericCreate
 177 0088 0246     		mov	r2, r0
 178 008a 1B4B     		ldr	r3, .L2+60
 179 008c 1A60     		str	r2, [r3]
 210:..\..\Common\Minimal/IntQueue.c **** 	xNormallyEmptyQueue = xQueueCreate( intqQUEUE_LENGTH, ( UBaseType_t ) sizeof( UBaseType_t ) );
 180              		.loc 1 210 0
 181 008e 0A20     		movs	r0, #10
 182 0090 0421     		movs	r1, #4
 183 0092 0022     		movs	r2, #0
 184 0094 FFF7FEFF 		bl	xQueueGenericCreate
 185 0098 0246     		mov	r2, r0
 186 009a 184B     		ldr	r3, .L2+64
 187 009c 1A60     		str	r2, [r3]
 211:..\..\Common\Minimal/IntQueue.c **** 
 212:..\..\Common\Minimal/IntQueue.c **** 	/* vQueueAddToRegistry() adds the queue to the queue registry, if one is
 213:..\..\Common\Minimal/IntQueue.c **** 	in use.  The queue registry is provided as a means for kernel aware
 214:..\..\Common\Minimal/IntQueue.c **** 	debuggers to locate queues and has no purpose if a kernel aware debugger
 215:..\..\Common\Minimal/IntQueue.c **** 	is not being used.  The call to vQueueAddToRegistry() will be removed
 216:..\..\Common\Minimal/IntQueue.c **** 	by the pre-processor if configQUEUE_REGISTRY_SIZE is not defined or is
 217:..\..\Common\Minimal/IntQueue.c **** 	defined to be less than 1. */
 218:..\..\Common\Minimal/IntQueue.c **** 	vQueueAddToRegistry( xNormallyFullQueue, "NormallyFull" );
 188              		.loc 1 218 0
 189 009e 164B     		ldr	r3, .L2+60
 190 00a0 1B68     		ldr	r3, [r3]
 191 00a2 1846     		mov	r0, r3
 192 00a4 1649     		ldr	r1, .L2+68
 193 00a6 FFF7FEFF 		bl	vQueueAddToRegistry
 219:..\..\Common\Minimal/IntQueue.c **** 	vQueueAddToRegistry( xNormallyEmptyQueue, "NormallyEmpty" );
 194              		.loc 1 219 0
 195 00aa 144B     		ldr	r3, .L2+64
 196 00ac 1B68     		ldr	r3, [r3]
 197 00ae 1846     		mov	r0, r3
 198 00b0 1449     		ldr	r1, .L2+72
 199 00b2 FFF7FEFF 		bl	vQueueAddToRegistry
 220:..\..\Common\Minimal/IntQueue.c **** }
 200              		.loc 1 220 0
 201 00b6 BD46     		mov	sp, r7
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 00b8 80BD     		pop	{r7, pc}
 205              	.L3:
 206 00ba 00BF     		.align	2
 207              	.L2:
 208 00bc 00000000 		.word	xHighPriorityNormallyEmptyTask1
 209 00c0 00000000 		.word	prvHigherPriorityNormallyEmptyTask
 210 00c4 00000000 		.word	.LC0
 211 00c8 00000000 		.word	xHighPriorityNormallyEmptyTask2
 212 00cc 08000000 		.word	.LC1
 213 00d0 00000000 		.word	prvLowerPriorityNormallyEmptyTask
 214 00d4 10000000 		.word	.LC2
 215 00d8 00000000 		.word	xHighPriorityNormallyFullTask1
 216 00dc 00000000 		.word	prv1stHigherPriorityNormallyFullTask
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 9


 217 00e0 18000000 		.word	.LC3
 218 00e4 00000000 		.word	xHighPriorityNormallyFullTask2
 219 00e8 00000000 		.word	prv2ndHigherPriorityNormallyFullTask
 220 00ec 20000000 		.word	.LC4
 221 00f0 00000000 		.word	prvLowerPriorityNormallyFullTask
 222 00f4 28000000 		.word	.LC5
 223 00f8 04000000 		.word	xNormallyFullQueue
 224 00fc 00000000 		.word	xNormallyEmptyQueue
 225 0100 30000000 		.word	.LC6
 226 0104 40000000 		.word	.LC7
 227              		.cfi_endproc
 228              	.LFE68:
 229              		.size	vStartInterruptQueueTasks, .-vStartInterruptQueueTasks
 230              		.section	.text.prvRecordValue_NormallyFull,"ax",%progbits
 231              		.align	2
 232              		.thumb
 233              		.thumb_func
 234              		.type	prvRecordValue_NormallyFull, %function
 235              	prvRecordValue_NormallyFull:
 236              	.LFB69:
 221:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 222:..\..\Common\Minimal/IntQueue.c **** 
 223:..\..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyFull( UBaseType_t uxValue, UBaseType_t uxSource )
 224:..\..\Common\Minimal/IntQueue.c **** {
 237              		.loc 1 224 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 82B0     		sub	sp, sp, #8
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 7860     		str	r0, [r7, #4]
 250 0008 3960     		str	r1, [r7]
 225:..\..\Common\Minimal/IntQueue.c **** 	if( uxValue < intqNUM_VALUES_TO_LOG )
 251              		.loc 1 225 0
 252 000a 7B68     		ldr	r3, [r7, #4]
 253 000c C72B     		cmp	r3, #199
 254 000e 0FD8     		bhi	.L4
 226:..\..\Common\Minimal/IntQueue.c **** 	{
 227:..\..\Common\Minimal/IntQueue.c **** 		/* We don't expect to receive the same value twice, so if the value
 228:..\..\Common\Minimal/IntQueue.c **** 		has already been marked as received an error has occurred. */
 229:..\..\Common\Minimal/IntQueue.c **** 		if( ucNormallyFullReceivedValues[ uxValue ] != 0x00 )
 255              		.loc 1 229 0
 256 0010 094A     		ldr	r2, .L7
 257 0012 7B68     		ldr	r3, [r7, #4]
 258 0014 1344     		add	r3, r3, r2
 259 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 0018 002B     		cmp	r3, #0
 261 001a 02D0     		beq	.L6
 230:..\..\Common\Minimal/IntQueue.c **** 		{
 231:..\..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 262              		.loc 1 231 0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 10


 263 001c E720     		movs	r0, #231
 264 001e FFF7FEFF 		bl	prvQueueAccessLogError
 265              	.L6:
 232:..\..\Common\Minimal/IntQueue.c **** 		}
 233:..\..\Common\Minimal/IntQueue.c **** 
 234:..\..\Common\Minimal/IntQueue.c **** 		/* Log that this value has been received. */
 235:..\..\Common\Minimal/IntQueue.c **** 		ucNormallyFullReceivedValues[ uxValue ] = ( uint8_t ) uxSource;
 266              		.loc 1 235 0
 267 0022 3B68     		ldr	r3, [r7]
 268 0024 D9B2     		uxtb	r1, r3
 269 0026 044A     		ldr	r2, .L7
 270 0028 7B68     		ldr	r3, [r7, #4]
 271 002a 1344     		add	r3, r3, r2
 272 002c 0A46     		mov	r2, r1
 273 002e 1A70     		strb	r2, [r3]
 274              	.L4:
 236:..\..\Common\Minimal/IntQueue.c **** 	}
 237:..\..\Common\Minimal/IntQueue.c **** }
 275              		.loc 1 237 0
 276 0030 0837     		adds	r7, r7, #8
 277              		.cfi_def_cfa_offset 8
 278 0032 BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 0034 80BD     		pop	{r7, pc}
 282              	.L8:
 283 0036 00BF     		.align	2
 284              	.L7:
 285 0038 F0000000 		.word	ucNormallyFullReceivedValues
 286              		.cfi_endproc
 287              	.LFE69:
 288              		.size	prvRecordValue_NormallyFull, .-prvRecordValue_NormallyFull
 289              		.section	.text.prvRecordValue_NormallyEmpty,"ax",%progbits
 290              		.align	2
 291              		.thumb
 292              		.thumb_func
 293              		.type	prvRecordValue_NormallyEmpty, %function
 294              	prvRecordValue_NormallyEmpty:
 295              	.LFB70:
 238:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 239:..\..\Common\Minimal/IntQueue.c **** 
 240:..\..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyEmpty( UBaseType_t uxValue, UBaseType_t uxSource )
 241:..\..\Common\Minimal/IntQueue.c **** {
 296              		.loc 1 241 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 82B0     		sub	sp, sp, #8
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 7860     		str	r0, [r7, #4]
 309 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 11


 242:..\..\Common\Minimal/IntQueue.c **** 	if( uxValue < intqNUM_VALUES_TO_LOG )
 310              		.loc 1 242 0
 311 000a 7B68     		ldr	r3, [r7, #4]
 312 000c C72B     		cmp	r3, #199
 313 000e 0FD8     		bhi	.L9
 243:..\..\Common\Minimal/IntQueue.c **** 	{
 244:..\..\Common\Minimal/IntQueue.c **** 		/* We don't expect to receive the same value twice, so if the value
 245:..\..\Common\Minimal/IntQueue.c **** 		has already been marked as received an error has occurred. */
 246:..\..\Common\Minimal/IntQueue.c **** 		if( ucNormallyEmptyReceivedValues[ uxValue ] != 0x00 )
 314              		.loc 1 246 0
 315 0010 094A     		ldr	r2, .L12
 316 0012 7B68     		ldr	r3, [r7, #4]
 317 0014 1344     		add	r3, r3, r2
 318 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319 0018 002B     		cmp	r3, #0
 320 001a 02D0     		beq	.L11
 247:..\..\Common\Minimal/IntQueue.c **** 		{
 248:..\..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 321              		.loc 1 248 0
 322 001c F820     		movs	r0, #248
 323 001e FFF7FEFF 		bl	prvQueueAccessLogError
 324              	.L11:
 249:..\..\Common\Minimal/IntQueue.c **** 		}
 250:..\..\Common\Minimal/IntQueue.c **** 
 251:..\..\Common\Minimal/IntQueue.c **** 		/* Log that this value has been received. */
 252:..\..\Common\Minimal/IntQueue.c **** 		ucNormallyEmptyReceivedValues[ uxValue ] = ( uint8_t ) uxSource;
 325              		.loc 1 252 0
 326 0022 3B68     		ldr	r3, [r7]
 327 0024 D9B2     		uxtb	r1, r3
 328 0026 044A     		ldr	r2, .L12
 329 0028 7B68     		ldr	r3, [r7, #4]
 330 002a 1344     		add	r3, r3, r2
 331 002c 0A46     		mov	r2, r1
 332 002e 1A70     		strb	r2, [r3]
 333              	.L9:
 253:..\..\Common\Minimal/IntQueue.c **** 	}
 254:..\..\Common\Minimal/IntQueue.c **** }
 334              		.loc 1 254 0
 335 0030 0837     		adds	r7, r7, #8
 336              		.cfi_def_cfa_offset 8
 337 0032 BD46     		mov	sp, r7
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 0034 80BD     		pop	{r7, pc}
 341              	.L13:
 342 0036 00BF     		.align	2
 343              	.L12:
 344 0038 28000000 		.word	ucNormallyEmptyReceivedValues
 345              		.cfi_endproc
 346              	.LFE70:
 347              		.size	prvRecordValue_NormallyEmpty, .-prvRecordValue_NormallyEmpty
 348              		.section	.text.prvQueueAccessLogError,"ax",%progbits
 349              		.align	2
 350              		.thumb
 351              		.thumb_func
 352              		.type	prvQueueAccessLogError, %function
 353              	prvQueueAccessLogError:
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 12


 354              	.LFB71:
 255:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 256:..\..\Common\Minimal/IntQueue.c **** 
 257:..\..\Common\Minimal/IntQueue.c **** static void prvQueueAccessLogError( UBaseType_t uxLine )
 258:..\..\Common\Minimal/IntQueue.c **** {
 355              		.loc 1 258 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              		.cfi_def_cfa_offset 16
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
 259:..\..\Common\Minimal/IntQueue.c **** 	/* Latch the line number that caused the error. */
 260:..\..\Common\Minimal/IntQueue.c **** 	xErrorLine = uxLine;
 368              		.loc 1 260 0
 369 0008 054A     		ldr	r2, .L15
 370 000a 7B68     		ldr	r3, [r7, #4]
 371 000c 1360     		str	r3, [r2]
 261:..\..\Common\Minimal/IntQueue.c **** 	xErrorStatus = pdFAIL;
 372              		.loc 1 261 0
 373 000e 054B     		ldr	r3, .L15+4
 374 0010 0022     		movs	r2, #0
 375 0012 1A60     		str	r2, [r3]
 262:..\..\Common\Minimal/IntQueue.c **** }
 376              		.loc 1 262 0
 377 0014 0C37     		adds	r7, r7, #12
 378              		.cfi_def_cfa_offset 4
 379 0016 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 0018 5DF8047B 		ldr	r7, [sp], #4
 383              		.cfi_restore 7
 384              		.cfi_def_cfa_offset 0
 385 001c 7047     		bx	lr
 386              	.L16:
 387 001e 00BF     		.align	2
 388              	.L15:
 389 0020 18000000 		.word	xErrorLine
 390 0024 00000000 		.word	xErrorStatus
 391              		.cfi_endproc
 392              	.LFE71:
 393              		.size	prvQueueAccessLogError, .-prvQueueAccessLogError
 394              		.section	.text.prvHigherPriorityNormallyEmptyTask,"ax",%progbits
 395              		.align	2
 396              		.thumb
 397              		.thumb_func
 398              		.type	prvHigherPriorityNormallyEmptyTask, %function
 399              	prvHigherPriorityNormallyEmptyTask:
 400              	.LFB72:
 263:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 264:..\..\Common\Minimal/IntQueue.c **** 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 13


 265:..\..\Common\Minimal/IntQueue.c **** static void prvHigherPriorityNormallyEmptyTask( void *pvParameters )
 266:..\..\Common\Minimal/IntQueue.c **** {
 401              		.loc 1 266 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 40
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 0000 80B5     		push	{r7, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 8AB0     		sub	sp, sp, #40
 410              		.cfi_def_cfa_offset 48
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 413 0006 7860     		str	r0, [r7, #4]
 267:..\..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxed, ux, uxTask1, uxTask2, uxInterrupts, uxErrorCount1 = 0, uxErrorCount2 = 0;
 414              		.loc 1 267 0
 415 0008 0023     		movs	r3, #0
 416 000a 7B61     		str	r3, [r7, #20]
 417 000c 0023     		movs	r3, #0
 418 000e 3B61     		str	r3, [r7, #16]
 268:..\..\Common\Minimal/IntQueue.c **** 
 269:..\..\Common\Minimal/IntQueue.c **** 	/* The timer should not be started until after the scheduler has started.
 270:..\..\Common\Minimal/IntQueue.c **** 	More than one task is running this code so we check the parameter value
 271:..\..\Common\Minimal/IntQueue.c **** 	to determine which task should start the timer. */
 272:..\..\Common\Minimal/IntQueue.c **** 	if( ( UBaseType_t ) pvParameters == intqHIGH_PRIORITY_TASK1 )
 419              		.loc 1 272 0
 420 0010 7B68     		ldr	r3, [r7, #4]
 421 0012 012B     		cmp	r3, #1
 422 0014 01D1     		bne	.L18
 273:..\..\Common\Minimal/IntQueue.c **** 	{
 274:..\..\Common\Minimal/IntQueue.c **** 		vInitialiseTimerForIntQueueTest();
 423              		.loc 1 274 0
 424 0016 FFF7FEFF 		bl	vInitialiseTimerForIntQueueTest
 425              	.L18:
 275:..\..\Common\Minimal/IntQueue.c **** 	}
 276:..\..\Common\Minimal/IntQueue.c **** 
 277:..\..\Common\Minimal/IntQueue.c **** 	for( ;; )
 278:..\..\Common\Minimal/IntQueue.c **** 	{
 279:..\..\Common\Minimal/IntQueue.c **** 		/* Block waiting to receive a value from the normally empty queue.
 280:..\..\Common\Minimal/IntQueue.c **** 		Interrupts will write to the queue so we should receive a value. */
 281:..\..\Common\Minimal/IntQueue.c **** 		if( xQueueReceive( xNormallyEmptyQueue, &uxRxed, intqSHORT_DELAY ) != pdPASS )
 426              		.loc 1 281 0
 427 001a 4F4B     		ldr	r3, .L35
 428 001c 1A68     		ldr	r2, [r3]
 429 001e 07F10C03 		add	r3, r7, #12
 430 0022 1046     		mov	r0, r2
 431 0024 1946     		mov	r1, r3
 432 0026 8C22     		movs	r2, #140
 433 0028 FFF7FEFF 		bl	xQueueReceive
 434 002c 0346     		mov	r3, r0
 435 002e 012B     		cmp	r3, #1
 436 0030 04D0     		beq	.L19
 282:..\..\Common\Minimal/IntQueue.c **** 		{
 283:..\..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 437              		.loc 1 283 0
 438 0032 40F21B10 		movw	r0, #283
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 14


 439 0036 FFF7FEFF 		bl	prvQueueAccessLogError
 440 003a 05E0     		b	.L20
 441              	.L19:
 284:..\..\Common\Minimal/IntQueue.c **** 		}
 285:..\..\Common\Minimal/IntQueue.c **** 		else
 286:..\..\Common\Minimal/IntQueue.c **** 		{
 287:..\..\Common\Minimal/IntQueue.c **** 			/* Note which value was received so we can check all expected
 288:..\..\Common\Minimal/IntQueue.c **** 			values are received and no values are duplicated. */
 289:..\..\Common\Minimal/IntQueue.c **** 			prvRecordValue_NormallyEmpty( uxRxed, ( UBaseType_t ) pvParameters );
 442              		.loc 1 289 0
 443 003c FA68     		ldr	r2, [r7, #12]
 444 003e 7B68     		ldr	r3, [r7, #4]
 445 0040 1046     		mov	r0, r2
 446 0042 1946     		mov	r1, r3
 447 0044 FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 448              	.L20:
 290:..\..\Common\Minimal/IntQueue.c **** 		}
 291:..\..\Common\Minimal/IntQueue.c **** 
 292:..\..\Common\Minimal/IntQueue.c **** 		/* Ensure the other task running this code gets a chance to execute. */
 293:..\..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 449              		.loc 1 293 0
 450 0048 444B     		ldr	r3, .L35+4
 451 004a 4FF08052 		mov	r2, #268435456
 452 004e 1A60     		str	r2, [r3]
 453              	@ 293 "..\..\Common\Minimal\IntQueue.c" 1
 454 0050 BFF34F8F 		dsb
 455              	@ 0 "" 2
 456              	@ 293 "..\..\Common\Minimal\IntQueue.c" 1
 457 0054 BFF36F8F 		isb
 458              	@ 0 "" 2
 294:..\..\Common\Minimal/IntQueue.c **** 
 295:..\..\Common\Minimal/IntQueue.c **** 		if( ( UBaseType_t ) pvParameters == intqHIGH_PRIORITY_TASK1 )
 459              		.loc 1 295 0
 460              		.thumb
 461 0058 7B68     		ldr	r3, [r7, #4]
 462 005a 012B     		cmp	r3, #1
 463 005c 7BD1     		bne	.L21
 296:..\..\Common\Minimal/IntQueue.c **** 		{
 297:..\..\Common\Minimal/IntQueue.c **** 			/* Have we received all the expected values? */
 298:..\..\Common\Minimal/IntQueue.c **** 			if( uxValueForNormallyEmptyQueue > ( intqNUM_VALUES_TO_LOG + intqVALUE_OVERRUN ) )
 464              		.loc 1 298 0
 465 005e 404B     		ldr	r3, .L35+8
 466 0060 1B68     		ldr	r3, [r3]
 467 0062 FA2B     		cmp	r3, #250
 468 0064 77D9     		bls	.L21
 299:..\..\Common\Minimal/IntQueue.c **** 			{
 300:..\..\Common\Minimal/IntQueue.c **** 				vTaskSuspend( xHighPriorityNormallyEmptyTask2 );
 469              		.loc 1 300 0
 470 0066 3F4B     		ldr	r3, .L35+12
 471 0068 1B68     		ldr	r3, [r3]
 472 006a 1846     		mov	r0, r3
 473 006c FFF7FEFF 		bl	vTaskSuspend
 301:..\..\Common\Minimal/IntQueue.c **** 
 302:..\..\Common\Minimal/IntQueue.c **** 				uxTask1 = 0;
 474              		.loc 1 302 0
 475 0070 0023     		movs	r3, #0
 476 0072 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 15


 303:..\..\Common\Minimal/IntQueue.c **** 				uxTask2 = 0;
 477              		.loc 1 303 0
 478 0074 0023     		movs	r3, #0
 479 0076 FB61     		str	r3, [r7, #28]
 304:..\..\Common\Minimal/IntQueue.c **** 				uxInterrupts = 0;
 480              		.loc 1 304 0
 481 0078 0023     		movs	r3, #0
 482 007a BB61     		str	r3, [r7, #24]
 305:..\..\Common\Minimal/IntQueue.c **** 
 306:..\..\Common\Minimal/IntQueue.c **** 				/* Loop through the array, checking that both tasks have
 307:..\..\Common\Minimal/IntQueue.c **** 				placed values into the array, and that no values are missing.
 308:..\..\Common\Minimal/IntQueue.c **** 				Start at 1 as we expect position 0 to be unused. */
 309:..\..\Common\Minimal/IntQueue.c **** 				for( ux = 1; ux < intqNUM_VALUES_TO_LOG; ux++ )
 483              		.loc 1 309 0
 484 007c 0123     		movs	r3, #1
 485 007e 7B62     		str	r3, [r7, #36]
 486 0080 2AE0     		b	.L22
 487              	.L27:
 310:..\..\Common\Minimal/IntQueue.c **** 				{
 311:..\..\Common\Minimal/IntQueue.c **** 					if( ucNormallyEmptyReceivedValues[ ux ] == 0 )
 488              		.loc 1 311 0
 489 0082 394A     		ldr	r2, .L35+16
 490 0084 7B6A     		ldr	r3, [r7, #36]
 491 0086 1344     		add	r3, r3, r2
 492 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 493 008a 002B     		cmp	r3, #0
 494 008c 04D1     		bne	.L23
 312:..\..\Common\Minimal/IntQueue.c **** 					{
 313:..\..\Common\Minimal/IntQueue.c **** 						/* A value is missing. */
 314:..\..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 495              		.loc 1 314 0
 496 008e 4FF49D70 		mov	r0, #314
 497 0092 FFF7FEFF 		bl	prvQueueAccessLogError
 498 0096 1CE0     		b	.L24
 499              	.L23:
 315:..\..\Common\Minimal/IntQueue.c **** 					}
 316:..\..\Common\Minimal/IntQueue.c **** 					else
 317:..\..\Common\Minimal/IntQueue.c **** 					{
 318:..\..\Common\Minimal/IntQueue.c **** 						if( ucNormallyEmptyReceivedValues[ ux ] == intqHIGH_PRIORITY_TASK1 )
 500              		.loc 1 318 0
 501 0098 334A     		ldr	r2, .L35+16
 502 009a 7B6A     		ldr	r3, [r7, #36]
 503 009c 1344     		add	r3, r3, r2
 504 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 505 00a0 012B     		cmp	r3, #1
 506 00a2 03D1     		bne	.L25
 319:..\..\Common\Minimal/IntQueue.c **** 						{
 320:..\..\Common\Minimal/IntQueue.c **** 							/* Value was placed into the array by task 1. */
 321:..\..\Common\Minimal/IntQueue.c **** 							uxTask1++;
 507              		.loc 1 321 0
 508 00a4 3B6A     		ldr	r3, [r7, #32]
 509 00a6 0133     		adds	r3, r3, #1
 510 00a8 3B62     		str	r3, [r7, #32]
 511 00aa 12E0     		b	.L24
 512              	.L25:
 322:..\..\Common\Minimal/IntQueue.c **** 						}
 323:..\..\Common\Minimal/IntQueue.c **** 						else if( ucNormallyEmptyReceivedValues[ ux ] == intqHIGH_PRIORITY_TASK2 )
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 16


 513              		.loc 1 323 0
 514 00ac 2E4A     		ldr	r2, .L35+16
 515 00ae 7B6A     		ldr	r3, [r7, #36]
 516 00b0 1344     		add	r3, r3, r2
 517 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 00b4 022B     		cmp	r3, #2
 519 00b6 03D1     		bne	.L26
 324:..\..\Common\Minimal/IntQueue.c **** 						{
 325:..\..\Common\Minimal/IntQueue.c **** 							/* Value was placed into the array by task 2. */
 326:..\..\Common\Minimal/IntQueue.c **** 							uxTask2++;
 520              		.loc 1 326 0
 521 00b8 FB69     		ldr	r3, [r7, #28]
 522 00ba 0133     		adds	r3, r3, #1
 523 00bc FB61     		str	r3, [r7, #28]
 524 00be 08E0     		b	.L24
 525              	.L26:
 327:..\..\Common\Minimal/IntQueue.c **** 						}
 328:..\..\Common\Minimal/IntQueue.c **** 						else if( ucNormallyEmptyReceivedValues[ ux ] == intqSECOND_INTERRUPT )
 526              		.loc 1 328 0
 527 00c0 294A     		ldr	r2, .L35+16
 528 00c2 7B6A     		ldr	r3, [r7, #36]
 529 00c4 1344     		add	r3, r3, r2
 530 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 531 00c8 052B     		cmp	r3, #5
 532 00ca 02D1     		bne	.L24
 329:..\..\Common\Minimal/IntQueue.c **** 						{
 330:..\..\Common\Minimal/IntQueue.c **** 							uxInterrupts++;
 533              		.loc 1 330 0
 534 00cc BB69     		ldr	r3, [r7, #24]
 535 00ce 0133     		adds	r3, r3, #1
 536 00d0 BB61     		str	r3, [r7, #24]
 537              	.L24:
 309:..\..\Common\Minimal/IntQueue.c **** 				{
 538              		.loc 1 309 0 discriminator 2
 539 00d2 7B6A     		ldr	r3, [r7, #36]
 540 00d4 0133     		adds	r3, r3, #1
 541 00d6 7B62     		str	r3, [r7, #36]
 542              	.L22:
 309:..\..\Common\Minimal/IntQueue.c **** 				{
 543              		.loc 1 309 0 is_stmt 0 discriminator 1
 544 00d8 7B6A     		ldr	r3, [r7, #36]
 545 00da C72B     		cmp	r3, #199
 546 00dc D1D9     		bls	.L27
 331:..\..\Common\Minimal/IntQueue.c **** 						}
 332:..\..\Common\Minimal/IntQueue.c **** 					}
 333:..\..\Common\Minimal/IntQueue.c **** 				}
 334:..\..\Common\Minimal/IntQueue.c **** 
 335:..\..\Common\Minimal/IntQueue.c **** 				if( uxTask1 < intqMIN_ACCEPTABLE_TASK_COUNT )
 547              		.loc 1 335 0 is_stmt 1
 548 00de 3B6A     		ldr	r3, [r7, #32]
 549 00e0 042B     		cmp	r3, #4
 550 00e2 0AD8     		bhi	.L28
 336:..\..\Common\Minimal/IntQueue.c **** 				{
 337:..\..\Common\Minimal/IntQueue.c **** 					/* Only task 2 seemed to log any values. */
 338:..\..\Common\Minimal/IntQueue.c **** 					uxErrorCount1++;
 551              		.loc 1 338 0
 552 00e4 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 17


 553 00e6 0133     		adds	r3, r3, #1
 554 00e8 7B61     		str	r3, [r7, #20]
 339:..\..\Common\Minimal/IntQueue.c **** 					if( uxErrorCount1 > 2 )
 555              		.loc 1 339 0
 556 00ea 7B69     		ldr	r3, [r7, #20]
 557 00ec 022B     		cmp	r3, #2
 558 00ee 06D9     		bls	.L30
 340:..\..\Common\Minimal/IntQueue.c **** 					{
 341:..\..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 559              		.loc 1 341 0
 560 00f0 40F25510 		movw	r0, #341
 561 00f4 FFF7FEFF 		bl	prvQueueAccessLogError
 562 00f8 01E0     		b	.L30
 563              	.L28:
 342:..\..\Common\Minimal/IntQueue.c **** 					}
 343:..\..\Common\Minimal/IntQueue.c **** 				}
 344:..\..\Common\Minimal/IntQueue.c **** 				else
 345:..\..\Common\Minimal/IntQueue.c **** 				{
 346:..\..\Common\Minimal/IntQueue.c **** 					uxErrorCount1 = 0;
 564              		.loc 1 346 0
 565 00fa 0023     		movs	r3, #0
 566 00fc 7B61     		str	r3, [r7, #20]
 567              	.L30:
 347:..\..\Common\Minimal/IntQueue.c **** 				}
 348:..\..\Common\Minimal/IntQueue.c **** 
 349:..\..\Common\Minimal/IntQueue.c **** 				if( uxTask2 < intqMIN_ACCEPTABLE_TASK_COUNT  )
 568              		.loc 1 349 0
 569 00fe FB69     		ldr	r3, [r7, #28]
 570 0100 042B     		cmp	r3, #4
 571 0102 0AD8     		bhi	.L31
 350:..\..\Common\Minimal/IntQueue.c **** 				{
 351:..\..\Common\Minimal/IntQueue.c **** 					/* Only task 1 seemed to log any values. */
 352:..\..\Common\Minimal/IntQueue.c **** 					uxErrorCount2++;
 572              		.loc 1 352 0
 573 0104 3B69     		ldr	r3, [r7, #16]
 574 0106 0133     		adds	r3, r3, #1
 575 0108 3B61     		str	r3, [r7, #16]
 353:..\..\Common\Minimal/IntQueue.c **** 					if( uxErrorCount2 > 2 )
 576              		.loc 1 353 0
 577 010a 3B69     		ldr	r3, [r7, #16]
 578 010c 022B     		cmp	r3, #2
 579 010e 06D9     		bls	.L33
 354:..\..\Common\Minimal/IntQueue.c **** 					{
 355:..\..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 580              		.loc 1 355 0
 581 0110 40F26310 		movw	r0, #355
 582 0114 FFF7FEFF 		bl	prvQueueAccessLogError
 583 0118 01E0     		b	.L33
 584              	.L31:
 356:..\..\Common\Minimal/IntQueue.c **** 					}
 357:..\..\Common\Minimal/IntQueue.c **** 				}
 358:..\..\Common\Minimal/IntQueue.c **** 				else
 359:..\..\Common\Minimal/IntQueue.c **** 				{
 360:..\..\Common\Minimal/IntQueue.c **** 					uxErrorCount2 = 0;
 585              		.loc 1 360 0
 586 011a 0023     		movs	r3, #0
 587 011c 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 18


 588              	.L33:
 361:..\..\Common\Minimal/IntQueue.c **** 				}
 362:..\..\Common\Minimal/IntQueue.c **** 
 363:..\..\Common\Minimal/IntQueue.c **** 				if( uxInterrupts == 0 )
 589              		.loc 1 363 0
 590 011e BB69     		ldr	r3, [r7, #24]
 591 0120 002B     		cmp	r3, #0
 592 0122 03D1     		bne	.L34
 364:..\..\Common\Minimal/IntQueue.c **** 				{
 365:..\..\Common\Minimal/IntQueue.c **** 					prvQueueAccessLogError( __LINE__ );
 593              		.loc 1 365 0
 594 0124 40F26D10 		movw	r0, #365
 595 0128 FFF7FEFF 		bl	prvQueueAccessLogError
 596              	.L34:
 366:..\..\Common\Minimal/IntQueue.c **** 				}
 367:..\..\Common\Minimal/IntQueue.c **** 
 368:..\..\Common\Minimal/IntQueue.c **** 				/* Clear the array again, ready to start a new cycle. */
 369:..\..\Common\Minimal/IntQueue.c **** 				memset( ucNormallyEmptyReceivedValues, 0x00, sizeof( ucNormallyEmptyReceivedValues ) );
 597              		.loc 1 369 0
 598 012c 0E48     		ldr	r0, .L35+16
 599 012e 0021     		movs	r1, #0
 600 0130 C822     		movs	r2, #200
 601 0132 FFF7FEFF 		bl	memset
 370:..\..\Common\Minimal/IntQueue.c **** 
 371:..\..\Common\Minimal/IntQueue.c **** 				uxHighPriorityLoops1++;
 602              		.loc 1 371 0
 603 0136 0D4B     		ldr	r3, .L35+20
 604 0138 1B68     		ldr	r3, [r3]
 605 013a 0133     		adds	r3, r3, #1
 606 013c 0B4A     		ldr	r2, .L35+20
 607 013e 1360     		str	r3, [r2]
 372:..\..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue = 0;
 608              		.loc 1 372 0
 609 0140 074B     		ldr	r3, .L35+8
 610 0142 0022     		movs	r2, #0
 611 0144 1A60     		str	r2, [r3]
 373:..\..\Common\Minimal/IntQueue.c **** 
 374:..\..\Common\Minimal/IntQueue.c **** 				/* Suspend ourselves, allowing the lower priority task to
 375:..\..\Common\Minimal/IntQueue.c **** 				actually receive something from the queue.  Until now it
 376:..\..\Common\Minimal/IntQueue.c **** 				will have been prevented from doing so by the higher
 377:..\..\Common\Minimal/IntQueue.c **** 				priority tasks.  The lower priority task will resume us
 378:..\..\Common\Minimal/IntQueue.c **** 				if it receives something.  We will then resume the other
 379:..\..\Common\Minimal/IntQueue.c **** 				higher priority task. */
 380:..\..\Common\Minimal/IntQueue.c **** 				vTaskSuspend( NULL );
 612              		.loc 1 380 0
 613 0146 0020     		movs	r0, #0
 614 0148 FFF7FEFF 		bl	vTaskSuspend
 381:..\..\Common\Minimal/IntQueue.c **** 				vTaskResume( xHighPriorityNormallyEmptyTask2 );
 615              		.loc 1 381 0
 616 014c 054B     		ldr	r3, .L35+12
 617 014e 1B68     		ldr	r3, [r3]
 618 0150 1846     		mov	r0, r3
 619 0152 FFF7FEFF 		bl	vTaskResume
 620              	.L21:
 382:..\..\Common\Minimal/IntQueue.c **** 			}
 383:..\..\Common\Minimal/IntQueue.c **** 		}
 384:..\..\Common\Minimal/IntQueue.c **** 	}
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 19


 621              		.loc 1 384 0
 622 0156 60E7     		b	.L18
 623              	.L36:
 624              		.align	2
 625              	.L35:
 626 0158 00000000 		.word	xNormallyEmptyQueue
 627 015c 04ED00E0 		.word	-536810236
 628 0160 20000000 		.word	uxValueForNormallyEmptyQueue
 629 0164 00000000 		.word	xHighPriorityNormallyEmptyTask2
 630 0168 28000000 		.word	ucNormallyEmptyReceivedValues
 631 016c 08000000 		.word	uxHighPriorityLoops1
 632              		.cfi_endproc
 633              	.LFE72:
 634              		.size	prvHigherPriorityNormallyEmptyTask, .-prvHigherPriorityNormallyEmptyTask
 635              		.section	.text.prvLowerPriorityNormallyEmptyTask,"ax",%progbits
 636              		.align	2
 637              		.thumb
 638              		.thumb_func
 639              		.type	prvLowerPriorityNormallyEmptyTask, %function
 640              	prvLowerPriorityNormallyEmptyTask:
 641              	.LFB73:
 385:..\..\Common\Minimal/IntQueue.c **** }
 386:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 387:..\..\Common\Minimal/IntQueue.c **** 
 388:..\..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyEmptyTask( void *pvParameters )
 389:..\..\Common\Minimal/IntQueue.c **** {
 642              		.loc 1 389 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 16
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646 0000 80B5     		push	{r7, lr}
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 84B0     		sub	sp, sp, #16
 651              		.cfi_def_cfa_offset 24
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 654 0006 7860     		str	r0, [r7, #4]
 655              	.L42:
 390:..\..\Common\Minimal/IntQueue.c **** UBaseType_t uxValue, uxRxed;
 391:..\..\Common\Minimal/IntQueue.c **** 
 392:..\..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 393:..\..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 394:..\..\Common\Minimal/IntQueue.c **** 
 395:..\..\Common\Minimal/IntQueue.c **** 	for( ;; )
 396:..\..\Common\Minimal/IntQueue.c **** 	{
 397:..\..\Common\Minimal/IntQueue.c **** 		if( xQueueReceive( xNormallyEmptyQueue, &uxRxed, intqONE_TICK_DELAY ) != errQUEUE_EMPTY )
 656              		.loc 1 397 0
 657 0008 274B     		ldr	r3, .L43
 658 000a 1A68     		ldr	r2, [r3]
 659 000c 07F10803 		add	r3, r7, #8
 660 0010 1046     		mov	r0, r2
 661 0012 1946     		mov	r1, r3
 662 0014 0122     		movs	r2, #1
 663 0016 FFF7FEFF 		bl	xQueueReceive
 664 001a 0346     		mov	r3, r0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 20


 665 001c 002B     		cmp	r3, #0
 666 001e 1BD0     		beq	.L38
 398:..\..\Common\Minimal/IntQueue.c **** 		{
 399:..\..\Common\Minimal/IntQueue.c **** 			/* A value should only be obtained when the high priority task is
 400:..\..\Common\Minimal/IntQueue.c **** 			suspended. */
 401:..\..\Common\Minimal/IntQueue.c **** 			if( eTaskGetState( xHighPriorityNormallyEmptyTask1 ) != eSuspended )
 667              		.loc 1 401 0
 668 0020 224B     		ldr	r3, .L43+4
 669 0022 1B68     		ldr	r3, [r3]
 670 0024 1846     		mov	r0, r3
 671 0026 FFF7FEFF 		bl	eTaskGetState
 672 002a 0346     		mov	r3, r0
 673 002c 032B     		cmp	r3, #3
 674 002e 03D0     		beq	.L39
 402:..\..\Common\Minimal/IntQueue.c **** 			{
 403:..\..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 675              		.loc 1 403 0
 676 0030 40F29310 		movw	r0, #403
 677 0034 FFF7FEFF 		bl	prvQueueAccessLogError
 678              	.L39:
 404:..\..\Common\Minimal/IntQueue.c **** 			}
 405:..\..\Common\Minimal/IntQueue.c **** 
 406:..\..\Common\Minimal/IntQueue.c **** 			prvRecordValue_NormallyEmpty( uxRxed, intqLOW_PRIORITY_TASK );
 679              		.loc 1 406 0
 680 0038 BB68     		ldr	r3, [r7, #8]
 681 003a 1846     		mov	r0, r3
 682 003c 0321     		movs	r1, #3
 683 003e FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 407:..\..\Common\Minimal/IntQueue.c **** 
 408:..\..\Common\Minimal/IntQueue.c **** 			/* Wake the higher priority task again. */
 409:..\..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyEmptyTask1 );
 684              		.loc 1 409 0
 685 0042 1A4B     		ldr	r3, .L43+4
 686 0044 1B68     		ldr	r3, [r3]
 687 0046 1846     		mov	r0, r3
 688 0048 FFF7FEFF 		bl	vTaskResume
 410:..\..\Common\Minimal/IntQueue.c **** 			uxLowPriorityLoops1++;
 689              		.loc 1 410 0
 690 004c 184B     		ldr	r3, .L43+8
 691 004e 1B68     		ldr	r3, [r3]
 692 0050 0133     		adds	r3, r3, #1
 693 0052 174A     		ldr	r2, .L43+8
 694 0054 1360     		str	r3, [r2]
 695 0056 25E0     		b	.L40
 696              	.L38:
 411:..\..\Common\Minimal/IntQueue.c **** 		}
 412:..\..\Common\Minimal/IntQueue.c **** 		else
 413:..\..\Common\Minimal/IntQueue.c **** 		{
 414:..\..\Common\Minimal/IntQueue.c **** 			/* Raise our priority while we send so we can preempt the higher
 415:..\..\Common\Minimal/IntQueue.c **** 			priority task, and ensure we get the Tx value into the queue. */
 416:..\..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqHIGHER_PRIORITY + 1 );
 697              		.loc 1 416 0
 698 0058 0020     		movs	r0, #0
 699 005a 0421     		movs	r1, #4
 700 005c FFF7FEFF 		bl	vTaskPrioritySet
 417:..\..\Common\Minimal/IntQueue.c **** 
 418:..\..\Common\Minimal/IntQueue.c **** 			portENTER_CRITICAL();
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 21


 701              		.loc 1 418 0
 702 0060 FFF7FEFF 		bl	vPortEnterCritical
 419:..\..\Common\Minimal/IntQueue.c **** 			{
 420:..\..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue++;
 703              		.loc 1 420 0
 704 0064 134B     		ldr	r3, .L43+12
 705 0066 1B68     		ldr	r3, [r3]
 706 0068 0133     		adds	r3, r3, #1
 707 006a 124A     		ldr	r2, .L43+12
 708 006c 1360     		str	r3, [r2]
 421:..\..\Common\Minimal/IntQueue.c **** 				uxValue = uxValueForNormallyEmptyQueue;
 709              		.loc 1 421 0
 710 006e 114B     		ldr	r3, .L43+12
 711 0070 1B68     		ldr	r3, [r3]
 712 0072 FB60     		str	r3, [r7, #12]
 422:..\..\Common\Minimal/IntQueue.c **** 			}
 423:..\..\Common\Minimal/IntQueue.c **** 			portEXIT_CRITICAL();
 713              		.loc 1 423 0
 714 0074 FFF7FEFF 		bl	vPortExitCritical
 424:..\..\Common\Minimal/IntQueue.c **** 
 425:..\..\Common\Minimal/IntQueue.c **** 			if( xQueueSend( xNormallyEmptyQueue, &uxValue, portMAX_DELAY ) != pdPASS )
 715              		.loc 1 425 0
 716 0078 0B4B     		ldr	r3, .L43
 717 007a 1A68     		ldr	r2, [r3]
 718 007c 07F10C03 		add	r3, r7, #12
 719 0080 1046     		mov	r0, r2
 720 0082 1946     		mov	r1, r3
 721 0084 4FF0FF32 		mov	r2, #-1
 722 0088 0023     		movs	r3, #0
 723 008a FFF7FEFF 		bl	xQueueGenericSend
 724 008e 0346     		mov	r3, r0
 725 0090 012B     		cmp	r3, #1
 726 0092 03D0     		beq	.L41
 426:..\..\Common\Minimal/IntQueue.c **** 			{
 427:..\..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 727              		.loc 1 427 0
 728 0094 40F2AB10 		movw	r0, #427
 729 0098 FFF7FEFF 		bl	prvQueueAccessLogError
 730              	.L41:
 428:..\..\Common\Minimal/IntQueue.c **** 			}
 429:..\..\Common\Minimal/IntQueue.c **** 
 430:..\..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqLOWER_PRIORITY );
 731              		.loc 1 430 0
 732 009c 0020     		movs	r0, #0
 733 009e 0021     		movs	r1, #0
 734 00a0 FFF7FEFF 		bl	vTaskPrioritySet
 735              	.L40:
 431:..\..\Common\Minimal/IntQueue.c **** 		}
 432:..\..\Common\Minimal/IntQueue.c **** 	}
 736              		.loc 1 432 0
 737 00a4 B0E7     		b	.L42
 738              	.L44:
 739 00a6 00BF     		.align	2
 740              	.L43:
 741 00a8 00000000 		.word	xNormallyEmptyQueue
 742 00ac 00000000 		.word	xHighPriorityNormallyEmptyTask1
 743 00b0 10000000 		.word	uxLowPriorityLoops1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 22


 744 00b4 20000000 		.word	uxValueForNormallyEmptyQueue
 745              		.cfi_endproc
 746              	.LFE73:
 747              		.size	prvLowerPriorityNormallyEmptyTask, .-prvLowerPriorityNormallyEmptyTask
 748              		.section	.text.prv1stHigherPriorityNormallyFullTask,"ax",%progbits
 749              		.align	2
 750              		.thumb
 751              		.thumb_func
 752              		.type	prv1stHigherPriorityNormallyFullTask, %function
 753              	prv1stHigherPriorityNormallyFullTask:
 754              	.LFB74:
 433:..\..\Common\Minimal/IntQueue.c **** }
 434:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 435:..\..\Common\Minimal/IntQueue.c **** 
 436:..\..\Common\Minimal/IntQueue.c **** static void prv1stHigherPriorityNormallyFullTask( void *pvParameters )
 437:..\..\Common\Minimal/IntQueue.c **** {
 755              		.loc 1 437 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 24
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 86B0     		sub	sp, sp, #24
 764              		.cfi_def_cfa_offset 32
 765 0004 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 767 0006 7860     		str	r0, [r7, #4]
 438:..\..\Common\Minimal/IntQueue.c **** UBaseType_t uxValueToTx, ux, uxInterrupts;
 439:..\..\Common\Minimal/IntQueue.c **** 
 440:..\..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 441:..\..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 442:..\..\Common\Minimal/IntQueue.c **** 
 443:..\..\Common\Minimal/IntQueue.c **** 	/* Make sure the queue starts full or near full.  >> 1 as there are two
 444:..\..\Common\Minimal/IntQueue.c **** 	high priority tasks. */
 445:..\..\Common\Minimal/IntQueue.c **** 	for( ux = 0; ux < ( intqQUEUE_LENGTH >> 1 ); ux++ )
 768              		.loc 1 445 0
 769 0008 0023     		movs	r3, #0
 770 000a 7B61     		str	r3, [r7, #20]
 771 000c 18E0     		b	.L46
 772              	.L47:
 446:..\..\Common\Minimal/IntQueue.c **** 	{
 447:..\..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 773              		.loc 1 447 0 discriminator 3
 774 000e FFF7FEFF 		bl	vPortEnterCritical
 448:..\..\Common\Minimal/IntQueue.c **** 		{
 449:..\..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 775              		.loc 1 449 0 discriminator 3
 776 0012 484B     		ldr	r3, .L57
 777 0014 1B68     		ldr	r3, [r3]
 778 0016 0133     		adds	r3, r3, #1
 779 0018 464A     		ldr	r2, .L57
 780 001a 1360     		str	r3, [r2]
 450:..\..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 781              		.loc 1 450 0 discriminator 3
 782 001c 454B     		ldr	r3, .L57
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 23


 783 001e 1B68     		ldr	r3, [r3]
 784 0020 FB60     		str	r3, [r7, #12]
 451:..\..\Common\Minimal/IntQueue.c **** 		}
 452:..\..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 785              		.loc 1 452 0 discriminator 3
 786 0022 FFF7FEFF 		bl	vPortExitCritical
 453:..\..\Common\Minimal/IntQueue.c **** 
 454:..\..\Common\Minimal/IntQueue.c **** 		xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY );
 787              		.loc 1 454 0 discriminator 3
 788 0026 444B     		ldr	r3, .L57+4
 789 0028 1A68     		ldr	r2, [r3]
 790 002a 07F10C03 		add	r3, r7, #12
 791 002e 1046     		mov	r0, r2
 792 0030 1946     		mov	r1, r3
 793 0032 8C22     		movs	r2, #140
 794 0034 0023     		movs	r3, #0
 795 0036 FFF7FEFF 		bl	xQueueGenericSend
 445:..\..\Common\Minimal/IntQueue.c **** 	{
 796              		.loc 1 445 0 discriminator 3
 797 003a 7B69     		ldr	r3, [r7, #20]
 798 003c 0133     		adds	r3, r3, #1
 799 003e 7B61     		str	r3, [r7, #20]
 800              	.L46:
 445:..\..\Common\Minimal/IntQueue.c **** 	{
 801              		.loc 1 445 0 is_stmt 0 discriminator 1
 802 0040 7B69     		ldr	r3, [r7, #20]
 803 0042 042B     		cmp	r3, #4
 804 0044 E3D9     		bls	.L47
 805              	.L56:
 455:..\..\Common\Minimal/IntQueue.c **** 	}
 456:..\..\Common\Minimal/IntQueue.c **** 
 457:..\..\Common\Minimal/IntQueue.c **** 	for( ;; )
 458:..\..\Common\Minimal/IntQueue.c **** 	{
 459:..\..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 806              		.loc 1 459 0 is_stmt 1
 807 0046 FFF7FEFF 		bl	vPortEnterCritical
 460:..\..\Common\Minimal/IntQueue.c **** 		{
 461:..\..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 808              		.loc 1 461 0
 809 004a 3A4B     		ldr	r3, .L57
 810 004c 1B68     		ldr	r3, [r3]
 811 004e 0133     		adds	r3, r3, #1
 812 0050 384A     		ldr	r2, .L57
 813 0052 1360     		str	r3, [r2]
 462:..\..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 814              		.loc 1 462 0
 815 0054 374B     		ldr	r3, .L57
 816 0056 1B68     		ldr	r3, [r3]
 817 0058 FB60     		str	r3, [r7, #12]
 463:..\..\Common\Minimal/IntQueue.c **** 		}
 464:..\..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 818              		.loc 1 464 0
 819 005a FFF7FEFF 		bl	vPortExitCritical
 465:..\..\Common\Minimal/IntQueue.c **** 
 466:..\..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY ) != pdPASS )
 820              		.loc 1 466 0
 821 005e 364B     		ldr	r3, .L57+4
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 24


 822 0060 1A68     		ldr	r2, [r3]
 823 0062 07F10C03 		add	r3, r7, #12
 824 0066 1046     		mov	r0, r2
 825 0068 1946     		mov	r1, r3
 826 006a 8C22     		movs	r2, #140
 827 006c 0023     		movs	r3, #0
 828 006e FFF7FEFF 		bl	xQueueGenericSend
 829 0072 0346     		mov	r3, r0
 830 0074 012B     		cmp	r3, #1
 831 0076 03D0     		beq	.L48
 467:..\..\Common\Minimal/IntQueue.c **** 		{
 468:..\..\Common\Minimal/IntQueue.c **** 			/* intqHIGH_PRIORITY_TASK2 is never suspended so we would not
 469:..\..\Common\Minimal/IntQueue.c **** 			expect it to ever time out. */
 470:..\..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 832              		.loc 1 470 0
 833 0078 4FF4EB70 		mov	r0, #470
 834 007c FFF7FEFF 		bl	prvQueueAccessLogError
 835              	.L48:
 471:..\..\Common\Minimal/IntQueue.c **** 		}
 472:..\..\Common\Minimal/IntQueue.c **** 
 473:..\..\Common\Minimal/IntQueue.c **** 		/* Allow the other task running this code to run. */
 474:..\..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 836              		.loc 1 474 0
 837 0080 2E4B     		ldr	r3, .L57+8
 838 0082 4FF08052 		mov	r2, #268435456
 839 0086 1A60     		str	r2, [r3]
 840              	@ 474 "..\..\Common\Minimal\IntQueue.c" 1
 841 0088 BFF34F8F 		dsb
 842              	@ 0 "" 2
 843              	@ 474 "..\..\Common\Minimal\IntQueue.c" 1
 844 008c BFF36F8F 		isb
 845              	@ 0 "" 2
 475:..\..\Common\Minimal/IntQueue.c **** 
 476:..\..\Common\Minimal/IntQueue.c **** 		/* Have all the expected values been sent to the queue? */
 477:..\..\Common\Minimal/IntQueue.c **** 		if( uxValueToTx > ( intqNUM_VALUES_TO_LOG + intqVALUE_OVERRUN ) )
 846              		.loc 1 477 0
 847              		.thumb
 848 0090 FB68     		ldr	r3, [r7, #12]
 849 0092 FA2B     		cmp	r3, #250
 850 0094 4DD9     		bls	.L49
 478:..\..\Common\Minimal/IntQueue.c **** 		{
 479:..\..\Common\Minimal/IntQueue.c **** 			/* Make sure the other high priority task completes its send of
 480:..\..\Common\Minimal/IntQueue.c **** 			any values below intqNUM_VALUE_TO_LOG. */
 481:..\..\Common\Minimal/IntQueue.c **** 			vTaskDelay( intqSHORT_DELAY );
 851              		.loc 1 481 0
 852 0096 8C20     		movs	r0, #140
 853 0098 FFF7FEFF 		bl	vTaskDelay
 482:..\..\Common\Minimal/IntQueue.c **** 
 483:..\..\Common\Minimal/IntQueue.c **** 			vTaskSuspend( xHighPriorityNormallyFullTask2 );
 854              		.loc 1 483 0
 855 009c 284B     		ldr	r3, .L57+12
 856 009e 1B68     		ldr	r3, [r3]
 857 00a0 1846     		mov	r0, r3
 858 00a2 FFF7FEFF 		bl	vTaskSuspend
 484:..\..\Common\Minimal/IntQueue.c **** 
 485:..\..\Common\Minimal/IntQueue.c **** 			if( xWasSuspended == pdTRUE )
 859              		.loc 1 485 0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 25


 860 00a6 274B     		ldr	r3, .L57+16
 861 00a8 1B68     		ldr	r3, [r3]
 862 00aa 012B     		cmp	r3, #1
 863 00ac 03D1     		bne	.L50
 486:..\..\Common\Minimal/IntQueue.c **** 			{
 487:..\..\Common\Minimal/IntQueue.c **** 				/* We would have expected the other high priority task to have
 488:..\..\Common\Minimal/IntQueue.c **** 				set this back to false by now. */
 489:..\..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 864              		.loc 1 489 0
 865 00ae 40F2E910 		movw	r0, #489
 866 00b2 FFF7FEFF 		bl	prvQueueAccessLogError
 867              	.L50:
 490:..\..\Common\Minimal/IntQueue.c **** 			}
 491:..\..\Common\Minimal/IntQueue.c **** 
 492:..\..\Common\Minimal/IntQueue.c **** 			/* Set the suspended flag so an error is not logged if the other
 493:..\..\Common\Minimal/IntQueue.c **** 			task recognises a time out when it is unsuspended. */
 494:..\..\Common\Minimal/IntQueue.c **** 			xWasSuspended = pdTRUE;
 868              		.loc 1 494 0
 869 00b6 234B     		ldr	r3, .L57+16
 870 00b8 0122     		movs	r2, #1
 871 00ba 1A60     		str	r2, [r3]
 495:..\..\Common\Minimal/IntQueue.c **** 
 496:..\..\Common\Minimal/IntQueue.c **** 			/* Check interrupts are also sending. */
 497:..\..\Common\Minimal/IntQueue.c **** 			uxInterrupts = 0U;
 872              		.loc 1 497 0
 873 00bc 0023     		movs	r3, #0
 874 00be 3B61     		str	r3, [r7, #16]
 498:..\..\Common\Minimal/IntQueue.c **** 
 499:..\..\Common\Minimal/IntQueue.c **** 			/* Start at 1 as we expect position 0 to be unused. */
 500:..\..\Common\Minimal/IntQueue.c **** 			for( ux = 1; ux < intqNUM_VALUES_TO_LOG; ux++ )
 875              		.loc 1 500 0
 876 00c0 0123     		movs	r3, #1
 877 00c2 7B61     		str	r3, [r7, #20]
 878 00c4 16E0     		b	.L51
 879              	.L54:
 501:..\..\Common\Minimal/IntQueue.c **** 			{
 502:..\..\Common\Minimal/IntQueue.c **** 				if( ucNormallyFullReceivedValues[ ux ] == 0 )
 880              		.loc 1 502 0
 881 00c6 204A     		ldr	r2, .L57+20
 882 00c8 7B69     		ldr	r3, [r7, #20]
 883 00ca 1344     		add	r3, r3, r2
 884 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 885 00ce 002B     		cmp	r3, #0
 886 00d0 04D1     		bne	.L52
 503:..\..\Common\Minimal/IntQueue.c **** 				{
 504:..\..\Common\Minimal/IntQueue.c **** 					/* A value was missing. */
 505:..\..\Common\Minimal/IntQueue.c **** 					prvQueueAccessLogError( __LINE__ );
 887              		.loc 1 505 0
 888 00d2 40F2F910 		movw	r0, #505
 889 00d6 FFF7FEFF 		bl	prvQueueAccessLogError
 890 00da 08E0     		b	.L53
 891              	.L52:
 506:..\..\Common\Minimal/IntQueue.c **** 				}
 507:..\..\Common\Minimal/IntQueue.c **** 				else if( ucNormallyFullReceivedValues[ ux ] == intqSECOND_INTERRUPT )
 892              		.loc 1 507 0
 893 00dc 1A4A     		ldr	r2, .L57+20
 894 00de 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 26


 895 00e0 1344     		add	r3, r3, r2
 896 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 897 00e4 052B     		cmp	r3, #5
 898 00e6 02D1     		bne	.L53
 508:..\..\Common\Minimal/IntQueue.c **** 				{
 509:..\..\Common\Minimal/IntQueue.c **** 					uxInterrupts++;
 899              		.loc 1 509 0
 900 00e8 3B69     		ldr	r3, [r7, #16]
 901 00ea 0133     		adds	r3, r3, #1
 902 00ec 3B61     		str	r3, [r7, #16]
 903              	.L53:
 500:..\..\Common\Minimal/IntQueue.c **** 			{
 904              		.loc 1 500 0 discriminator 2
 905 00ee 7B69     		ldr	r3, [r7, #20]
 906 00f0 0133     		adds	r3, r3, #1
 907 00f2 7B61     		str	r3, [r7, #20]
 908              	.L51:
 500:..\..\Common\Minimal/IntQueue.c **** 			{
 909              		.loc 1 500 0 is_stmt 0 discriminator 1
 910 00f4 7B69     		ldr	r3, [r7, #20]
 911 00f6 C72B     		cmp	r3, #199
 912 00f8 E5D9     		bls	.L54
 510:..\..\Common\Minimal/IntQueue.c **** 				}
 511:..\..\Common\Minimal/IntQueue.c **** 			}
 512:..\..\Common\Minimal/IntQueue.c **** 
 513:..\..\Common\Minimal/IntQueue.c **** 			if( uxInterrupts == 0 )
 913              		.loc 1 513 0 is_stmt 1
 914 00fa 3B69     		ldr	r3, [r7, #16]
 915 00fc 002B     		cmp	r3, #0
 916 00fe 03D1     		bne	.L55
 514:..\..\Common\Minimal/IntQueue.c **** 			{
 515:..\..\Common\Minimal/IntQueue.c **** 				/* No writes from interrupts were found.  Are interrupts
 516:..\..\Common\Minimal/IntQueue.c **** 				actually running? */
 517:..\..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 917              		.loc 1 517 0
 918 0100 40F20520 		movw	r0, #517
 919 0104 FFF7FEFF 		bl	prvQueueAccessLogError
 920              	.L55:
 518:..\..\Common\Minimal/IntQueue.c **** 			}
 519:..\..\Common\Minimal/IntQueue.c **** 
 520:..\..\Common\Minimal/IntQueue.c **** 			/* Reset the array ready for the next cycle. */
 521:..\..\Common\Minimal/IntQueue.c **** 			memset( ucNormallyFullReceivedValues, 0x00, sizeof( ucNormallyFullReceivedValues ) );
 921              		.loc 1 521 0
 922 0108 0F48     		ldr	r0, .L57+20
 923 010a 0021     		movs	r1, #0
 924 010c C822     		movs	r2, #200
 925 010e FFF7FEFF 		bl	memset
 522:..\..\Common\Minimal/IntQueue.c **** 
 523:..\..\Common\Minimal/IntQueue.c **** 			uxHighPriorityLoops2++;
 926              		.loc 1 523 0
 927 0112 0E4B     		ldr	r3, .L57+24
 928 0114 1B68     		ldr	r3, [r3]
 929 0116 0133     		adds	r3, r3, #1
 930 0118 0C4A     		ldr	r2, .L57+24
 931 011a 1360     		str	r3, [r2]
 524:..\..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue = 0;
 932              		.loc 1 524 0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 27


 933 011c 054B     		ldr	r3, .L57
 934 011e 0022     		movs	r2, #0
 935 0120 1A60     		str	r2, [r3]
 525:..\..\Common\Minimal/IntQueue.c **** 
 526:..\..\Common\Minimal/IntQueue.c **** 			/* Suspend ourselves, allowing the lower priority task to
 527:..\..\Common\Minimal/IntQueue.c **** 			actually receive something from the queue.  Until now it
 528:..\..\Common\Minimal/IntQueue.c **** 			will have been prevented from doing so by the higher
 529:..\..\Common\Minimal/IntQueue.c **** 			priority tasks.  The lower priority task will resume us
 530:..\..\Common\Minimal/IntQueue.c **** 			if it receives something.  We will then resume the other
 531:..\..\Common\Minimal/IntQueue.c **** 			higher priority task. */
 532:..\..\Common\Minimal/IntQueue.c **** 			vTaskSuspend( NULL );
 936              		.loc 1 532 0
 937 0122 0020     		movs	r0, #0
 938 0124 FFF7FEFF 		bl	vTaskSuspend
 533:..\..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyFullTask2 );
 939              		.loc 1 533 0
 940 0128 054B     		ldr	r3, .L57+12
 941 012a 1B68     		ldr	r3, [r3]
 942 012c 1846     		mov	r0, r3
 943 012e FFF7FEFF 		bl	vTaskResume
 944              	.L49:
 534:..\..\Common\Minimal/IntQueue.c **** 		}
 535:..\..\Common\Minimal/IntQueue.c **** 	}
 945              		.loc 1 535 0
 946 0132 88E7     		b	.L56
 947              	.L58:
 948              		.align	2
 949              	.L57:
 950 0134 24000000 		.word	uxValueForNormallyFullQueue
 951 0138 04000000 		.word	xNormallyFullQueue
 952 013c 04ED00E0 		.word	-536810236
 953 0140 00000000 		.word	xHighPriorityNormallyFullTask2
 954 0144 1C000000 		.word	xWasSuspended
 955 0148 F0000000 		.word	ucNormallyFullReceivedValues
 956 014c 0C000000 		.word	uxHighPriorityLoops2
 957              		.cfi_endproc
 958              	.LFE74:
 959              		.size	prv1stHigherPriorityNormallyFullTask, .-prv1stHigherPriorityNormallyFullTask
 960              		.section	.text.prv2ndHigherPriorityNormallyFullTask,"ax",%progbits
 961              		.align	2
 962              		.thumb
 963              		.thumb_func
 964              		.type	prv2ndHigherPriorityNormallyFullTask, %function
 965              	prv2ndHigherPriorityNormallyFullTask:
 966              	.LFB75:
 536:..\..\Common\Minimal/IntQueue.c **** }
 537:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 538:..\..\Common\Minimal/IntQueue.c **** 
 539:..\..\Common\Minimal/IntQueue.c **** static void prv2ndHigherPriorityNormallyFullTask( void *pvParameters )
 540:..\..\Common\Minimal/IntQueue.c **** {
 967              		.loc 1 540 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 16
 970              		@ frame_needed = 1, uses_anonymous_args = 0
 971 0000 80B5     		push	{r7, lr}
 972              		.cfi_def_cfa_offset 8
 973              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 28


 974              		.cfi_offset 14, -4
 975 0002 84B0     		sub	sp, sp, #16
 976              		.cfi_def_cfa_offset 24
 977 0004 00AF     		add	r7, sp, #0
 978              		.cfi_def_cfa_register 7
 979 0006 7860     		str	r0, [r7, #4]
 541:..\..\Common\Minimal/IntQueue.c **** UBaseType_t uxValueToTx, ux;
 542:..\..\Common\Minimal/IntQueue.c **** 
 543:..\..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 544:..\..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 545:..\..\Common\Minimal/IntQueue.c **** 
 546:..\..\Common\Minimal/IntQueue.c **** 	/* Make sure the queue starts full or near full.  >> 1 as there are two
 547:..\..\Common\Minimal/IntQueue.c **** 	high priority tasks. */
 548:..\..\Common\Minimal/IntQueue.c **** 	for( ux = 0; ux < ( intqQUEUE_LENGTH >> 1 ); ux++ )
 980              		.loc 1 548 0
 981 0008 0023     		movs	r3, #0
 982 000a FB60     		str	r3, [r7, #12]
 983 000c 18E0     		b	.L60
 984              	.L61:
 549:..\..\Common\Minimal/IntQueue.c **** 	{
 550:..\..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 985              		.loc 1 550 0 discriminator 3
 986 000e FFF7FEFF 		bl	vPortEnterCritical
 551:..\..\Common\Minimal/IntQueue.c **** 		{
 552:..\..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 987              		.loc 1 552 0 discriminator 3
 988 0012 234B     		ldr	r3, .L64
 989 0014 1B68     		ldr	r3, [r3]
 990 0016 0133     		adds	r3, r3, #1
 991 0018 214A     		ldr	r2, .L64
 992 001a 1360     		str	r3, [r2]
 553:..\..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 993              		.loc 1 553 0 discriminator 3
 994 001c 204B     		ldr	r3, .L64
 995 001e 1B68     		ldr	r3, [r3]
 996 0020 BB60     		str	r3, [r7, #8]
 554:..\..\Common\Minimal/IntQueue.c **** 		}
 555:..\..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 997              		.loc 1 555 0 discriminator 3
 998 0022 FFF7FEFF 		bl	vPortExitCritical
 556:..\..\Common\Minimal/IntQueue.c **** 
 557:..\..\Common\Minimal/IntQueue.c **** 		xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY );
 999              		.loc 1 557 0 discriminator 3
 1000 0026 1F4B     		ldr	r3, .L64+4
 1001 0028 1A68     		ldr	r2, [r3]
 1002 002a 07F10803 		add	r3, r7, #8
 1003 002e 1046     		mov	r0, r2
 1004 0030 1946     		mov	r1, r3
 1005 0032 8C22     		movs	r2, #140
 1006 0034 0023     		movs	r3, #0
 1007 0036 FFF7FEFF 		bl	xQueueGenericSend
 548:..\..\Common\Minimal/IntQueue.c **** 	{
 1008              		.loc 1 548 0 discriminator 3
 1009 003a FB68     		ldr	r3, [r7, #12]
 1010 003c 0133     		adds	r3, r3, #1
 1011 003e FB60     		str	r3, [r7, #12]
 1012              	.L60:
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 29


 548:..\..\Common\Minimal/IntQueue.c **** 	{
 1013              		.loc 1 548 0 is_stmt 0 discriminator 1
 1014 0040 FB68     		ldr	r3, [r7, #12]
 1015 0042 042B     		cmp	r3, #4
 1016 0044 E3D9     		bls	.L61
 1017              	.L63:
 558:..\..\Common\Minimal/IntQueue.c **** 	}
 559:..\..\Common\Minimal/IntQueue.c **** 
 560:..\..\Common\Minimal/IntQueue.c **** 	for( ;; )
 561:..\..\Common\Minimal/IntQueue.c **** 	{
 562:..\..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 1018              		.loc 1 562 0 is_stmt 1
 1019 0046 FFF7FEFF 		bl	vPortEnterCritical
 563:..\..\Common\Minimal/IntQueue.c **** 		{
 564:..\..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 1020              		.loc 1 564 0
 1021 004a 154B     		ldr	r3, .L64
 1022 004c 1B68     		ldr	r3, [r3]
 1023 004e 0133     		adds	r3, r3, #1
 1024 0050 134A     		ldr	r2, .L64
 1025 0052 1360     		str	r3, [r2]
 565:..\..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 1026              		.loc 1 565 0
 1027 0054 124B     		ldr	r3, .L64
 1028 0056 1B68     		ldr	r3, [r3]
 1029 0058 BB60     		str	r3, [r7, #8]
 566:..\..\Common\Minimal/IntQueue.c **** 		}
 567:..\..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 1030              		.loc 1 567 0
 1031 005a FFF7FEFF 		bl	vPortExitCritical
 568:..\..\Common\Minimal/IntQueue.c **** 
 569:..\..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY ) != pdPASS )
 1032              		.loc 1 569 0
 1033 005e 114B     		ldr	r3, .L64+4
 1034 0060 1A68     		ldr	r2, [r3]
 1035 0062 07F10803 		add	r3, r7, #8
 1036 0066 1046     		mov	r0, r2
 1037 0068 1946     		mov	r1, r3
 1038 006a 8C22     		movs	r2, #140
 1039 006c 0023     		movs	r3, #0
 1040 006e FFF7FEFF 		bl	xQueueGenericSend
 1041 0072 0346     		mov	r3, r0
 1042 0074 012B     		cmp	r3, #1
 1043 0076 07D0     		beq	.L62
 570:..\..\Common\Minimal/IntQueue.c **** 		{
 571:..\..\Common\Minimal/IntQueue.c **** 			if( xWasSuspended != pdTRUE )
 1044              		.loc 1 571 0
 1045 0078 0B4B     		ldr	r3, .L64+8
 1046 007a 1B68     		ldr	r3, [r3]
 1047 007c 012B     		cmp	r3, #1
 1048 007e 03D0     		beq	.L62
 572:..\..\Common\Minimal/IntQueue.c **** 			{
 573:..\..\Common\Minimal/IntQueue.c **** 				/* It is ok to time out if the task has been suspended. */
 574:..\..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1049              		.loc 1 574 0
 1050 0080 40F23E20 		movw	r0, #574
 1051 0084 FFF7FEFF 		bl	prvQueueAccessLogError
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 30


 1052              	.L62:
 575:..\..\Common\Minimal/IntQueue.c **** 			}
 576:..\..\Common\Minimal/IntQueue.c **** 		}
 577:..\..\Common\Minimal/IntQueue.c **** 
 578:..\..\Common\Minimal/IntQueue.c **** 		xWasSuspended = pdFALSE;
 1053              		.loc 1 578 0
 1054 0088 074B     		ldr	r3, .L64+8
 1055 008a 0022     		movs	r2, #0
 1056 008c 1A60     		str	r2, [r3]
 579:..\..\Common\Minimal/IntQueue.c **** 
 580:..\..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 1057              		.loc 1 580 0
 1058 008e 074B     		ldr	r3, .L64+12
 1059 0090 4FF08052 		mov	r2, #268435456
 1060 0094 1A60     		str	r2, [r3]
 1061              	@ 580 "..\..\Common\Minimal\IntQueue.c" 1
 1062 0096 BFF34F8F 		dsb
 1063              	@ 0 "" 2
 1064              	@ 580 "..\..\Common\Minimal\IntQueue.c" 1
 1065 009a BFF36F8F 		isb
 1066              	@ 0 "" 2
 581:..\..\Common\Minimal/IntQueue.c **** 	}
 1067              		.loc 1 581 0
 1068              		.thumb
 1069 009e D2E7     		b	.L63
 1070              	.L65:
 1071              		.align	2
 1072              	.L64:
 1073 00a0 24000000 		.word	uxValueForNormallyFullQueue
 1074 00a4 04000000 		.word	xNormallyFullQueue
 1075 00a8 1C000000 		.word	xWasSuspended
 1076 00ac 04ED00E0 		.word	-536810236
 1077              		.cfi_endproc
 1078              	.LFE75:
 1079              		.size	prv2ndHigherPriorityNormallyFullTask, .-prv2ndHigherPriorityNormallyFullTask
 1080              		.section	.text.prvLowerPriorityNormallyFullTask,"ax",%progbits
 1081              		.align	2
 1082              		.thumb
 1083              		.thumb_func
 1084              		.type	prvLowerPriorityNormallyFullTask, %function
 1085              	prvLowerPriorityNormallyFullTask:
 1086              	.LFB76:
 582:..\..\Common\Minimal/IntQueue.c **** }
 583:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 584:..\..\Common\Minimal/IntQueue.c **** 
 585:..\..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyFullTask( void *pvParameters )
 586:..\..\Common\Minimal/IntQueue.c **** {
 1087              		.loc 1 586 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 16
 1090              		@ frame_needed = 1, uses_anonymous_args = 0
 1091 0000 80B5     		push	{r7, lr}
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095 0002 84B0     		sub	sp, sp, #16
 1096              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 31


 1097 0004 00AF     		add	r7, sp, #0
 1098              		.cfi_def_cfa_register 7
 1099 0006 7860     		str	r0, [r7, #4]
 587:..\..\Common\Minimal/IntQueue.c **** UBaseType_t uxValue, uxTxed = 9999;
 1100              		.loc 1 587 0
 1101 0008 42F20F73 		movw	r3, #9999
 1102 000c BB60     		str	r3, [r7, #8]
 1103              	.L72:
 588:..\..\Common\Minimal/IntQueue.c **** 
 589:..\..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 590:..\..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 591:..\..\Common\Minimal/IntQueue.c **** 
 592:..\..\Common\Minimal/IntQueue.c **** 	for( ;; )
 593:..\..\Common\Minimal/IntQueue.c **** 	{
 594:..\..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxTxed, intqONE_TICK_DELAY ) != errQUEUE_FULL )
 1104              		.loc 1 594 0
 1105 000e 224B     		ldr	r3, .L73
 1106 0010 1A68     		ldr	r2, [r3]
 1107 0012 07F10803 		add	r3, r7, #8
 1108 0016 1046     		mov	r0, r2
 1109 0018 1946     		mov	r1, r3
 1110 001a 0122     		movs	r2, #1
 1111 001c 0023     		movs	r3, #0
 1112 001e FFF7FEFF 		bl	xQueueGenericSend
 1113 0022 0346     		mov	r3, r0
 1114 0024 002B     		cmp	r3, #0
 1115 0026 16D0     		beq	.L67
 595:..\..\Common\Minimal/IntQueue.c **** 		{
 596:..\..\Common\Minimal/IntQueue.c **** 			/* Should only succeed when the higher priority task is suspended */
 597:..\..\Common\Minimal/IntQueue.c **** 			if( eTaskGetState( xHighPriorityNormallyFullTask1 ) != eSuspended )
 1116              		.loc 1 597 0
 1117 0028 1C4B     		ldr	r3, .L73+4
 1118 002a 1B68     		ldr	r3, [r3]
 1119 002c 1846     		mov	r0, r3
 1120 002e FFF7FEFF 		bl	eTaskGetState
 1121 0032 0346     		mov	r3, r0
 1122 0034 032B     		cmp	r3, #3
 1123 0036 03D0     		beq	.L68
 598:..\..\Common\Minimal/IntQueue.c **** 			{
 599:..\..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1124              		.loc 1 599 0
 1125 0038 40F25720 		movw	r0, #599
 1126 003c FFF7FEFF 		bl	prvQueueAccessLogError
 1127              	.L68:
 600:..\..\Common\Minimal/IntQueue.c **** 			}
 601:..\..\Common\Minimal/IntQueue.c **** 
 602:..\..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyFullTask1 );
 1128              		.loc 1 602 0
 1129 0040 164B     		ldr	r3, .L73+4
 1130 0042 1B68     		ldr	r3, [r3]
 1131 0044 1846     		mov	r0, r3
 1132 0046 FFF7FEFF 		bl	vTaskResume
 603:..\..\Common\Minimal/IntQueue.c **** 			uxLowPriorityLoops2++;
 1133              		.loc 1 603 0
 1134 004a 154B     		ldr	r3, .L73+8
 1135 004c 1B68     		ldr	r3, [r3]
 1136 004e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 32


 1137 0050 134A     		ldr	r2, .L73+8
 1138 0052 1360     		str	r3, [r2]
 1139 0054 1EE0     		b	.L69
 1140              	.L67:
 604:..\..\Common\Minimal/IntQueue.c **** 		}
 605:..\..\Common\Minimal/IntQueue.c **** 		else
 606:..\..\Common\Minimal/IntQueue.c **** 		{
 607:..\..\Common\Minimal/IntQueue.c **** 			/* Raise our priority while we receive so we can preempt the higher
 608:..\..\Common\Minimal/IntQueue.c **** 			priority task, and ensure we get the value from the queue. */
 609:..\..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqHIGHER_PRIORITY + 1 );
 1141              		.loc 1 609 0
 1142 0056 0020     		movs	r0, #0
 1143 0058 0421     		movs	r1, #4
 1144 005a FFF7FEFF 		bl	vTaskPrioritySet
 610:..\..\Common\Minimal/IntQueue.c **** 
 611:..\..\Common\Minimal/IntQueue.c **** 			if( xQueueReceive( xNormallyFullQueue, &uxValue, portMAX_DELAY ) != pdPASS )
 1145              		.loc 1 611 0
 1146 005e 0E4B     		ldr	r3, .L73
 1147 0060 1A68     		ldr	r2, [r3]
 1148 0062 07F10C03 		add	r3, r7, #12
 1149 0066 1046     		mov	r0, r2
 1150 0068 1946     		mov	r1, r3
 1151 006a 4FF0FF32 		mov	r2, #-1
 1152 006e FFF7FEFF 		bl	xQueueReceive
 1153 0072 0346     		mov	r3, r0
 1154 0074 012B     		cmp	r3, #1
 1155 0076 04D0     		beq	.L70
 612:..\..\Common\Minimal/IntQueue.c **** 			{
 613:..\..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1156              		.loc 1 613 0
 1157 0078 40F26520 		movw	r0, #613
 1158 007c FFF7FEFF 		bl	prvQueueAccessLogError
 1159 0080 04E0     		b	.L71
 1160              	.L70:
 614:..\..\Common\Minimal/IntQueue.c **** 			}
 615:..\..\Common\Minimal/IntQueue.c **** 			else
 616:..\..\Common\Minimal/IntQueue.c **** 			{
 617:..\..\Common\Minimal/IntQueue.c **** 				prvRecordValue_NormallyFull( uxValue, intqLOW_PRIORITY_TASK );
 1161              		.loc 1 617 0
 1162 0082 FB68     		ldr	r3, [r7, #12]
 1163 0084 1846     		mov	r0, r3
 1164 0086 0321     		movs	r1, #3
 1165 0088 FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1166              	.L71:
 618:..\..\Common\Minimal/IntQueue.c **** 			}
 619:..\..\Common\Minimal/IntQueue.c **** 
 620:..\..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqLOWER_PRIORITY );
 1167              		.loc 1 620 0
 1168 008c 0020     		movs	r0, #0
 1169 008e 0021     		movs	r1, #0
 1170 0090 FFF7FEFF 		bl	vTaskPrioritySet
 1171              	.L69:
 621:..\..\Common\Minimal/IntQueue.c **** 		}
 622:..\..\Common\Minimal/IntQueue.c **** 	}
 1172              		.loc 1 622 0
 1173 0094 BBE7     		b	.L72
 1174              	.L74:
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 33


 1175 0096 00BF     		.align	2
 1176              	.L73:
 1177 0098 04000000 		.word	xNormallyFullQueue
 1178 009c 00000000 		.word	xHighPriorityNormallyFullTask1
 1179 00a0 14000000 		.word	uxLowPriorityLoops2
 1180              		.cfi_endproc
 1181              	.LFE76:
 1182              		.size	prvLowerPriorityNormallyFullTask, .-prvLowerPriorityNormallyFullTask
 1183              		.section	.text.xFirstTimerHandler,"ax",%progbits
 1184              		.align	2
 1185              		.global	xFirstTimerHandler
 1186              		.thumb
 1187              		.thumb_func
 1188              		.type	xFirstTimerHandler, %function
 1189              	xFirstTimerHandler:
 1190              	.LFB77:
 623:..\..\Common\Minimal/IntQueue.c **** }
 624:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 625:..\..\Common\Minimal/IntQueue.c **** 
 626:..\..\Common\Minimal/IntQueue.c **** BaseType_t xFirstTimerHandler( void )
 627:..\..\Common\Minimal/IntQueue.c **** {
 1191              		.loc 1 627 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 56
 1194              		@ frame_needed = 1, uses_anonymous_args = 0
 1195 0000 80B5     		push	{r7, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 7, -8
 1198              		.cfi_offset 14, -4
 1199 0002 8EB0     		sub	sp, sp, #56
 1200              		.cfi_def_cfa_offset 64
 1201 0004 00AF     		add	r7, sp, #0
 1202              		.cfi_def_cfa_register 7
 628:..\..\Common\Minimal/IntQueue.c **** BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 1203              		.loc 1 628 0
 1204 0006 0023     		movs	r3, #0
 1205 0008 7B60     		str	r3, [r7, #4]
 629:..\..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxedValue;
 630:..\..\Common\Minimal/IntQueue.c **** static UBaseType_t uxNextOperation = 0;
 631:..\..\Common\Minimal/IntQueue.c **** 
 632:..\..\Common\Minimal/IntQueue.c **** 	/* Called from a timer interrupt.  Perform various read and write
 633:..\..\Common\Minimal/IntQueue.c **** 	accesses on the queues. */
 634:..\..\Common\Minimal/IntQueue.c **** 
 635:..\..\Common\Minimal/IntQueue.c **** 	uxNextOperation++;
 1206              		.loc 1 635 0
 1207 000a 6C4B     		ldr	r3, .L90
 1208 000c 1B68     		ldr	r3, [r3]
 1209 000e 0133     		adds	r3, r3, #1
 1210 0010 6A4A     		ldr	r2, .L90
 1211 0012 1360     		str	r3, [r2]
 636:..\..\Common\Minimal/IntQueue.c **** 
 637:..\..\Common\Minimal/IntQueue.c **** 	if( uxNextOperation & ( UBaseType_t ) 0x01 )
 1212              		.loc 1 637 0
 1213 0014 694B     		ldr	r3, .L90
 1214 0016 1B68     		ldr	r3, [r3]
 1215 0018 03F00103 		and	r3, r3, #1
 1216 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 34


 1217 001e 00F09480 		beq	.L76
 638:..\..\Common\Minimal/IntQueue.c **** 	{
 639:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1218              		.loc 1 639 0
 1219 0022 674B     		ldr	r3, .L90+4
 1220 0024 1B68     		ldr	r3, [r3]
 1221 0026 1846     		mov	r0, r3
 1222 0028 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1223 002c 0346     		mov	r3, r0
 1224 002e 012B     		cmp	r3, #1
 1225 0030 28D0     		beq	.L77
 1226              	.LBB42:
 1227              	.LBB43:
 1228              	.LBB44:
 1229              		.file 2 "../../../Source/portable/GCC/ARM_CM3/portmacro.h"
   1:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 35


  43:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:../../../Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 36


 100:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 37


 157:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 196:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 197:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n" \
 198:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 200:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 201:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 203:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 204:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 205:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 206:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 207:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {
 209:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1230              		.loc 2 211 0 discriminator 1
 1231              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 38


 1232 0032 EFF31182 			mrs r2, basepri											
 1233 0036 4FF0A003 		mov r3, #160												
 1234 003a 83F31188 		msr basepri, r3											
 1235 003e BFF36F8F 		isb														
 1236 0042 BFF34F8F 		dsb														
 1237              	
 1238              	@ 0 "" 2
 1239              		.thumb
 1240 0046 BA62     		str	r2, [r7, #40]
 1241 0048 7B62     		str	r3, [r7, #36]
 212:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 213:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n" \
 215:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	isb														\n" \
 217:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 218:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	);
 220:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 221:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	warnings. */
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1242              		.loc 2 223 0 discriminator 1
 1243 004a BB6A     		ldr	r3, [r7, #40]
 1244              	.LBE44:
 1245              	.LBE43:
 1246              		.loc 1 639 0 discriminator 1
 1247 004c 7B63     		str	r3, [r7, #52]
 1248 004e 5D4B     		ldr	r3, .L90+8
 1249 0050 1B68     		ldr	r3, [r3]
 1250 0052 0133     		adds	r3, r3, #1
 1251 0054 5B4A     		ldr	r2, .L90+8
 1252 0056 1360     		str	r3, [r2]
 1253 0058 594B     		ldr	r3, .L90+4
 1254 005a 1A68     		ldr	r2, [r3]
 1255 005c 3B1D     		adds	r3, r7, #4
 1256 005e 1046     		mov	r0, r2
 1257 0060 5849     		ldr	r1, .L90+8
 1258 0062 1A46     		mov	r2, r3
 1259 0064 0023     		movs	r3, #0
 1260 0066 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1261 006a 0346     		mov	r3, r0
 1262 006c 012B     		cmp	r3, #1
 1263 006e 04D0     		beq	.L79
 1264              		.loc 1 639 0 is_stmt 0 discriminator 2
 1265 0070 544B     		ldr	r3, .L90+8
 1266 0072 1B68     		ldr	r3, [r3]
 1267 0074 013B     		subs	r3, r3, #1
 1268 0076 534A     		ldr	r2, .L90+8
 1269 0078 1360     		str	r3, [r2]
 1270              	.L79:
 1271 007a 7B6B     		ldr	r3, [r7, #52]
 1272 007c 3B62     		str	r3, [r7, #32]
 1273              	.LBB45:
 1274              	.LBB46:
 224:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 225:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 39


 226:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 
 227:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** {
 229:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 1275              		.loc 2 229 0 is_stmt 1 discriminator 4
 1276 007e 3B6A     		ldr	r3, [r7, #32]
 1277              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1278 0080 83F31188 			msr basepri, r3	
 1279              	@ 0 "" 2
 1280              		.thumb
 1281              	.L77:
 1282              	.LBE46:
 1283              	.LBE45:
 1284              	.LBE42:
 640:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1285              		.loc 1 640 0
 1286 0084 4E4B     		ldr	r3, .L90+4
 1287 0086 1B68     		ldr	r3, [r3]
 1288 0088 1846     		mov	r0, r3
 1289 008a FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1290 008e 0346     		mov	r3, r0
 1291 0090 012B     		cmp	r3, #1
 1292 0092 28D0     		beq	.L80
 1293              	.LBB47:
 1294              	.LBB48:
 1295              	.LBB49:
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1296              		.loc 2 211 0 discriminator 1
 1297              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1298 0094 EFF31182 			mrs r2, basepri											
 1299 0098 4FF0A003 		mov r3, #160												
 1300 009c 83F31188 		msr basepri, r3											
 1301 00a0 BFF36F8F 		isb														
 1302 00a4 BFF34F8F 		dsb														
 1303              	
 1304              	@ 0 "" 2
 1305              		.thumb
 1306 00a8 FA61     		str	r2, [r7, #28]
 1307 00aa BB61     		str	r3, [r7, #24]
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1308              		.loc 2 223 0 discriminator 1
 1309 00ac FB69     		ldr	r3, [r7, #28]
 1310              	.LBE49:
 1311              	.LBE48:
 1312              		.loc 1 640 0 discriminator 1
 1313 00ae 3B63     		str	r3, [r7, #48]
 1314 00b0 444B     		ldr	r3, .L90+8
 1315 00b2 1B68     		ldr	r3, [r3]
 1316 00b4 0133     		adds	r3, r3, #1
 1317 00b6 434A     		ldr	r2, .L90+8
 1318 00b8 1360     		str	r3, [r2]
 1319 00ba 414B     		ldr	r3, .L90+4
 1320 00bc 1A68     		ldr	r2, [r3]
 1321 00be 3B1D     		adds	r3, r7, #4
 1322 00c0 1046     		mov	r0, r2
 1323 00c2 4049     		ldr	r1, .L90+8
 1324 00c4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 40


 1325 00c6 0023     		movs	r3, #0
 1326 00c8 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1327 00cc 0346     		mov	r3, r0
 1328 00ce 012B     		cmp	r3, #1
 1329 00d0 04D0     		beq	.L82
 1330              		.loc 1 640 0 is_stmt 0 discriminator 2
 1331 00d2 3C4B     		ldr	r3, .L90+8
 1332 00d4 1B68     		ldr	r3, [r3]
 1333 00d6 013B     		subs	r3, r3, #1
 1334 00d8 3A4A     		ldr	r2, .L90+8
 1335 00da 1360     		str	r3, [r2]
 1336              	.L82:
 1337 00dc 3B6B     		ldr	r3, [r7, #48]
 1338 00de 7B61     		str	r3, [r7, #20]
 1339              	.LBB50:
 1340              	.LBB51:
 1341              		.loc 2 229 0 is_stmt 1 discriminator 4
 1342 00e0 7B69     		ldr	r3, [r7, #20]
 1343              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1344 00e2 83F31188 			msr basepri, r3	
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              	.L80:
 1348              	.LBE51:
 1349              	.LBE50:
 1350              	.LBE47:
 641:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1351              		.loc 1 641 0
 1352 00e6 364B     		ldr	r3, .L90+4
 1353 00e8 1B68     		ldr	r3, [r3]
 1354 00ea 1846     		mov	r0, r3
 1355 00ec FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1356 00f0 0346     		mov	r3, r0
 1357 00f2 012B     		cmp	r3, #1
 1358 00f4 5CD0     		beq	.L86
 1359              	.LBB52:
 1360              	.LBB53:
 1361              	.LBB54:
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1362              		.loc 2 211 0 discriminator 1
 1363              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1364 00f6 EFF31182 			mrs r2, basepri											
 1365 00fa 4FF0A003 		mov r3, #160												
 1366 00fe 83F31188 		msr basepri, r3											
 1367 0102 BFF36F8F 		isb														
 1368 0106 BFF34F8F 		dsb														
 1369              	
 1370              	@ 0 "" 2
 1371              		.thumb
 1372 010a 3A61     		str	r2, [r7, #16]
 1373 010c FB60     		str	r3, [r7, #12]
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1374              		.loc 2 223 0 discriminator 1
 1375 010e 3B69     		ldr	r3, [r7, #16]
 1376              	.LBE54:
 1377              	.LBE53:
 1378              		.loc 1 641 0 discriminator 1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 41


 1379 0110 FB62     		str	r3, [r7, #44]
 1380 0112 2C4B     		ldr	r3, .L90+8
 1381 0114 1B68     		ldr	r3, [r3]
 1382 0116 0133     		adds	r3, r3, #1
 1383 0118 2A4A     		ldr	r2, .L90+8
 1384 011a 1360     		str	r3, [r2]
 1385 011c 284B     		ldr	r3, .L90+4
 1386 011e 1A68     		ldr	r2, [r3]
 1387 0120 3B1D     		adds	r3, r7, #4
 1388 0122 1046     		mov	r0, r2
 1389 0124 2749     		ldr	r1, .L90+8
 1390 0126 1A46     		mov	r2, r3
 1391 0128 0023     		movs	r3, #0
 1392 012a FFF7FEFF 		bl	xQueueGenericSendFromISR
 1393 012e 0346     		mov	r3, r0
 1394 0130 012B     		cmp	r3, #1
 1395 0132 04D0     		beq	.L85
 1396              		.loc 1 641 0 is_stmt 0 discriminator 2
 1397 0134 234B     		ldr	r3, .L90+8
 1398 0136 1B68     		ldr	r3, [r3]
 1399 0138 013B     		subs	r3, r3, #1
 1400 013a 224A     		ldr	r2, .L90+8
 1401 013c 1360     		str	r3, [r2]
 1402              	.L85:
 1403 013e FB6A     		ldr	r3, [r7, #44]
 1404 0140 BB60     		str	r3, [r7, #8]
 1405              	.LBB55:
 1406              	.LBB56:
 1407              		.loc 2 229 0 is_stmt 1 discriminator 4
 1408 0142 BB68     		ldr	r3, [r7, #8]
 1409              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1410 0144 83F31188 			msr basepri, r3	
 1411              	@ 0 "" 2
 1412              		.thumb
 1413 0148 32E0     		b	.L86
 1414              	.L76:
 1415              	.LBE56:
 1416              	.LBE55:
 1417              	.LBE52:
 642:..\..\Common\Minimal/IntQueue.c **** 	}
 643:..\..\Common\Minimal/IntQueue.c **** 	else
 644:..\..\Common\Minimal/IntQueue.c **** 	{
 645:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1418              		.loc 1 645 0
 1419 014a 1F4B     		ldr	r3, .L90+12
 1420 014c 1968     		ldr	r1, [r3]
 1421 014e 3A46     		mov	r2, r7
 1422 0150 3B1D     		adds	r3, r7, #4
 1423 0152 0846     		mov	r0, r1
 1424 0154 1146     		mov	r1, r2
 1425 0156 1A46     		mov	r2, r3
 1426 0158 FFF7FEFF 		bl	xQueueReceiveFromISR
 1427 015c 0346     		mov	r3, r0
 1428 015e 012B     		cmp	r3, #1
 1429 0160 04D1     		bne	.L87
 1430              		.loc 1 645 0 is_stmt 0 discriminator 1
 1431 0162 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 42


 1432 0164 1846     		mov	r0, r3
 1433 0166 0521     		movs	r1, #5
 1434 0168 FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1435              	.L87:
 646:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1436              		.loc 1 646 0 is_stmt 1
 1437 016c 164B     		ldr	r3, .L90+12
 1438 016e 1968     		ldr	r1, [r3]
 1439 0170 3A46     		mov	r2, r7
 1440 0172 3B1D     		adds	r3, r7, #4
 1441 0174 0846     		mov	r0, r1
 1442 0176 1146     		mov	r1, r2
 1443 0178 1A46     		mov	r2, r3
 1444 017a FFF7FEFF 		bl	xQueueReceiveFromISR
 1445 017e 0346     		mov	r3, r0
 1446 0180 012B     		cmp	r3, #1
 1447 0182 04D1     		bne	.L88
 1448              		.loc 1 646 0 is_stmt 0 discriminator 1
 1449 0184 3B68     		ldr	r3, [r7]
 1450 0186 1846     		mov	r0, r3
 1451 0188 0521     		movs	r1, #5
 1452 018a FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1453              	.L88:
 647:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1454              		.loc 1 647 0 is_stmt 1
 1455 018e 0E4B     		ldr	r3, .L90+12
 1456 0190 1968     		ldr	r1, [r3]
 1457 0192 3A46     		mov	r2, r7
 1458 0194 3B1D     		adds	r3, r7, #4
 1459 0196 0846     		mov	r0, r1
 1460 0198 1146     		mov	r1, r2
 1461 019a 1A46     		mov	r2, r3
 1462 019c FFF7FEFF 		bl	xQueueReceiveFromISR
 1463 01a0 0346     		mov	r3, r0
 1464 01a2 012B     		cmp	r3, #1
 1465 01a4 04D1     		bne	.L86
 1466              		.loc 1 647 0 is_stmt 0 discriminator 1
 1467 01a6 3B68     		ldr	r3, [r7]
 1468 01a8 1846     		mov	r0, r3
 1469 01aa 0521     		movs	r1, #5
 1470 01ac FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1471              	.L86:
 648:..\..\Common\Minimal/IntQueue.c **** 	}
 649:..\..\Common\Minimal/IntQueue.c **** 
 650:..\..\Common\Minimal/IntQueue.c **** 	return xHigherPriorityTaskWoken;
 1472              		.loc 1 650 0 is_stmt 1
 1473 01b0 7B68     		ldr	r3, [r7, #4]
 651:..\..\Common\Minimal/IntQueue.c **** }
 1474              		.loc 1 651 0
 1475 01b2 1846     		mov	r0, r3
 1476 01b4 3837     		adds	r7, r7, #56
 1477              		.cfi_def_cfa_offset 8
 1478 01b6 BD46     		mov	sp, r7
 1479              		.cfi_def_cfa_register 13
 1480              		@ sp needed
 1481 01b8 80BD     		pop	{r7, pc}
 1482              	.L91:
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 43


 1483 01ba 00BF     		.align	2
 1484              	.L90:
 1485 01bc B8010000 		.word	uxNextOperation.6453
 1486 01c0 00000000 		.word	xNormallyEmptyQueue
 1487 01c4 20000000 		.word	uxValueForNormallyEmptyQueue
 1488 01c8 04000000 		.word	xNormallyFullQueue
 1489              		.cfi_endproc
 1490              	.LFE77:
 1491              		.size	xFirstTimerHandler, .-xFirstTimerHandler
 1492              		.section	.text.xSecondTimerHandler,"ax",%progbits
 1493              		.align	2
 1494              		.global	xSecondTimerHandler
 1495              		.thumb
 1496              		.thumb_func
 1497              		.type	xSecondTimerHandler, %function
 1498              	xSecondTimerHandler:
 1499              	.LFB78:
 652:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 653:..\..\Common\Minimal/IntQueue.c **** 
 654:..\..\Common\Minimal/IntQueue.c **** BaseType_t xSecondTimerHandler( void )
 655:..\..\Common\Minimal/IntQueue.c **** {
 1500              		.loc 1 655 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 88
 1503              		@ frame_needed = 1, uses_anonymous_args = 0
 1504 0000 80B5     		push	{r7, lr}
 1505              		.cfi_def_cfa_offset 8
 1506              		.cfi_offset 7, -8
 1507              		.cfi_offset 14, -4
 1508 0002 96B0     		sub	sp, sp, #88
 1509              		.cfi_def_cfa_offset 96
 1510 0004 00AF     		add	r7, sp, #0
 1511              		.cfi_def_cfa_register 7
 656:..\..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxedValue;
 657:..\..\Common\Minimal/IntQueue.c **** BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 1512              		.loc 1 657 0
 1513 0006 0023     		movs	r3, #0
 1514 0008 3B60     		str	r3, [r7]
 658:..\..\Common\Minimal/IntQueue.c **** static UBaseType_t uxNextOperation = 0;
 659:..\..\Common\Minimal/IntQueue.c **** 
 660:..\..\Common\Minimal/IntQueue.c **** 	/* Called from a timer interrupt.  Perform various read and write
 661:..\..\Common\Minimal/IntQueue.c **** 	accesses on the queues. */
 662:..\..\Common\Minimal/IntQueue.c **** 
 663:..\..\Common\Minimal/IntQueue.c **** 	uxNextOperation++;
 1515              		.loc 1 663 0
 1516 000a A24B     		ldr	r3, .L115
 1517 000c 1B68     		ldr	r3, [r3]
 1518 000e 0133     		adds	r3, r3, #1
 1519 0010 A04A     		ldr	r2, .L115
 1520 0012 1360     		str	r3, [r2]
 664:..\..\Common\Minimal/IntQueue.c **** 
 665:..\..\Common\Minimal/IntQueue.c **** 	if( uxNextOperation & ( UBaseType_t ) 0x01 )
 1521              		.loc 1 665 0
 1522 0014 9F4B     		ldr	r3, .L115
 1523 0016 1B68     		ldr	r3, [r3]
 1524 0018 03F00103 		and	r3, r3, #1
 1525 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 44


 1526 001e 00F08F80 		beq	.L93
 666:..\..\Common\Minimal/IntQueue.c **** 	{
 667:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1527              		.loc 1 667 0
 1528 0022 9D4B     		ldr	r3, .L115+4
 1529 0024 1B68     		ldr	r3, [r3]
 1530 0026 1846     		mov	r0, r3
 1531 0028 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1532 002c 0346     		mov	r3, r0
 1533 002e 012B     		cmp	r3, #1
 1534 0030 28D0     		beq	.L94
 1535              	.LBB57:
 1536              	.LBB58:
 1537              	.LBB59:
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1538              		.loc 2 211 0 discriminator 1
 1539              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1540 0032 EFF31182 			mrs r2, basepri											
 1541 0036 4FF0A003 		mov r3, #160												
 1542 003a 83F31188 		msr basepri, r3											
 1543 003e BFF36F8F 		isb														
 1544 0042 BFF34F8F 		dsb														
 1545              	
 1546              	@ 0 "" 2
 1547              		.thumb
 1548 0046 3A64     		str	r2, [r7, #64]
 1549 0048 FB63     		str	r3, [r7, #60]
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1550              		.loc 2 223 0 discriminator 1
 1551 004a 3B6C     		ldr	r3, [r7, #64]
 1552              	.LBE59:
 1553              	.LBE58:
 1554              		.loc 1 667 0 discriminator 1
 1555 004c 7B65     		str	r3, [r7, #84]
 1556 004e 934B     		ldr	r3, .L115+8
 1557 0050 1B68     		ldr	r3, [r3]
 1558 0052 0133     		adds	r3, r3, #1
 1559 0054 914A     		ldr	r2, .L115+8
 1560 0056 1360     		str	r3, [r2]
 1561 0058 8F4B     		ldr	r3, .L115+4
 1562 005a 1A68     		ldr	r2, [r3]
 1563 005c 3B46     		mov	r3, r7
 1564 005e 1046     		mov	r0, r2
 1565 0060 8E49     		ldr	r1, .L115+8
 1566 0062 1A46     		mov	r2, r3
 1567 0064 0023     		movs	r3, #0
 1568 0066 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1569 006a 0346     		mov	r3, r0
 1570 006c 012B     		cmp	r3, #1
 1571 006e 04D0     		beq	.L96
 1572              		.loc 1 667 0 is_stmt 0 discriminator 2
 1573 0070 8A4B     		ldr	r3, .L115+8
 1574 0072 1B68     		ldr	r3, [r3]
 1575 0074 013B     		subs	r3, r3, #1
 1576 0076 894A     		ldr	r2, .L115+8
 1577 0078 1360     		str	r3, [r2]
 1578              	.L96:
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 45


 1579 007a 7B6D     		ldr	r3, [r7, #84]
 1580 007c BB63     		str	r3, [r7, #56]
 1581              	.LBB60:
 1582              	.LBB61:
 1583              		.loc 2 229 0 is_stmt 1 discriminator 4
 1584 007e BB6B     		ldr	r3, [r7, #56]
 1585              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1586 0080 83F31188 			msr basepri, r3	
 1587              	@ 0 "" 2
 1588              		.thumb
 1589              	.L94:
 1590              	.LBE61:
 1591              	.LBE60:
 1592              	.LBE57:
 668:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1593              		.loc 1 668 0
 1594 0084 844B     		ldr	r3, .L115+4
 1595 0086 1B68     		ldr	r3, [r3]
 1596 0088 1846     		mov	r0, r3
 1597 008a FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1598 008e 0346     		mov	r3, r0
 1599 0090 012B     		cmp	r3, #1
 1600 0092 28D0     		beq	.L97
 1601              	.LBB62:
 1602              	.LBB63:
 1603              	.LBB64:
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1604              		.loc 2 211 0 discriminator 1
 1605              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1606 0094 EFF31182 			mrs r2, basepri											
 1607 0098 4FF0A003 		mov r3, #160												
 1608 009c 83F31188 		msr basepri, r3											
 1609 00a0 BFF36F8F 		isb														
 1610 00a4 BFF34F8F 		dsb														
 1611              	
 1612              	@ 0 "" 2
 1613              		.thumb
 1614 00a8 7A63     		str	r2, [r7, #52]
 1615 00aa 3B63     		str	r3, [r7, #48]
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1616              		.loc 2 223 0 discriminator 1
 1617 00ac 7B6B     		ldr	r3, [r7, #52]
 1618              	.LBE64:
 1619              	.LBE63:
 1620              		.loc 1 668 0 discriminator 1
 1621 00ae 3B65     		str	r3, [r7, #80]
 1622 00b0 7A4B     		ldr	r3, .L115+8
 1623 00b2 1B68     		ldr	r3, [r3]
 1624 00b4 0133     		adds	r3, r3, #1
 1625 00b6 794A     		ldr	r2, .L115+8
 1626 00b8 1360     		str	r3, [r2]
 1627 00ba 774B     		ldr	r3, .L115+4
 1628 00bc 1A68     		ldr	r2, [r3]
 1629 00be 3B46     		mov	r3, r7
 1630 00c0 1046     		mov	r0, r2
 1631 00c2 7649     		ldr	r1, .L115+8
 1632 00c4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 46


 1633 00c6 0023     		movs	r3, #0
 1634 00c8 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1635 00cc 0346     		mov	r3, r0
 1636 00ce 012B     		cmp	r3, #1
 1637 00d0 04D0     		beq	.L99
 1638              		.loc 1 668 0 is_stmt 0 discriminator 2
 1639 00d2 724B     		ldr	r3, .L115+8
 1640 00d4 1B68     		ldr	r3, [r3]
 1641 00d6 013B     		subs	r3, r3, #1
 1642 00d8 704A     		ldr	r2, .L115+8
 1643 00da 1360     		str	r3, [r2]
 1644              	.L99:
 1645 00dc 3B6D     		ldr	r3, [r7, #80]
 1646 00de FB62     		str	r3, [r7, #44]
 1647              	.LBB65:
 1648              	.LBB66:
 1649              		.loc 2 229 0 is_stmt 1 discriminator 4
 1650 00e0 FB6A     		ldr	r3, [r7, #44]
 1651              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1652 00e2 83F31188 			msr basepri, r3	
 1653              	@ 0 "" 2
 1654              		.thumb
 1655              	.L97:
 1656              	.LBE66:
 1657              	.LBE65:
 1658              	.LBE62:
 669:..\..\Common\Minimal/IntQueue.c **** 
 670:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_RX();
 1659              		.loc 1 670 0
 1660 00e6 6C4B     		ldr	r3, .L115+4
 1661 00e8 1968     		ldr	r1, [r3]
 1662 00ea 3A1D     		adds	r2, r7, #4
 1663 00ec 3B46     		mov	r3, r7
 1664 00ee 0846     		mov	r0, r1
 1665 00f0 1146     		mov	r1, r2
 1666 00f2 1A46     		mov	r2, r3
 1667 00f4 FFF7FEFF 		bl	xQueueReceiveFromISR
 1668 00f8 0346     		mov	r3, r0
 1669 00fa 012B     		cmp	r3, #1
 1670 00fc 04D0     		beq	.L100
 1671              		.loc 1 670 0 is_stmt 0 discriminator 1
 1672 00fe 40F29E20 		movw	r0, #670
 1673 0102 FFF7FEFF 		bl	prvQueueAccessLogError
 1674 0106 04E0     		b	.L101
 1675              	.L100:
 1676              		.loc 1 670 0 discriminator 2
 1677 0108 7B68     		ldr	r3, [r7, #4]
 1678 010a 1846     		mov	r0, r3
 1679 010c 0521     		movs	r1, #5
 1680 010e FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 1681              	.L101:
 671:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_RX();
 1682              		.loc 1 671 0 is_stmt 1
 1683 0112 614B     		ldr	r3, .L115+4
 1684 0114 1968     		ldr	r1, [r3]
 1685 0116 3A1D     		adds	r2, r7, #4
 1686 0118 3B46     		mov	r3, r7
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 47


 1687 011a 0846     		mov	r0, r1
 1688 011c 1146     		mov	r1, r2
 1689 011e 1A46     		mov	r2, r3
 1690 0120 FFF7FEFF 		bl	xQueueReceiveFromISR
 1691 0124 0346     		mov	r3, r0
 1692 0126 012B     		cmp	r3, #1
 1693 0128 04D0     		beq	.L102
 1694              		.loc 1 671 0 is_stmt 0 discriminator 1
 1695 012a 40F29F20 		movw	r0, #671
 1696 012e FFF7FEFF 		bl	prvQueueAccessLogError
 1697 0132 A9E0     		b	.L104
 1698              	.L102:
 1699              		.loc 1 671 0 discriminator 2
 1700 0134 7B68     		ldr	r3, [r7, #4]
 1701 0136 1846     		mov	r0, r3
 1702 0138 0521     		movs	r1, #5
 1703 013a FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 1704 013e A3E0     		b	.L104
 1705              	.L93:
 672:..\..\Common\Minimal/IntQueue.c **** 	}
 673:..\..\Common\Minimal/IntQueue.c **** 	else
 674:..\..\Common\Minimal/IntQueue.c **** 	{
 675:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1706              		.loc 1 675 0 is_stmt 1
 1707 0140 574B     		ldr	r3, .L115+12
 1708 0142 1968     		ldr	r1, [r3]
 1709 0144 3A1D     		adds	r2, r7, #4
 1710 0146 3B46     		mov	r3, r7
 1711 0148 0846     		mov	r0, r1
 1712 014a 1146     		mov	r1, r2
 1713 014c 1A46     		mov	r2, r3
 1714 014e FFF7FEFF 		bl	xQueueReceiveFromISR
 1715 0152 0346     		mov	r3, r0
 1716 0154 012B     		cmp	r3, #1
 1717 0156 04D1     		bne	.L105
 1718              		.loc 1 675 0 is_stmt 0 discriminator 1
 1719 0158 7B68     		ldr	r3, [r7, #4]
 1720 015a 1846     		mov	r0, r3
 1721 015c 0521     		movs	r1, #5
 1722 015e FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1723              	.L105:
 676:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1724              		.loc 1 676 0 is_stmt 1
 1725 0162 4F4B     		ldr	r3, .L115+12
 1726 0164 1B68     		ldr	r3, [r3]
 1727 0166 1846     		mov	r0, r3
 1728 0168 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1729 016c 0346     		mov	r3, r0
 1730 016e 012B     		cmp	r3, #1
 1731 0170 28D0     		beq	.L106
 1732              	.LBB67:
 1733              	.LBB68:
 1734              	.LBB69:
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1735              		.loc 2 211 0 discriminator 1
 1736              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1737 0172 EFF31182 			mrs r2, basepri											
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 48


 1738 0176 4FF0A003 		mov r3, #160												
 1739 017a 83F31188 		msr basepri, r3											
 1740 017e BFF36F8F 		isb														
 1741 0182 BFF34F8F 		dsb														
 1742              	
 1743              	@ 0 "" 2
 1744              		.thumb
 1745 0186 BA62     		str	r2, [r7, #40]
 1746 0188 7B62     		str	r3, [r7, #36]
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1747              		.loc 2 223 0 discriminator 1
 1748 018a BB6A     		ldr	r3, [r7, #40]
 1749              	.LBE69:
 1750              	.LBE68:
 1751              		.loc 1 676 0 discriminator 1
 1752 018c FB64     		str	r3, [r7, #76]
 1753 018e 454B     		ldr	r3, .L115+16
 1754 0190 1B68     		ldr	r3, [r3]
 1755 0192 0133     		adds	r3, r3, #1
 1756 0194 434A     		ldr	r2, .L115+16
 1757 0196 1360     		str	r3, [r2]
 1758 0198 414B     		ldr	r3, .L115+12
 1759 019a 1A68     		ldr	r2, [r3]
 1760 019c 3B46     		mov	r3, r7
 1761 019e 1046     		mov	r0, r2
 1762 01a0 4049     		ldr	r1, .L115+16
 1763 01a2 1A46     		mov	r2, r3
 1764 01a4 0023     		movs	r3, #0
 1765 01a6 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1766 01aa 0346     		mov	r3, r0
 1767 01ac 012B     		cmp	r3, #1
 1768 01ae 04D0     		beq	.L108
 1769              		.loc 1 676 0 is_stmt 0 discriminator 2
 1770 01b0 3C4B     		ldr	r3, .L115+16
 1771 01b2 1B68     		ldr	r3, [r3]
 1772 01b4 013B     		subs	r3, r3, #1
 1773 01b6 3B4A     		ldr	r2, .L115+16
 1774 01b8 1360     		str	r3, [r2]
 1775              	.L108:
 1776 01ba FB6C     		ldr	r3, [r7, #76]
 1777 01bc 3B62     		str	r3, [r7, #32]
 1778              	.LBB70:
 1779              	.LBB71:
 1780              		.loc 2 229 0 is_stmt 1 discriminator 4
 1781 01be 3B6A     		ldr	r3, [r7, #32]
 1782              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1783 01c0 83F31188 			msr basepri, r3	
 1784              	@ 0 "" 2
 1785              		.thumb
 1786              	.L106:
 1787              	.LBE71:
 1788              	.LBE70:
 1789              	.LBE67:
 677:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1790              		.loc 1 677 0
 1791 01c4 364B     		ldr	r3, .L115+12
 1792 01c6 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 49


 1793 01c8 1846     		mov	r0, r3
 1794 01ca FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1795 01ce 0346     		mov	r3, r0
 1796 01d0 012B     		cmp	r3, #1
 1797 01d2 28D0     		beq	.L109
 1798              	.LBB72:
 1799              	.LBB73:
 1800              	.LBB74:
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1801              		.loc 2 211 0 discriminator 1
 1802              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1803 01d4 EFF31182 			mrs r2, basepri											
 1804 01d8 4FF0A003 		mov r3, #160												
 1805 01dc 83F31188 		msr basepri, r3											
 1806 01e0 BFF36F8F 		isb														
 1807 01e4 BFF34F8F 		dsb														
 1808              	
 1809              	@ 0 "" 2
 1810              		.thumb
 1811 01e8 FA61     		str	r2, [r7, #28]
 1812 01ea BB61     		str	r3, [r7, #24]
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1813              		.loc 2 223 0 discriminator 1
 1814 01ec FB69     		ldr	r3, [r7, #28]
 1815              	.LBE74:
 1816              	.LBE73:
 1817              		.loc 1 677 0 discriminator 1
 1818 01ee BB64     		str	r3, [r7, #72]
 1819 01f0 2C4B     		ldr	r3, .L115+16
 1820 01f2 1B68     		ldr	r3, [r3]
 1821 01f4 0133     		adds	r3, r3, #1
 1822 01f6 2B4A     		ldr	r2, .L115+16
 1823 01f8 1360     		str	r3, [r2]
 1824 01fa 294B     		ldr	r3, .L115+12
 1825 01fc 1A68     		ldr	r2, [r3]
 1826 01fe 3B46     		mov	r3, r7
 1827 0200 1046     		mov	r0, r2
 1828 0202 2849     		ldr	r1, .L115+16
 1829 0204 1A46     		mov	r2, r3
 1830 0206 0023     		movs	r3, #0
 1831 0208 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1832 020c 0346     		mov	r3, r0
 1833 020e 012B     		cmp	r3, #1
 1834 0210 04D0     		beq	.L111
 1835              		.loc 1 677 0 is_stmt 0 discriminator 2
 1836 0212 244B     		ldr	r3, .L115+16
 1837 0214 1B68     		ldr	r3, [r3]
 1838 0216 013B     		subs	r3, r3, #1
 1839 0218 224A     		ldr	r2, .L115+16
 1840 021a 1360     		str	r3, [r2]
 1841              	.L111:
 1842 021c BB6C     		ldr	r3, [r7, #72]
 1843 021e 7B61     		str	r3, [r7, #20]
 1844              	.LBB75:
 1845              	.LBB76:
 1846              		.loc 2 229 0 is_stmt 1 discriminator 4
 1847 0220 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 50


 1848              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1849 0222 83F31188 			msr basepri, r3	
 1850              	@ 0 "" 2
 1851              		.thumb
 1852              	.L109:
 1853              	.LBE76:
 1854              	.LBE75:
 1855              	.LBE72:
 678:..\..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1856              		.loc 1 678 0
 1857 0226 1E4B     		ldr	r3, .L115+12
 1858 0228 1B68     		ldr	r3, [r3]
 1859 022a 1846     		mov	r0, r3
 1860 022c FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1861 0230 0346     		mov	r3, r0
 1862 0232 012B     		cmp	r3, #1
 1863 0234 28D0     		beq	.L104
 1864              	.LBB77:
 1865              	.LBB78:
 1866              	.LBB79:
 211:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** 	(
 1867              		.loc 2 211 0 discriminator 1
 1868              	@ 211 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1869 0236 EFF31182 			mrs r2, basepri											
 1870 023a 4FF0A003 		mov r3, #160												
 1871 023e 83F31188 		msr basepri, r3											
 1872 0242 BFF36F8F 		isb														
 1873 0246 BFF34F8F 		dsb														
 1874              	
 1875              	@ 0 "" 2
 1876              		.thumb
 1877 024a 3A61     		str	r2, [r7, #16]
 1878 024c FB60     		str	r3, [r7, #12]
 223:../../../Source/portable/GCC/ARM_CM3/portmacro.h **** }
 1879              		.loc 2 223 0 discriminator 1
 1880 024e 3B69     		ldr	r3, [r7, #16]
 1881              	.LBE79:
 1882              	.LBE78:
 1883              		.loc 1 678 0 discriminator 1
 1884 0250 7B64     		str	r3, [r7, #68]
 1885 0252 144B     		ldr	r3, .L115+16
 1886 0254 1B68     		ldr	r3, [r3]
 1887 0256 0133     		adds	r3, r3, #1
 1888 0258 124A     		ldr	r2, .L115+16
 1889 025a 1360     		str	r3, [r2]
 1890 025c 104B     		ldr	r3, .L115+12
 1891 025e 1A68     		ldr	r2, [r3]
 1892 0260 3B46     		mov	r3, r7
 1893 0262 1046     		mov	r0, r2
 1894 0264 0F49     		ldr	r1, .L115+16
 1895 0266 1A46     		mov	r2, r3
 1896 0268 0023     		movs	r3, #0
 1897 026a FFF7FEFF 		bl	xQueueGenericSendFromISR
 1898 026e 0346     		mov	r3, r0
 1899 0270 012B     		cmp	r3, #1
 1900 0272 04D0     		beq	.L113
 1901              		.loc 1 678 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 51


 1902 0274 0B4B     		ldr	r3, .L115+16
 1903 0276 1B68     		ldr	r3, [r3]
 1904 0278 013B     		subs	r3, r3, #1
 1905 027a 0A4A     		ldr	r2, .L115+16
 1906 027c 1360     		str	r3, [r2]
 1907              	.L113:
 1908 027e 7B6C     		ldr	r3, [r7, #68]
 1909 0280 BB60     		str	r3, [r7, #8]
 1910              	.LBB80:
 1911              	.LBB81:
 1912              		.loc 2 229 0 is_stmt 1 discriminator 4
 1913 0282 BB68     		ldr	r3, [r7, #8]
 1914              	@ 229 "../../../Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1915 0284 83F31188 			msr basepri, r3	
 1916              	@ 0 "" 2
 1917              		.thumb
 1918              	.L104:
 1919              	.LBE81:
 1920              	.LBE80:
 1921              	.LBE77:
 679:..\..\Common\Minimal/IntQueue.c **** 	}
 680:..\..\Common\Minimal/IntQueue.c **** 
 681:..\..\Common\Minimal/IntQueue.c **** 	return xHigherPriorityTaskWoken;
 1922              		.loc 1 681 0
 1923 0288 3B68     		ldr	r3, [r7]
 682:..\..\Common\Minimal/IntQueue.c **** }
 1924              		.loc 1 682 0
 1925 028a 1846     		mov	r0, r3
 1926 028c 5837     		adds	r7, r7, #88
 1927              		.cfi_def_cfa_offset 8
 1928 028e BD46     		mov	sp, r7
 1929              		.cfi_def_cfa_register 13
 1930              		@ sp needed
 1931 0290 80BD     		pop	{r7, pc}
 1932              	.L116:
 1933 0292 00BF     		.align	2
 1934              	.L115:
 1935 0294 BC010000 		.word	uxNextOperation.6462
 1936 0298 00000000 		.word	xNormallyEmptyQueue
 1937 029c 20000000 		.word	uxValueForNormallyEmptyQueue
 1938 02a0 04000000 		.word	xNormallyFullQueue
 1939 02a4 24000000 		.word	uxValueForNormallyFullQueue
 1940              		.cfi_endproc
 1941              	.LFE78:
 1942              		.size	xSecondTimerHandler, .-xSecondTimerHandler
 1943              		.section	.text.xAreIntQueueTasksStillRunning,"ax",%progbits
 1944              		.align	2
 1945              		.global	xAreIntQueueTasksStillRunning
 1946              		.thumb
 1947              		.thumb_func
 1948              		.type	xAreIntQueueTasksStillRunning, %function
 1949              	xAreIntQueueTasksStillRunning:
 1950              	.LFB79:
 683:..\..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 684:..\..\Common\Minimal/IntQueue.c **** 
 685:..\..\Common\Minimal/IntQueue.c **** 
 686:..\..\Common\Minimal/IntQueue.c **** BaseType_t xAreIntQueueTasksStillRunning( void )
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 52


 687:..\..\Common\Minimal/IntQueue.c **** {
 1951              		.loc 1 687 0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 1, uses_anonymous_args = 0
 1955 0000 80B5     		push	{r7, lr}
 1956              		.cfi_def_cfa_offset 8
 1957              		.cfi_offset 7, -8
 1958              		.cfi_offset 14, -4
 1959 0002 00AF     		add	r7, sp, #0
 1960              		.cfi_def_cfa_register 7
 688:..\..\Common\Minimal/IntQueue.c **** static UBaseType_t uxLastHighPriorityLoops1 = 0, uxLastHighPriorityLoops2 = 0, uxLastLowPriorityLoo
 689:..\..\Common\Minimal/IntQueue.c **** 
 690:..\..\Common\Minimal/IntQueue.c **** 	/* xErrorStatus can be set outside of this function.  This function just
 691:..\..\Common\Minimal/IntQueue.c **** 	checks that all the tasks are still cycling. */
 692:..\..\Common\Minimal/IntQueue.c **** 
 693:..\..\Common\Minimal/IntQueue.c **** 	if( uxHighPriorityLoops1 == uxLastHighPriorityLoops1 )
 1961              		.loc 1 693 0
 1962 0004 1D4B     		ldr	r3, .L123
 1963 0006 1A68     		ldr	r2, [r3]
 1964 0008 1D4B     		ldr	r3, .L123+4
 1965 000a 1B68     		ldr	r3, [r3]
 1966 000c 9A42     		cmp	r2, r3
 1967 000e 03D1     		bne	.L118
 694:..\..\Common\Minimal/IntQueue.c **** 	{
 695:..\..\Common\Minimal/IntQueue.c **** 		/* The high priority 1 task has stalled. */
 696:..\..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 1968              		.loc 1 696 0
 1969 0010 4FF42E70 		mov	r0, #696
 1970 0014 FFF7FEFF 		bl	prvQueueAccessLogError
 1971              	.L118:
 697:..\..\Common\Minimal/IntQueue.c **** 	}
 698:..\..\Common\Minimal/IntQueue.c **** 
 699:..\..\Common\Minimal/IntQueue.c **** 	uxLastHighPriorityLoops1 = uxHighPriorityLoops1;
 1972              		.loc 1 699 0
 1973 0018 184B     		ldr	r3, .L123
 1974 001a 1B68     		ldr	r3, [r3]
 1975 001c 184A     		ldr	r2, .L123+4
 1976 001e 1360     		str	r3, [r2]
 700:..\..\Common\Minimal/IntQueue.c **** 
 701:..\..\Common\Minimal/IntQueue.c **** 	if( uxHighPriorityLoops2 == uxLastHighPriorityLoops2 )
 1977              		.loc 1 701 0
 1978 0020 184B     		ldr	r3, .L123+8
 1979 0022 1A68     		ldr	r2, [r3]
 1980 0024 184B     		ldr	r3, .L123+12
 1981 0026 1B68     		ldr	r3, [r3]
 1982 0028 9A42     		cmp	r2, r3
 1983 002a 03D1     		bne	.L119
 702:..\..\Common\Minimal/IntQueue.c **** 	{
 703:..\..\Common\Minimal/IntQueue.c **** 		/* The high priority 2 task has stalled. */
 704:..\..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 1984              		.loc 1 704 0
 1985 002c 4FF43070 		mov	r0, #704
 1986 0030 FFF7FEFF 		bl	prvQueueAccessLogError
 1987              	.L119:
 705:..\..\Common\Minimal/IntQueue.c **** 	}
 706:..\..\Common\Minimal/IntQueue.c **** 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 53


 707:..\..\Common\Minimal/IntQueue.c **** 	uxLastHighPriorityLoops2 = uxHighPriorityLoops2;
 1988              		.loc 1 707 0
 1989 0034 134B     		ldr	r3, .L123+8
 1990 0036 1B68     		ldr	r3, [r3]
 1991 0038 134A     		ldr	r2, .L123+12
 1992 003a 1360     		str	r3, [r2]
 708:..\..\Common\Minimal/IntQueue.c **** 
 709:..\..\Common\Minimal/IntQueue.c **** 	if( uxLowPriorityLoops1 == uxLastLowPriorityLoops1 )
 1993              		.loc 1 709 0
 1994 003c 134B     		ldr	r3, .L123+16
 1995 003e 1A68     		ldr	r2, [r3]
 1996 0040 134B     		ldr	r3, .L123+20
 1997 0042 1B68     		ldr	r3, [r3]
 1998 0044 9A42     		cmp	r2, r3
 1999 0046 03D1     		bne	.L120
 710:..\..\Common\Minimal/IntQueue.c **** 	{
 711:..\..\Common\Minimal/IntQueue.c **** 		/* The low priority 1 task has stalled. */
 712:..\..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 2000              		.loc 1 712 0
 2001 0048 4FF43270 		mov	r0, #712
 2002 004c FFF7FEFF 		bl	prvQueueAccessLogError
 2003              	.L120:
 713:..\..\Common\Minimal/IntQueue.c **** 	}
 714:..\..\Common\Minimal/IntQueue.c **** 
 715:..\..\Common\Minimal/IntQueue.c **** 	uxLastLowPriorityLoops1 = uxLowPriorityLoops1;
 2004              		.loc 1 715 0
 2005 0050 0E4B     		ldr	r3, .L123+16
 2006 0052 1B68     		ldr	r3, [r3]
 2007 0054 0E4A     		ldr	r2, .L123+20
 2008 0056 1360     		str	r3, [r2]
 716:..\..\Common\Minimal/IntQueue.c **** 
 717:..\..\Common\Minimal/IntQueue.c **** 	if( uxLowPriorityLoops2 == uxLastLowPriorityLoops2 )
 2009              		.loc 1 717 0
 2010 0058 0E4B     		ldr	r3, .L123+24
 2011 005a 1A68     		ldr	r2, [r3]
 2012 005c 0E4B     		ldr	r3, .L123+28
 2013 005e 1B68     		ldr	r3, [r3]
 2014 0060 9A42     		cmp	r2, r3
 2015 0062 03D1     		bne	.L121
 718:..\..\Common\Minimal/IntQueue.c **** 	{
 719:..\..\Common\Minimal/IntQueue.c **** 		/* The low priority 2 task has stalled. */
 720:..\..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 2016              		.loc 1 720 0
 2017 0064 4FF43470 		mov	r0, #720
 2018 0068 FFF7FEFF 		bl	prvQueueAccessLogError
 2019              	.L121:
 721:..\..\Common\Minimal/IntQueue.c **** 	}
 722:..\..\Common\Minimal/IntQueue.c **** 
 723:..\..\Common\Minimal/IntQueue.c **** 	uxLastLowPriorityLoops2 = uxLowPriorityLoops2;
 2020              		.loc 1 723 0
 2021 006c 094B     		ldr	r3, .L123+24
 2022 006e 1B68     		ldr	r3, [r3]
 2023 0070 094A     		ldr	r2, .L123+28
 2024 0072 1360     		str	r3, [r2]
 724:..\..\Common\Minimal/IntQueue.c **** 
 725:..\..\Common\Minimal/IntQueue.c **** 	return xErrorStatus;
 2025              		.loc 1 725 0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 54


 2026 0074 094B     		ldr	r3, .L123+32
 2027 0076 1B68     		ldr	r3, [r3]
 726:..\..\Common\Minimal/IntQueue.c **** }
 2028              		.loc 1 726 0
 2029 0078 1846     		mov	r0, r3
 2030 007a 80BD     		pop	{r7, pc}
 2031              	.L124:
 2032              		.align	2
 2033              	.L123:
 2034 007c 08000000 		.word	uxHighPriorityLoops1
 2035 0080 C0010000 		.word	uxLastHighPriorityLoops1.6471
 2036 0084 0C000000 		.word	uxHighPriorityLoops2
 2037 0088 C4010000 		.word	uxLastHighPriorityLoops2.6472
 2038 008c 10000000 		.word	uxLowPriorityLoops1
 2039 0090 C8010000 		.word	uxLastLowPriorityLoops1.6473
 2040 0094 14000000 		.word	uxLowPriorityLoops2
 2041 0098 CC010000 		.word	uxLastLowPriorityLoops2.6474
 2042 009c 00000000 		.word	xErrorStatus
 2043              		.cfi_endproc
 2044              	.LFE79:
 2045              		.size	xAreIntQueueTasksStillRunning, .-xAreIntQueueTasksStillRunning
 2046              		.bss
 2047              		.align	2
 2048              	uxNextOperation.6453:
 2049 01b8 00000000 		.space	4
 2050              		.align	2
 2051              	uxNextOperation.6462:
 2052 01bc 00000000 		.space	4
 2053              		.align	2
 2054              	uxLastHighPriorityLoops1.6471:
 2055 01c0 00000000 		.space	4
 2056              		.align	2
 2057              	uxLastHighPriorityLoops2.6472:
 2058 01c4 00000000 		.space	4
 2059              		.align	2
 2060              	uxLastLowPriorityLoops1.6473:
 2061 01c8 00000000 		.space	4
 2062              		.align	2
 2063              	uxLastLowPriorityLoops2.6474:
 2064 01cc 00000000 		.space	4
 2065              		.text
 2066              	.Letext0:
 2067              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2068              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2069              		.file 5 "../../../Source/include/queue.h"
 2070              		.file 6 "../../../Source/include/task.h"
 2071              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2072              		.section	.debug_info,"",%progbits
 2073              	.Ldebug_info0:
 2074 0000 24090000 		.4byte	0x924
 2075 0004 0400     		.2byte	0x4
 2076 0006 00000000 		.4byte	.Ldebug_abbrev0
 2077 000a 04       		.byte	0x4
 2078 000b 01       		.uleb128 0x1
 2079 000c E8020000 		.4byte	.LASF81
 2080 0010 01       		.byte	0x1
 2081 0011 C1020000 		.4byte	.LASF82
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 55


 2082 0015 70010000 		.4byte	.LASF83
 2083 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2084 001d 00000000 		.4byte	0
 2085 0021 00000000 		.4byte	.Ldebug_line0
 2086 0025 02       		.uleb128 0x2
 2087 0026 04       		.byte	0x4
 2088 0027 05       		.byte	0x5
 2089 0028 696E7400 		.ascii	"int\000"
 2090 002c 03       		.uleb128 0x3
 2091 002d 04       		.byte	0x4
 2092 002e 07       		.byte	0x7
 2093 002f 91040000 		.4byte	.LASF0
 2094 0033 03       		.uleb128 0x3
 2095 0034 01       		.byte	0x1
 2096 0035 06       		.byte	0x6
 2097 0036 4C040000 		.4byte	.LASF1
 2098 003a 04       		.uleb128 0x4
 2099 003b F0060000 		.4byte	.LASF5
 2100 003f 03       		.byte	0x3
 2101 0040 1D       		.byte	0x1d
 2102 0041 45000000 		.4byte	0x45
 2103 0045 03       		.uleb128 0x3
 2104 0046 01       		.byte	0x1
 2105 0047 08       		.byte	0x8
 2106 0048 19040000 		.4byte	.LASF2
 2107 004c 03       		.uleb128 0x3
 2108 004d 02       		.byte	0x2
 2109 004e 05       		.byte	0x5
 2110 004f 5B020000 		.4byte	.LASF3
 2111 0053 03       		.uleb128 0x3
 2112 0054 02       		.byte	0x2
 2113 0055 07       		.byte	0x7
 2114 0056 F1040000 		.4byte	.LASF4
 2115 005a 04       		.uleb128 0x4
 2116 005b E8050000 		.4byte	.LASF6
 2117 005f 03       		.byte	0x3
 2118 0060 3F       		.byte	0x3f
 2119 0061 65000000 		.4byte	0x65
 2120 0065 03       		.uleb128 0x3
 2121 0066 04       		.byte	0x4
 2122 0067 05       		.byte	0x5
 2123 0068 E0040000 		.4byte	.LASF7
 2124 006c 04       		.uleb128 0x4
 2125 006d C3050000 		.4byte	.LASF8
 2126 0071 03       		.byte	0x3
 2127 0072 41       		.byte	0x41
 2128 0073 77000000 		.4byte	0x77
 2129 0077 03       		.uleb128 0x3
 2130 0078 04       		.byte	0x4
 2131 0079 07       		.byte	0x7
 2132 007a 65050000 		.4byte	.LASF9
 2133 007e 03       		.uleb128 0x3
 2134 007f 08       		.byte	0x8
 2135 0080 05       		.byte	0x5
 2136 0081 95020000 		.4byte	.LASF10
 2137 0085 03       		.uleb128 0x3
 2138 0086 08       		.byte	0x8
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 56


 2139 0087 07       		.byte	0x7
 2140 0088 58040000 		.4byte	.LASF11
 2141 008c 03       		.uleb128 0x3
 2142 008d 04       		.byte	0x4
 2143 008e 07       		.byte	0x7
 2144 008f 75000000 		.4byte	.LASF12
 2145 0093 05       		.uleb128 0x5
 2146 0094 04       		.byte	0x4
 2147 0095 03       		.uleb128 0x3
 2148 0096 01       		.byte	0x1
 2149 0097 08       		.byte	0x8
 2150 0098 DB040000 		.4byte	.LASF13
 2151 009c 04       		.uleb128 0x4
 2152 009d F8010000 		.4byte	.LASF14
 2153 00a1 04       		.byte	0x4
 2154 00a2 15       		.byte	0x15
 2155 00a3 3A000000 		.4byte	0x3a
 2156 00a7 04       		.uleb128 0x4
 2157 00a8 E9040000 		.4byte	.LASF15
 2158 00ac 04       		.byte	0x4
 2159 00ad 2C       		.byte	0x2c
 2160 00ae 5A000000 		.4byte	0x5a
 2161 00b2 04       		.uleb128 0x4
 2162 00b3 88040000 		.4byte	.LASF16
 2163 00b7 04       		.byte	0x4
 2164 00b8 2D       		.byte	0x2d
 2165 00b9 6C000000 		.4byte	0x6c
 2166 00bd 03       		.uleb128 0x3
 2167 00be 04       		.byte	0x4
 2168 00bf 04       		.byte	0x4
 2169 00c0 6E020000 		.4byte	.LASF17
 2170 00c4 03       		.uleb128 0x3
 2171 00c5 08       		.byte	0x8
 2172 00c6 04       		.byte	0x4
 2173 00c7 29010000 		.4byte	.LASF18
 2174 00cb 04       		.uleb128 0x4
 2175 00cc 9E040000 		.4byte	.LASF19
 2176 00d0 02       		.byte	0x2
 2177 00d1 38       		.byte	0x38
 2178 00d2 65000000 		.4byte	0x65
 2179 00d6 04       		.uleb128 0x4
 2180 00d7 93050000 		.4byte	.LASF20
 2181 00db 02       		.byte	0x2
 2182 00dc 39       		.byte	0x39
 2183 00dd 77000000 		.4byte	0x77
 2184 00e1 04       		.uleb128 0x4
 2185 00e2 00040000 		.4byte	.LASF21
 2186 00e6 02       		.byte	0x2
 2187 00e7 3F       		.byte	0x3f
 2188 00e8 B2000000 		.4byte	0xb2
 2189 00ec 04       		.uleb128 0x4
 2190 00ed 55060000 		.4byte	.LASF22
 2191 00f1 05       		.byte	0x5
 2192 00f2 2E       		.byte	0x2e
 2193 00f3 93000000 		.4byte	0x93
 2194 00f7 06       		.uleb128 0x6
 2195 00f8 D6000000 		.4byte	0xd6
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 57


 2196 00fc 04       		.uleb128 0x4
 2197 00fd 8B000000 		.4byte	.LASF23
 2198 0101 06       		.byte	0x6
 2199 0102 3E       		.byte	0x3e
 2200 0103 07010000 		.4byte	0x107
 2201 0107 07       		.uleb128 0x7
 2202 0108 04       		.byte	0x4
 2203 0109 0D010000 		.4byte	0x10d
 2204 010d 08       		.uleb128 0x8
 2205 010e BC030000 		.4byte	.LASF84
 2206 0112 09       		.uleb128 0x9
 2207 0113 01       		.byte	0x1
 2208 0114 06       		.byte	0x6
 2209 0115 48       		.byte	0x48
 2210 0116 3F010000 		.4byte	0x13f
 2211 011a 0A       		.uleb128 0xa
 2212 011b 9F050000 		.4byte	.LASF24
 2213 011f 00       		.sleb128 0
 2214 0120 0A       		.uleb128 0xa
 2215 0121 45040000 		.4byte	.LASF25
 2216 0125 01       		.sleb128 1
 2217 0126 0A       		.uleb128 0xa
 2218 0127 00000000 		.4byte	.LASF26
 2219 012b 02       		.sleb128 2
 2220 012c 0A       		.uleb128 0xa
 2221 012d F2050000 		.4byte	.LASF27
 2222 0131 03       		.sleb128 3
 2223 0132 0A       		.uleb128 0xa
 2224 0133 6C000000 		.4byte	.LASF28
 2225 0137 04       		.sleb128 4
 2226 0138 0A       		.uleb128 0xa
 2227 0139 30010000 		.4byte	.LASF29
 2228 013d 05       		.sleb128 5
 2229 013e 00       		.byte	0
 2230 013f 0B       		.uleb128 0xb
 2231 0140 48020000 		.4byte	.LASF85
 2232 0144 02       		.byte	0x2
 2233 0145 CF       		.byte	0xcf
 2234 0146 B2000000 		.4byte	0xb2
 2235 014a 03       		.byte	0x3
 2236 014b 66010000 		.4byte	0x166
 2237 014f 0C       		.uleb128 0xc
 2238 0150 27040000 		.4byte	.LASF30
 2239 0154 02       		.byte	0x2
 2240 0155 D1       		.byte	0xd1
 2241 0156 B2000000 		.4byte	0xb2
 2242 015a 0C       		.uleb128 0xc
 2243 015b FA060000 		.4byte	.LASF31
 2244 015f 02       		.byte	0x2
 2245 0160 D1       		.byte	0xd1
 2246 0161 B2000000 		.4byte	0xb2
 2247 0165 00       		.byte	0
 2248 0166 0D       		.uleb128 0xd
 2249 0167 CB040000 		.4byte	.LASF86
 2250 016b 02       		.byte	0x2
 2251 016c E3       		.byte	0xe3
 2252 016d 03       		.byte	0x3
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 58


 2253 016e 7E010000 		.4byte	0x17e
 2254 0172 0E       		.uleb128 0xe
 2255 0173 B4050000 		.4byte	.LASF87
 2256 0177 02       		.byte	0x2
 2257 0178 E3       		.byte	0xe3
 2258 0179 B2000000 		.4byte	0xb2
 2259 017d 00       		.byte	0
 2260 017e 0F       		.uleb128 0xf
 2261 017f CE050000 		.4byte	.LASF88
 2262 0183 01       		.byte	0x1
 2263 0184 C5       		.byte	0xc5
 2264 0185 00000000 		.4byte	.LFB68
 2265 0189 08010000 		.4byte	.LFE68-.LFB68
 2266 018d 01       		.uleb128 0x1
 2267 018e 9C       		.byte	0x9c
 2268 018f 10       		.uleb128 0x10
 2269 0190 98000000 		.4byte	.LASF34
 2270 0194 01       		.byte	0x1
 2271 0195 DF       		.byte	0xdf
 2272 0196 00000000 		.4byte	.LFB69
 2273 019a 3C000000 		.4byte	.LFE69-.LFB69
 2274 019e 01       		.uleb128 0x1
 2275 019f 9C       		.byte	0x9c
 2276 01a0 C1010000 		.4byte	0x1c1
 2277 01a4 11       		.uleb128 0x11
 2278 01a5 B6040000 		.4byte	.LASF32
 2279 01a9 01       		.byte	0x1
 2280 01aa DF       		.byte	0xdf
 2281 01ab D6000000 		.4byte	0xd6
 2282 01af 02       		.uleb128 0x2
 2283 01b0 91       		.byte	0x91
 2284 01b1 74       		.sleb128 -12
 2285 01b2 11       		.uleb128 0x11
 2286 01b3 65020000 		.4byte	.LASF33
 2287 01b7 01       		.byte	0x1
 2288 01b8 DF       		.byte	0xdf
 2289 01b9 D6000000 		.4byte	0xd6
 2290 01bd 02       		.uleb128 0x2
 2291 01be 91       		.byte	0x91
 2292 01bf 70       		.sleb128 -16
 2293 01c0 00       		.byte	0
 2294 01c1 10       		.uleb128 0x10
 2295 01c2 04050000 		.4byte	.LASF35
 2296 01c6 01       		.byte	0x1
 2297 01c7 F0       		.byte	0xf0
 2298 01c8 00000000 		.4byte	.LFB70
 2299 01cc 3C000000 		.4byte	.LFE70-.LFB70
 2300 01d0 01       		.uleb128 0x1
 2301 01d1 9C       		.byte	0x9c
 2302 01d2 F3010000 		.4byte	0x1f3
 2303 01d6 11       		.uleb128 0x11
 2304 01d7 B6040000 		.4byte	.LASF32
 2305 01db 01       		.byte	0x1
 2306 01dc F0       		.byte	0xf0
 2307 01dd D6000000 		.4byte	0xd6
 2308 01e1 02       		.uleb128 0x2
 2309 01e2 91       		.byte	0x91
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 59


 2310 01e3 74       		.sleb128 -12
 2311 01e4 11       		.uleb128 0x11
 2312 01e5 65020000 		.4byte	.LASF33
 2313 01e9 01       		.byte	0x1
 2314 01ea F0       		.byte	0xf0
 2315 01eb D6000000 		.4byte	0xd6
 2316 01ef 02       		.uleb128 0x2
 2317 01f0 91       		.byte	0x91
 2318 01f1 70       		.sleb128 -16
 2319 01f2 00       		.byte	0
 2320 01f3 12       		.uleb128 0x12
 2321 01f4 4E050000 		.4byte	.LASF36
 2322 01f8 01       		.byte	0x1
 2323 01f9 0101     		.2byte	0x101
 2324 01fb 00000000 		.4byte	.LFB71
 2325 01ff 28000000 		.4byte	.LFE71-.LFB71
 2326 0203 01       		.uleb128 0x1
 2327 0204 9C       		.byte	0x9c
 2328 0205 19020000 		.4byte	0x219
 2329 0209 13       		.uleb128 0x13
 2330 020a F9030000 		.4byte	.LASF37
 2331 020e 01       		.byte	0x1
 2332 020f 0101     		.2byte	0x101
 2333 0211 D6000000 		.4byte	0xd6
 2334 0215 02       		.uleb128 0x2
 2335 0216 91       		.byte	0x91
 2336 0217 74       		.sleb128 -12
 2337 0218 00       		.byte	0
 2338 0219 14       		.uleb128 0x14
 2339 021a 98060000 		.4byte	.LASF38
 2340 021e 01       		.byte	0x1
 2341 021f 0901     		.2byte	0x109
 2342 0221 00000000 		.4byte	.LFB72
 2343 0225 70010000 		.4byte	.LFE72-.LFB72
 2344 0229 01       		.uleb128 0x1
 2345 022a 9C       		.byte	0x9c
 2346 022b A7020000 		.4byte	0x2a7
 2347 022f 13       		.uleb128 0x13
 2348 0230 A9040000 		.4byte	.LASF39
 2349 0234 01       		.byte	0x1
 2350 0235 0901     		.2byte	0x109
 2351 0237 93000000 		.4byte	0x93
 2352 023b 02       		.uleb128 0x2
 2353 023c 91       		.byte	0x91
 2354 023d 54       		.sleb128 -44
 2355 023e 15       		.uleb128 0x15
 2356 023f FD050000 		.4byte	.LASF40
 2357 0243 01       		.byte	0x1
 2358 0244 0B01     		.2byte	0x10b
 2359 0246 D6000000 		.4byte	0xd6
 2360 024a 02       		.uleb128 0x2
 2361 024b 91       		.byte	0x91
 2362 024c 5C       		.sleb128 -36
 2363 024d 16       		.uleb128 0x16
 2364 024e 757800   		.ascii	"ux\000"
 2365 0251 01       		.byte	0x1
 2366 0252 0B01     		.2byte	0x10b
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 60


 2367 0254 D6000000 		.4byte	0xd6
 2368 0258 02       		.uleb128 0x2
 2369 0259 91       		.byte	0x91
 2370 025a 74       		.sleb128 -12
 2371 025b 15       		.uleb128 0x15
 2372 025c 60010000 		.4byte	.LASF41
 2373 0260 01       		.byte	0x1
 2374 0261 0B01     		.2byte	0x10b
 2375 0263 D6000000 		.4byte	0xd6
 2376 0267 02       		.uleb128 0x2
 2377 0268 91       		.byte	0x91
 2378 0269 70       		.sleb128 -16
 2379 026a 15       		.uleb128 0x15
 2380 026b 68010000 		.4byte	.LASF42
 2381 026f 01       		.byte	0x1
 2382 0270 0B01     		.2byte	0x10b
 2383 0272 D6000000 		.4byte	0xd6
 2384 0276 02       		.uleb128 0x2
 2385 0277 91       		.byte	0x91
 2386 0278 6C       		.sleb128 -20
 2387 0279 15       		.uleb128 0x15
 2388 027a BE040000 		.4byte	.LASF43
 2389 027e 01       		.byte	0x1
 2390 027f 0B01     		.2byte	0x10b
 2391 0281 D6000000 		.4byte	0xd6
 2392 0285 02       		.uleb128 0x2
 2393 0286 91       		.byte	0x91
 2394 0287 68       		.sleb128 -24
 2395 0288 15       		.uleb128 0x15
 2396 0289 39060000 		.4byte	.LASF44
 2397 028d 01       		.byte	0x1
 2398 028e 0B01     		.2byte	0x10b
 2399 0290 D6000000 		.4byte	0xd6
 2400 0294 02       		.uleb128 0x2
 2401 0295 91       		.byte	0x91
 2402 0296 64       		.sleb128 -28
 2403 0297 15       		.uleb128 0x15
 2404 0298 47060000 		.4byte	.LASF45
 2405 029c 01       		.byte	0x1
 2406 029d 0B01     		.2byte	0x10b
 2407 029f D6000000 		.4byte	0xd6
 2408 02a3 02       		.uleb128 0x2
 2409 02a4 91       		.byte	0x91
 2410 02a5 60       		.sleb128 -32
 2411 02a6 00       		.byte	0
 2412 02a7 14       		.uleb128 0x14
 2413 02a8 2C050000 		.4byte	.LASF46
 2414 02ac 01       		.byte	0x1
 2415 02ad 8401     		.2byte	0x184
 2416 02af 00000000 		.4byte	.LFB73
 2417 02b3 B8000000 		.4byte	.LFE73-.LFB73
 2418 02b7 01       		.uleb128 0x1
 2419 02b8 9C       		.byte	0x9c
 2420 02b9 EB020000 		.4byte	0x2eb
 2421 02bd 13       		.uleb128 0x13
 2422 02be A9040000 		.4byte	.LASF39
 2423 02c2 01       		.byte	0x1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 61


 2424 02c3 8401     		.2byte	0x184
 2425 02c5 93000000 		.4byte	0x93
 2426 02c9 02       		.uleb128 0x2
 2427 02ca 91       		.byte	0x91
 2428 02cb 6C       		.sleb128 -20
 2429 02cc 15       		.uleb128 0x15
 2430 02cd B6040000 		.4byte	.LASF32
 2431 02d1 01       		.byte	0x1
 2432 02d2 8601     		.2byte	0x186
 2433 02d4 D6000000 		.4byte	0xd6
 2434 02d8 02       		.uleb128 0x2
 2435 02d9 91       		.byte	0x91
 2436 02da 74       		.sleb128 -12
 2437 02db 15       		.uleb128 0x15
 2438 02dc FD050000 		.4byte	.LASF40
 2439 02e0 01       		.byte	0x1
 2440 02e1 8601     		.2byte	0x186
 2441 02e3 D6000000 		.4byte	0xd6
 2442 02e7 02       		.uleb128 0x2
 2443 02e8 91       		.byte	0x91
 2444 02e9 70       		.sleb128 -16
 2445 02ea 00       		.byte	0
 2446 02eb 14       		.uleb128 0x14
 2447 02ec 47000000 		.4byte	.LASF47
 2448 02f0 01       		.byte	0x1
 2449 02f1 B401     		.2byte	0x1b4
 2450 02f3 00000000 		.4byte	.LFB74
 2451 02f7 50010000 		.4byte	.LFE74-.LFB74
 2452 02fb 01       		.uleb128 0x1
 2453 02fc 9C       		.byte	0x9c
 2454 02fd 3D030000 		.4byte	0x33d
 2455 0301 13       		.uleb128 0x13
 2456 0302 A9040000 		.4byte	.LASF39
 2457 0306 01       		.byte	0x1
 2458 0307 B401     		.2byte	0x1b4
 2459 0309 93000000 		.4byte	0x93
 2460 030d 02       		.uleb128 0x2
 2461 030e 91       		.byte	0x91
 2462 030f 64       		.sleb128 -28
 2463 0310 15       		.uleb128 0x15
 2464 0311 39040000 		.4byte	.LASF48
 2465 0315 01       		.byte	0x1
 2466 0316 B601     		.2byte	0x1b6
 2467 0318 D6000000 		.4byte	0xd6
 2468 031c 02       		.uleb128 0x2
 2469 031d 91       		.byte	0x91
 2470 031e 6C       		.sleb128 -20
 2471 031f 16       		.uleb128 0x16
 2472 0320 757800   		.ascii	"ux\000"
 2473 0323 01       		.byte	0x1
 2474 0324 B601     		.2byte	0x1b6
 2475 0326 D6000000 		.4byte	0xd6
 2476 032a 02       		.uleb128 0x2
 2477 032b 91       		.byte	0x91
 2478 032c 74       		.sleb128 -12
 2479 032d 15       		.uleb128 0x15
 2480 032e BE040000 		.4byte	.LASF43
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 62


 2481 0332 01       		.byte	0x1
 2482 0333 B601     		.2byte	0x1b6
 2483 0335 D6000000 		.4byte	0xd6
 2484 0339 02       		.uleb128 0x2
 2485 033a 91       		.byte	0x91
 2486 033b 70       		.sleb128 -16
 2487 033c 00       		.byte	0
 2488 033d 14       		.uleb128 0x14
 2489 033e 00020000 		.4byte	.LASF49
 2490 0342 01       		.byte	0x1
 2491 0343 1B02     		.2byte	0x21b
 2492 0345 00000000 		.4byte	.LFB75
 2493 0349 B0000000 		.4byte	.LFE75-.LFB75
 2494 034d 01       		.uleb128 0x1
 2495 034e 9C       		.byte	0x9c
 2496 034f 80030000 		.4byte	0x380
 2497 0353 13       		.uleb128 0x13
 2498 0354 A9040000 		.4byte	.LASF39
 2499 0358 01       		.byte	0x1
 2500 0359 1B02     		.2byte	0x21b
 2501 035b 93000000 		.4byte	0x93
 2502 035f 02       		.uleb128 0x2
 2503 0360 91       		.byte	0x91
 2504 0361 6C       		.sleb128 -20
 2505 0362 15       		.uleb128 0x15
 2506 0363 39040000 		.4byte	.LASF48
 2507 0367 01       		.byte	0x1
 2508 0368 1D02     		.2byte	0x21d
 2509 036a D6000000 		.4byte	0xd6
 2510 036e 02       		.uleb128 0x2
 2511 036f 91       		.byte	0x91
 2512 0370 70       		.sleb128 -16
 2513 0371 16       		.uleb128 0x16
 2514 0372 757800   		.ascii	"ux\000"
 2515 0375 01       		.byte	0x1
 2516 0376 1D02     		.2byte	0x21d
 2517 0378 D6000000 		.4byte	0xd6
 2518 037c 02       		.uleb128 0x2
 2519 037d 91       		.byte	0x91
 2520 037e 74       		.sleb128 -12
 2521 037f 00       		.byte	0
 2522 0380 14       		.uleb128 0x14
 2523 0381 74020000 		.4byte	.LASF50
 2524 0385 01       		.byte	0x1
 2525 0386 4902     		.2byte	0x249
 2526 0388 00000000 		.4byte	.LFB76
 2527 038c A4000000 		.4byte	.LFE76-.LFB76
 2528 0390 01       		.uleb128 0x1
 2529 0391 9C       		.byte	0x9c
 2530 0392 C4030000 		.4byte	0x3c4
 2531 0396 13       		.uleb128 0x13
 2532 0397 A9040000 		.4byte	.LASF39
 2533 039b 01       		.byte	0x1
 2534 039c 4902     		.2byte	0x249
 2535 039e 93000000 		.4byte	0x93
 2536 03a2 02       		.uleb128 0x2
 2537 03a3 91       		.byte	0x91
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 63


 2538 03a4 6C       		.sleb128 -20
 2539 03a5 15       		.uleb128 0x15
 2540 03a6 B6040000 		.4byte	.LASF32
 2541 03aa 01       		.byte	0x1
 2542 03ab 4B02     		.2byte	0x24b
 2543 03ad D6000000 		.4byte	0xd6
 2544 03b1 02       		.uleb128 0x2
 2545 03b2 91       		.byte	0x91
 2546 03b3 74       		.sleb128 -12
 2547 03b4 15       		.uleb128 0x15
 2548 03b5 E1020000 		.4byte	.LASF51
 2549 03b9 01       		.byte	0x1
 2550 03ba 4B02     		.2byte	0x24b
 2551 03bc D6000000 		.4byte	0xd6
 2552 03c0 02       		.uleb128 0x2
 2553 03c1 91       		.byte	0x91
 2554 03c2 70       		.sleb128 -16
 2555 03c3 00       		.byte	0
 2556 03c4 17       		.uleb128 0x17
 2557 03c5 4D010000 		.4byte	.LASF56
 2558 03c9 01       		.byte	0x1
 2559 03ca 7202     		.2byte	0x272
 2560 03cc CB000000 		.4byte	0xcb
 2561 03d0 00000000 		.4byte	.LFB77
 2562 03d4 CC010000 		.4byte	.LFE77-.LFB77
 2563 03d8 01       		.uleb128 0x1
 2564 03d9 9C       		.byte	0x9c
 2565 03da 3A050000 		.4byte	0x53a
 2566 03de 15       		.uleb128 0x15
 2567 03df 6F040000 		.4byte	.LASF52
 2568 03e3 01       		.byte	0x1
 2569 03e4 7402     		.2byte	0x274
 2570 03e6 CB000000 		.4byte	0xcb
 2571 03ea 02       		.uleb128 0x2
 2572 03eb 91       		.byte	0x91
 2573 03ec 44       		.sleb128 -60
 2574 03ed 15       		.uleb128 0x15
 2575 03ee A8050000 		.4byte	.LASF53
 2576 03f2 01       		.byte	0x1
 2577 03f3 7502     		.2byte	0x275
 2578 03f5 D6000000 		.4byte	0xd6
 2579 03f9 02       		.uleb128 0x2
 2580 03fa 91       		.byte	0x91
 2581 03fb 40       		.sleb128 -64
 2582 03fc 15       		.uleb128 0x15
 2583 03fd 38020000 		.4byte	.LASF54
 2584 0401 01       		.byte	0x1
 2585 0402 7602     		.2byte	0x276
 2586 0404 D6000000 		.4byte	0xd6
 2587 0408 05       		.uleb128 0x5
 2588 0409 03       		.byte	0x3
 2589 040a B8010000 		.4byte	uxNextOperation.6453
 2590 040e 18       		.uleb128 0x18
 2591 040f 32000000 		.4byte	.LBB42
 2592 0413 52000000 		.4byte	.LBE42-.LBB42
 2593 0417 73040000 		.4byte	0x473
 2594 041b 15       		.uleb128 0x15
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 64


 2595 041c 04060000 		.4byte	.LASF55
 2596 0420 01       		.byte	0x1
 2597 0421 7F02     		.2byte	0x27f
 2598 0423 D6000000 		.4byte	0xd6
 2599 0427 02       		.uleb128 0x2
 2600 0428 91       		.byte	0x91
 2601 0429 74       		.sleb128 -12
 2602 042a 19       		.uleb128 0x19
 2603 042b 3F010000 		.4byte	0x13f
 2604 042f 32000000 		.4byte	.LBB43
 2605 0433 1A000000 		.4byte	.LBE43-.LBB43
 2606 0437 01       		.byte	0x1
 2607 0438 7F02     		.2byte	0x27f
 2608 043a 59040000 		.4byte	0x459
 2609 043e 1A       		.uleb128 0x1a
 2610 043f 32000000 		.4byte	.LBB44
 2611 0443 1A000000 		.4byte	.LBE44-.LBB44
 2612 0447 1B       		.uleb128 0x1b
 2613 0448 4F010000 		.4byte	0x14f
 2614 044c 02       		.uleb128 0x2
 2615 044d 91       		.byte	0x91
 2616 044e 68       		.sleb128 -24
 2617 044f 1B       		.uleb128 0x1b
 2618 0450 5A010000 		.4byte	0x15a
 2619 0454 02       		.uleb128 0x2
 2620 0455 91       		.byte	0x91
 2621 0456 64       		.sleb128 -28
 2622 0457 00       		.byte	0
 2623 0458 00       		.byte	0
 2624 0459 1C       		.uleb128 0x1c
 2625 045a 66010000 		.4byte	0x166
 2626 045e 7E000000 		.4byte	.LBB45
 2627 0462 06000000 		.4byte	.LBE45-.LBB45
 2628 0466 01       		.byte	0x1
 2629 0467 7F02     		.2byte	0x27f
 2630 0469 1D       		.uleb128 0x1d
 2631 046a 72010000 		.4byte	0x172
 2632 046e 02       		.uleb128 0x2
 2633 046f 91       		.byte	0x91
 2634 0470 60       		.sleb128 -32
 2635 0471 00       		.byte	0
 2636 0472 00       		.byte	0
 2637 0473 18       		.uleb128 0x18
 2638 0474 94000000 		.4byte	.LBB47
 2639 0478 52000000 		.4byte	.LBE47-.LBB47
 2640 047c D8040000 		.4byte	0x4d8
 2641 0480 15       		.uleb128 0x15
 2642 0481 04060000 		.4byte	.LASF55
 2643 0485 01       		.byte	0x1
 2644 0486 8002     		.2byte	0x280
 2645 0488 D6000000 		.4byte	0xd6
 2646 048c 02       		.uleb128 0x2
 2647 048d 91       		.byte	0x91
 2648 048e 70       		.sleb128 -16
 2649 048f 19       		.uleb128 0x19
 2650 0490 3F010000 		.4byte	0x13f
 2651 0494 94000000 		.4byte	.LBB48
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 65


 2652 0498 1A000000 		.4byte	.LBE48-.LBB48
 2653 049c 01       		.byte	0x1
 2654 049d 8002     		.2byte	0x280
 2655 049f BE040000 		.4byte	0x4be
 2656 04a3 1A       		.uleb128 0x1a
 2657 04a4 94000000 		.4byte	.LBB49
 2658 04a8 1A000000 		.4byte	.LBE49-.LBB49
 2659 04ac 1B       		.uleb128 0x1b
 2660 04ad 4F010000 		.4byte	0x14f
 2661 04b1 02       		.uleb128 0x2
 2662 04b2 91       		.byte	0x91
 2663 04b3 5C       		.sleb128 -36
 2664 04b4 1B       		.uleb128 0x1b
 2665 04b5 5A010000 		.4byte	0x15a
 2666 04b9 02       		.uleb128 0x2
 2667 04ba 91       		.byte	0x91
 2668 04bb 58       		.sleb128 -40
 2669 04bc 00       		.byte	0
 2670 04bd 00       		.byte	0
 2671 04be 1C       		.uleb128 0x1c
 2672 04bf 66010000 		.4byte	0x166
 2673 04c3 E0000000 		.4byte	.LBB50
 2674 04c7 06000000 		.4byte	.LBE50-.LBB50
 2675 04cb 01       		.byte	0x1
 2676 04cc 8002     		.2byte	0x280
 2677 04ce 1D       		.uleb128 0x1d
 2678 04cf 72010000 		.4byte	0x172
 2679 04d3 02       		.uleb128 0x2
 2680 04d4 91       		.byte	0x91
 2681 04d5 54       		.sleb128 -44
 2682 04d6 00       		.byte	0
 2683 04d7 00       		.byte	0
 2684 04d8 1A       		.uleb128 0x1a
 2685 04d9 F6000000 		.4byte	.LBB52
 2686 04dd 54000000 		.4byte	.LBE52-.LBB52
 2687 04e1 15       		.uleb128 0x15
 2688 04e2 04060000 		.4byte	.LASF55
 2689 04e6 01       		.byte	0x1
 2690 04e7 8102     		.2byte	0x281
 2691 04e9 D6000000 		.4byte	0xd6
 2692 04ed 02       		.uleb128 0x2
 2693 04ee 91       		.byte	0x91
 2694 04ef 6C       		.sleb128 -20
 2695 04f0 19       		.uleb128 0x19
 2696 04f1 3F010000 		.4byte	0x13f
 2697 04f5 F6000000 		.4byte	.LBB53
 2698 04f9 1A000000 		.4byte	.LBE53-.LBB53
 2699 04fd 01       		.byte	0x1
 2700 04fe 8102     		.2byte	0x281
 2701 0500 1F050000 		.4byte	0x51f
 2702 0504 1A       		.uleb128 0x1a
 2703 0505 F6000000 		.4byte	.LBB54
 2704 0509 1A000000 		.4byte	.LBE54-.LBB54
 2705 050d 1B       		.uleb128 0x1b
 2706 050e 4F010000 		.4byte	0x14f
 2707 0512 02       		.uleb128 0x2
 2708 0513 91       		.byte	0x91
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 66


 2709 0514 50       		.sleb128 -48
 2710 0515 1B       		.uleb128 0x1b
 2711 0516 5A010000 		.4byte	0x15a
 2712 051a 02       		.uleb128 0x2
 2713 051b 91       		.byte	0x91
 2714 051c 4C       		.sleb128 -52
 2715 051d 00       		.byte	0
 2716 051e 00       		.byte	0
 2717 051f 1C       		.uleb128 0x1c
 2718 0520 66010000 		.4byte	0x166
 2719 0524 42010000 		.4byte	.LBB55
 2720 0528 08000000 		.4byte	.LBE55-.LBB55
 2721 052c 01       		.byte	0x1
 2722 052d 8102     		.2byte	0x281
 2723 052f 1D       		.uleb128 0x1d
 2724 0530 72010000 		.4byte	0x172
 2725 0534 02       		.uleb128 0x2
 2726 0535 91       		.byte	0x91
 2727 0536 48       		.sleb128 -56
 2728 0537 00       		.byte	0
 2729 0538 00       		.byte	0
 2730 0539 00       		.byte	0
 2731 053a 17       		.uleb128 0x17
 2732 053b A8030000 		.4byte	.LASF57
 2733 053f 01       		.byte	0x1
 2734 0540 8E02     		.2byte	0x28e
 2735 0542 CB000000 		.4byte	0xcb
 2736 0546 00000000 		.4byte	.LFB78
 2737 054a A8020000 		.4byte	.LFE78-.LFB78
 2738 054e 01       		.uleb128 0x1
 2739 054f 9C       		.byte	0x9c
 2740 0550 82070000 		.4byte	0x782
 2741 0554 15       		.uleb128 0x15
 2742 0555 A8050000 		.4byte	.LASF53
 2743 0559 01       		.byte	0x1
 2744 055a 9002     		.2byte	0x290
 2745 055c D6000000 		.4byte	0xd6
 2746 0560 03       		.uleb128 0x3
 2747 0561 91       		.byte	0x91
 2748 0562 A47F     		.sleb128 -92
 2749 0564 15       		.uleb128 0x15
 2750 0565 6F040000 		.4byte	.LASF52
 2751 0569 01       		.byte	0x1
 2752 056a 9102     		.2byte	0x291
 2753 056c CB000000 		.4byte	0xcb
 2754 0570 03       		.uleb128 0x3
 2755 0571 91       		.byte	0x91
 2756 0572 A07F     		.sleb128 -96
 2757 0574 15       		.uleb128 0x15
 2758 0575 38020000 		.4byte	.LASF54
 2759 0579 01       		.byte	0x1
 2760 057a 9202     		.2byte	0x292
 2761 057c D6000000 		.4byte	0xd6
 2762 0580 05       		.uleb128 0x5
 2763 0581 03       		.byte	0x3
 2764 0582 BC010000 		.4byte	uxNextOperation.6462
 2765 0586 18       		.uleb128 0x18
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 67


 2766 0587 32000000 		.4byte	.LBB57
 2767 058b 52000000 		.4byte	.LBE57-.LBB57
 2768 058f EB050000 		.4byte	0x5eb
 2769 0593 15       		.uleb128 0x15
 2770 0594 04060000 		.4byte	.LASF55
 2771 0598 01       		.byte	0x1
 2772 0599 9B02     		.2byte	0x29b
 2773 059b D6000000 		.4byte	0xd6
 2774 059f 02       		.uleb128 0x2
 2775 05a0 91       		.byte	0x91
 2776 05a1 74       		.sleb128 -12
 2777 05a2 19       		.uleb128 0x19
 2778 05a3 3F010000 		.4byte	0x13f
 2779 05a7 32000000 		.4byte	.LBB58
 2780 05ab 1A000000 		.4byte	.LBE58-.LBB58
 2781 05af 01       		.byte	0x1
 2782 05b0 9B02     		.2byte	0x29b
 2783 05b2 D1050000 		.4byte	0x5d1
 2784 05b6 1A       		.uleb128 0x1a
 2785 05b7 32000000 		.4byte	.LBB59
 2786 05bb 1A000000 		.4byte	.LBE59-.LBB59
 2787 05bf 1B       		.uleb128 0x1b
 2788 05c0 4F010000 		.4byte	0x14f
 2789 05c4 02       		.uleb128 0x2
 2790 05c5 91       		.byte	0x91
 2791 05c6 60       		.sleb128 -32
 2792 05c7 1B       		.uleb128 0x1b
 2793 05c8 5A010000 		.4byte	0x15a
 2794 05cc 02       		.uleb128 0x2
 2795 05cd 91       		.byte	0x91
 2796 05ce 5C       		.sleb128 -36
 2797 05cf 00       		.byte	0
 2798 05d0 00       		.byte	0
 2799 05d1 1C       		.uleb128 0x1c
 2800 05d2 66010000 		.4byte	0x166
 2801 05d6 7E000000 		.4byte	.LBB60
 2802 05da 06000000 		.4byte	.LBE60-.LBB60
 2803 05de 01       		.byte	0x1
 2804 05df 9B02     		.2byte	0x29b
 2805 05e1 1D       		.uleb128 0x1d
 2806 05e2 72010000 		.4byte	0x172
 2807 05e6 02       		.uleb128 0x2
 2808 05e7 91       		.byte	0x91
 2809 05e8 58       		.sleb128 -40
 2810 05e9 00       		.byte	0
 2811 05ea 00       		.byte	0
 2812 05eb 18       		.uleb128 0x18
 2813 05ec 94000000 		.4byte	.LBB62
 2814 05f0 52000000 		.4byte	.LBE62-.LBB62
 2815 05f4 50060000 		.4byte	0x650
 2816 05f8 15       		.uleb128 0x15
 2817 05f9 04060000 		.4byte	.LASF55
 2818 05fd 01       		.byte	0x1
 2819 05fe 9C02     		.2byte	0x29c
 2820 0600 D6000000 		.4byte	0xd6
 2821 0604 02       		.uleb128 0x2
 2822 0605 91       		.byte	0x91
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 68


 2823 0606 70       		.sleb128 -16
 2824 0607 19       		.uleb128 0x19
 2825 0608 3F010000 		.4byte	0x13f
 2826 060c 94000000 		.4byte	.LBB63
 2827 0610 1A000000 		.4byte	.LBE63-.LBB63
 2828 0614 01       		.byte	0x1
 2829 0615 9C02     		.2byte	0x29c
 2830 0617 36060000 		.4byte	0x636
 2831 061b 1A       		.uleb128 0x1a
 2832 061c 94000000 		.4byte	.LBB64
 2833 0620 1A000000 		.4byte	.LBE64-.LBB64
 2834 0624 1B       		.uleb128 0x1b
 2835 0625 4F010000 		.4byte	0x14f
 2836 0629 02       		.uleb128 0x2
 2837 062a 91       		.byte	0x91
 2838 062b 54       		.sleb128 -44
 2839 062c 1B       		.uleb128 0x1b
 2840 062d 5A010000 		.4byte	0x15a
 2841 0631 02       		.uleb128 0x2
 2842 0632 91       		.byte	0x91
 2843 0633 50       		.sleb128 -48
 2844 0634 00       		.byte	0
 2845 0635 00       		.byte	0
 2846 0636 1C       		.uleb128 0x1c
 2847 0637 66010000 		.4byte	0x166
 2848 063b E0000000 		.4byte	.LBB65
 2849 063f 06000000 		.4byte	.LBE65-.LBB65
 2850 0643 01       		.byte	0x1
 2851 0644 9C02     		.2byte	0x29c
 2852 0646 1D       		.uleb128 0x1d
 2853 0647 72010000 		.4byte	0x172
 2854 064b 02       		.uleb128 0x2
 2855 064c 91       		.byte	0x91
 2856 064d 4C       		.sleb128 -52
 2857 064e 00       		.byte	0
 2858 064f 00       		.byte	0
 2859 0650 18       		.uleb128 0x18
 2860 0651 72010000 		.4byte	.LBB67
 2861 0655 52000000 		.4byte	.LBE67-.LBB67
 2862 0659 B5060000 		.4byte	0x6b5
 2863 065d 15       		.uleb128 0x15
 2864 065e 04060000 		.4byte	.LASF55
 2865 0662 01       		.byte	0x1
 2866 0663 A402     		.2byte	0x2a4
 2867 0665 D6000000 		.4byte	0xd6
 2868 0669 02       		.uleb128 0x2
 2869 066a 91       		.byte	0x91
 2870 066b 6C       		.sleb128 -20
 2871 066c 19       		.uleb128 0x19
 2872 066d 3F010000 		.4byte	0x13f
 2873 0671 72010000 		.4byte	.LBB68
 2874 0675 1A000000 		.4byte	.LBE68-.LBB68
 2875 0679 01       		.byte	0x1
 2876 067a A402     		.2byte	0x2a4
 2877 067c 9B060000 		.4byte	0x69b
 2878 0680 1A       		.uleb128 0x1a
 2879 0681 72010000 		.4byte	.LBB69
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 69


 2880 0685 1A000000 		.4byte	.LBE69-.LBB69
 2881 0689 1B       		.uleb128 0x1b
 2882 068a 4F010000 		.4byte	0x14f
 2883 068e 02       		.uleb128 0x2
 2884 068f 91       		.byte	0x91
 2885 0690 48       		.sleb128 -56
 2886 0691 1B       		.uleb128 0x1b
 2887 0692 5A010000 		.4byte	0x15a
 2888 0696 02       		.uleb128 0x2
 2889 0697 91       		.byte	0x91
 2890 0698 44       		.sleb128 -60
 2891 0699 00       		.byte	0
 2892 069a 00       		.byte	0
 2893 069b 1C       		.uleb128 0x1c
 2894 069c 66010000 		.4byte	0x166
 2895 06a0 BE010000 		.4byte	.LBB70
 2896 06a4 06000000 		.4byte	.LBE70-.LBB70
 2897 06a8 01       		.byte	0x1
 2898 06a9 A402     		.2byte	0x2a4
 2899 06ab 1D       		.uleb128 0x1d
 2900 06ac 72010000 		.4byte	0x172
 2901 06b0 02       		.uleb128 0x2
 2902 06b1 91       		.byte	0x91
 2903 06b2 40       		.sleb128 -64
 2904 06b3 00       		.byte	0
 2905 06b4 00       		.byte	0
 2906 06b5 18       		.uleb128 0x18
 2907 06b6 D4010000 		.4byte	.LBB72
 2908 06ba 52000000 		.4byte	.LBE72-.LBB72
 2909 06be 1D070000 		.4byte	0x71d
 2910 06c2 15       		.uleb128 0x15
 2911 06c3 04060000 		.4byte	.LASF55
 2912 06c7 01       		.byte	0x1
 2913 06c8 A502     		.2byte	0x2a5
 2914 06ca D6000000 		.4byte	0xd6
 2915 06ce 02       		.uleb128 0x2
 2916 06cf 91       		.byte	0x91
 2917 06d0 68       		.sleb128 -24
 2918 06d1 19       		.uleb128 0x19
 2919 06d2 3F010000 		.4byte	0x13f
 2920 06d6 D4010000 		.4byte	.LBB73
 2921 06da 1A000000 		.4byte	.LBE73-.LBB73
 2922 06de 01       		.byte	0x1
 2923 06df A502     		.2byte	0x2a5
 2924 06e1 02070000 		.4byte	0x702
 2925 06e5 1A       		.uleb128 0x1a
 2926 06e6 D4010000 		.4byte	.LBB74
 2927 06ea 1A000000 		.4byte	.LBE74-.LBB74
 2928 06ee 1B       		.uleb128 0x1b
 2929 06ef 4F010000 		.4byte	0x14f
 2930 06f3 03       		.uleb128 0x3
 2931 06f4 91       		.byte	0x91
 2932 06f5 BC7F     		.sleb128 -68
 2933 06f7 1B       		.uleb128 0x1b
 2934 06f8 5A010000 		.4byte	0x15a
 2935 06fc 03       		.uleb128 0x3
 2936 06fd 91       		.byte	0x91
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 70


 2937 06fe B87F     		.sleb128 -72
 2938 0700 00       		.byte	0
 2939 0701 00       		.byte	0
 2940 0702 1C       		.uleb128 0x1c
 2941 0703 66010000 		.4byte	0x166
 2942 0707 20020000 		.4byte	.LBB75
 2943 070b 06000000 		.4byte	.LBE75-.LBB75
 2944 070f 01       		.byte	0x1
 2945 0710 A502     		.2byte	0x2a5
 2946 0712 1D       		.uleb128 0x1d
 2947 0713 72010000 		.4byte	0x172
 2948 0717 03       		.uleb128 0x3
 2949 0718 91       		.byte	0x91
 2950 0719 B47F     		.sleb128 -76
 2951 071b 00       		.byte	0
 2952 071c 00       		.byte	0
 2953 071d 1A       		.uleb128 0x1a
 2954 071e 36020000 		.4byte	.LBB77
 2955 0722 52000000 		.4byte	.LBE77-.LBB77
 2956 0726 15       		.uleb128 0x15
 2957 0727 04060000 		.4byte	.LASF55
 2958 072b 01       		.byte	0x1
 2959 072c A602     		.2byte	0x2a6
 2960 072e D6000000 		.4byte	0xd6
 2961 0732 02       		.uleb128 0x2
 2962 0733 91       		.byte	0x91
 2963 0734 64       		.sleb128 -28
 2964 0735 19       		.uleb128 0x19
 2965 0736 3F010000 		.4byte	0x13f
 2966 073a 36020000 		.4byte	.LBB78
 2967 073e 1A000000 		.4byte	.LBE78-.LBB78
 2968 0742 01       		.byte	0x1
 2969 0743 A602     		.2byte	0x2a6
 2970 0745 66070000 		.4byte	0x766
 2971 0749 1A       		.uleb128 0x1a
 2972 074a 36020000 		.4byte	.LBB79
 2973 074e 1A000000 		.4byte	.LBE79-.LBB79
 2974 0752 1B       		.uleb128 0x1b
 2975 0753 4F010000 		.4byte	0x14f
 2976 0757 03       		.uleb128 0x3
 2977 0758 91       		.byte	0x91
 2978 0759 B07F     		.sleb128 -80
 2979 075b 1B       		.uleb128 0x1b
 2980 075c 5A010000 		.4byte	0x15a
 2981 0760 03       		.uleb128 0x3
 2982 0761 91       		.byte	0x91
 2983 0762 AC7F     		.sleb128 -84
 2984 0764 00       		.byte	0
 2985 0765 00       		.byte	0
 2986 0766 1C       		.uleb128 0x1c
 2987 0767 66010000 		.4byte	0x166
 2988 076b 82020000 		.4byte	.LBB80
 2989 076f 06000000 		.4byte	.LBE80-.LBB80
 2990 0773 01       		.byte	0x1
 2991 0774 A602     		.2byte	0x2a6
 2992 0776 1D       		.uleb128 0x1d
 2993 0777 72010000 		.4byte	0x172
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 71


 2994 077b 03       		.uleb128 0x3
 2995 077c 91       		.byte	0x91
 2996 077d A87F     		.sleb128 -88
 2997 077f 00       		.byte	0
 2998 0780 00       		.byte	0
 2999 0781 00       		.byte	0
 3000 0782 17       		.uleb128 0x17
 3001 0783 A3020000 		.4byte	.LASF58
 3002 0787 01       		.byte	0x1
 3003 0788 AE02     		.2byte	0x2ae
 3004 078a CB000000 		.4byte	0xcb
 3005 078e 00000000 		.4byte	.LFB79
 3006 0792 A0000000 		.4byte	.LFE79-.LFB79
 3007 0796 01       		.uleb128 0x1
 3008 0797 9C       		.byte	0x9c
 3009 0798 E5070000 		.4byte	0x7e5
 3010 079c 15       		.uleb128 0x15
 3011 079d 76030000 		.4byte	.LASF59
 3012 07a1 01       		.byte	0x1
 3013 07a2 B002     		.2byte	0x2b0
 3014 07a4 D6000000 		.4byte	0xd6
 3015 07a8 05       		.uleb128 0x5
 3016 07a9 03       		.byte	0x3
 3017 07aa C0010000 		.4byte	uxLastHighPriorityLoops1.6471
 3018 07ae 15       		.uleb128 0x15
 3019 07af 8F030000 		.4byte	.LASF60
 3020 07b3 01       		.byte	0x1
 3021 07b4 B002     		.2byte	0x2b0
 3022 07b6 D6000000 		.4byte	0xd6
 3023 07ba 05       		.uleb128 0x5
 3024 07bb 03       		.byte	0x3
 3025 07bc C4010000 		.4byte	uxLastHighPriorityLoops2.6472
 3026 07c0 15       		.uleb128 0x15
 3027 07c1 D8060000 		.4byte	.LASF61
 3028 07c5 01       		.byte	0x1
 3029 07c6 B002     		.2byte	0x2b0
 3030 07c8 D6000000 		.4byte	0xd6
 3031 07cc 05       		.uleb128 0x5
 3032 07cd 03       		.byte	0x3
 3033 07ce C8010000 		.4byte	uxLastLowPriorityLoops1.6473
 3034 07d2 15       		.uleb128 0x15
 3035 07d3 11010000 		.4byte	.LASF62
 3036 07d7 01       		.byte	0x1
 3037 07d8 B002     		.2byte	0x2b0
 3038 07da D6000000 		.4byte	0xd6
 3039 07de 05       		.uleb128 0x5
 3040 07df 03       		.byte	0x3
 3041 07e0 CC010000 		.4byte	uxLastLowPriorityLoops2.6474
 3042 07e4 00       		.byte	0
 3043 07e5 1E       		.uleb128 0x1e
 3044 07e6 39010000 		.4byte	.LASF63
 3045 07ea 01       		.byte	0x1
 3046 07eb 99       		.byte	0x99
 3047 07ec EC000000 		.4byte	0xec
 3048 07f0 05       		.uleb128 0x5
 3049 07f1 03       		.byte	0x3
 3050 07f2 00000000 		.4byte	xNormallyEmptyQueue
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 72


 3051 07f6 1E       		.uleb128 0x1e
 3052 07f7 25020000 		.4byte	.LASF64
 3053 07fb 01       		.byte	0x1
 3054 07fc 99       		.byte	0x99
 3055 07fd EC000000 		.4byte	0xec
 3056 0801 05       		.uleb128 0x5
 3057 0802 03       		.byte	0x3
 3058 0803 04000000 		.4byte	xNormallyFullQueue
 3059 0807 1E       		.uleb128 0x1e
 3060 0808 E4030000 		.4byte	.LASF65
 3061 080c 01       		.byte	0x1
 3062 080d 9C       		.byte	0x9c
 3063 080e F7000000 		.4byte	0xf7
 3064 0812 05       		.uleb128 0x5
 3065 0813 03       		.byte	0x3
 3066 0814 08000000 		.4byte	uxHighPriorityLoops1
 3067 0818 1E       		.uleb128 0x1e
 3068 0819 CF030000 		.4byte	.LASF66
 3069 081d 01       		.byte	0x1
 3070 081e 9C       		.byte	0x9c
 3071 081f F7000000 		.4byte	0xf7
 3072 0823 05       		.uleb128 0x5
 3073 0824 03       		.byte	0x3
 3074 0825 0C000000 		.4byte	uxHighPriorityLoops2
 3075 0829 1E       		.uleb128 0x1e
 3076 082a 63060000 		.4byte	.LASF67
 3077 082e 01       		.byte	0x1
 3078 082f 9C       		.byte	0x9c
 3079 0830 F7000000 		.4byte	0xf7
 3080 0834 05       		.uleb128 0x5
 3081 0835 03       		.byte	0x3
 3082 0836 10000000 		.4byte	uxLowPriorityLoops1
 3083 083a 1E       		.uleb128 0x1e
 3084 083b 77060000 		.4byte	.LASF68
 3085 083f 01       		.byte	0x1
 3086 0840 9C       		.byte	0x9c
 3087 0841 F7000000 		.4byte	0xf7
 3088 0845 05       		.uleb128 0x5
 3089 0846 03       		.byte	0x3
 3090 0847 14000000 		.4byte	uxLowPriorityLoops2
 3091 084b 1E       		.uleb128 0x1e
 3092 084c 7E000000 		.4byte	.LASF69
 3093 0850 01       		.byte	0x1
 3094 0851 A0       		.byte	0xa0
 3095 0852 CB000000 		.4byte	0xcb
 3096 0856 05       		.uleb128 0x5
 3097 0857 03       		.byte	0x3
 3098 0858 00000000 		.4byte	xErrorStatus
 3099 085c 1E       		.uleb128 0x1e
 3100 085d 21050000 		.4byte	.LASF70
 3101 0861 01       		.byte	0x1
 3102 0862 A1       		.byte	0xa1
 3103 0863 F7000000 		.4byte	0xf7
 3104 0867 05       		.uleb128 0x5
 3105 0868 03       		.byte	0x3
 3106 0869 18000000 		.4byte	xErrorLine
 3107 086d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 73


 3108 086e 0B040000 		.4byte	.LASF71
 3109 0872 01       		.byte	0x1
 3110 0873 A4       		.byte	0xa4
 3111 0874 CB000000 		.4byte	0xcb
 3112 0878 05       		.uleb128 0x5
 3113 0879 03       		.byte	0x3
 3114 087a 1C000000 		.4byte	xWasSuspended
 3115 087e 1E       		.uleb128 0x1e
 3116 087f BB060000 		.4byte	.LASF72
 3117 0883 01       		.byte	0x1
 3118 0884 A8       		.byte	0xa8
 3119 0885 F7000000 		.4byte	0xf7
 3120 0889 05       		.uleb128 0x5
 3121 088a 03       		.byte	0x3
 3122 088b 20000000 		.4byte	uxValueForNormallyEmptyQueue
 3123 088f 1E       		.uleb128 0x1e
 3124 0890 77050000 		.4byte	.LASF73
 3125 0894 01       		.byte	0x1
 3126 0895 A8       		.byte	0xa8
 3127 0896 F7000000 		.4byte	0xf7
 3128 089a 05       		.uleb128 0x5
 3129 089b 03       		.byte	0x3
 3130 089c 24000000 		.4byte	uxValueForNormallyFullQueue
 3131 08a0 1F       		.uleb128 0x1f
 3132 08a1 9C000000 		.4byte	0x9c
 3133 08a5 B0080000 		.4byte	0x8b0
 3134 08a9 20       		.uleb128 0x20
 3135 08aa 8C000000 		.4byte	0x8c
 3136 08ae C7       		.byte	0xc7
 3137 08af 00       		.byte	0
 3138 08b0 1E       		.uleb128 0x1e
 3139 08b1 1B060000 		.4byte	.LASF74
 3140 08b5 01       		.byte	0x1
 3141 08b6 B1       		.byte	0xb1
 3142 08b7 A0080000 		.4byte	0x8a0
 3143 08bb 05       		.uleb128 0x5
 3144 08bc 03       		.byte	0x3
 3145 08bd 28000000 		.4byte	ucNormallyEmptyReceivedValues
 3146 08c1 1E       		.uleb128 0x1e
 3147 08c2 F4000000 		.4byte	.LASF75
 3148 08c6 01       		.byte	0x1
 3149 08c7 B2       		.byte	0xb2
 3150 08c8 A0080000 		.4byte	0x8a0
 3151 08cc 05       		.uleb128 0x5
 3152 08cd 03       		.byte	0x3
 3153 08ce F0000000 		.4byte	ucNormallyFullReceivedValues
 3154 08d2 21       		.uleb128 0x21
 3155 08d3 8B060000 		.4byte	.LASF76
 3156 08d7 07       		.byte	0x7
 3157 08d8 9606     		.2byte	0x696
 3158 08da DE080000 		.4byte	0x8de
 3159 08de 06       		.uleb128 0x6
 3160 08df A7000000 		.4byte	0xa7
 3161 08e3 22       		.uleb128 0x22
 3162 08e4 B4000000 		.4byte	.LASF77
 3163 08e8 01       		.byte	0x1
 3164 08e9 AB       		.byte	0xab
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 74


 3165 08ea FC000000 		.4byte	0xfc
 3166 08ee 05       		.uleb128 0x5
 3167 08ef 03       		.byte	0x3
 3168 08f0 00000000 		.4byte	xHighPriorityNormallyEmptyTask1
 3169 08f4 22       		.uleb128 0x22
 3170 08f5 D4000000 		.4byte	.LASF78
 3171 08f9 01       		.byte	0x1
 3172 08fa AB       		.byte	0xab
 3173 08fb FC000000 		.4byte	0xfc
 3174 08ff 05       		.uleb128 0x5
 3175 0900 03       		.byte	0x3
 3176 0901 00000000 		.4byte	xHighPriorityNormallyEmptyTask2
 3177 0905 22       		.uleb128 0x22
 3178 0906 09000000 		.4byte	.LASF79
 3179 090a 01       		.byte	0x1
 3180 090b AB       		.byte	0xab
 3181 090c FC000000 		.4byte	0xfc
 3182 0910 05       		.uleb128 0x5
 3183 0911 03       		.byte	0x3
 3184 0912 00000000 		.4byte	xHighPriorityNormallyFullTask1
 3185 0916 22       		.uleb128 0x22
 3186 0917 28000000 		.4byte	.LASF80
 3187 091b 01       		.byte	0x1
 3188 091c AB       		.byte	0xab
 3189 091d FC000000 		.4byte	0xfc
 3190 0921 05       		.uleb128 0x5
 3191 0922 03       		.byte	0x3
 3192 0923 00000000 		.4byte	xHighPriorityNormallyFullTask2
 3193 0927 00       		.byte	0
 3194              		.section	.debug_abbrev,"",%progbits
 3195              	.Ldebug_abbrev0:
 3196 0000 01       		.uleb128 0x1
 3197 0001 11       		.uleb128 0x11
 3198 0002 01       		.byte	0x1
 3199 0003 25       		.uleb128 0x25
 3200 0004 0E       		.uleb128 0xe
 3201 0005 13       		.uleb128 0x13
 3202 0006 0B       		.uleb128 0xb
 3203 0007 03       		.uleb128 0x3
 3204 0008 0E       		.uleb128 0xe
 3205 0009 1B       		.uleb128 0x1b
 3206 000a 0E       		.uleb128 0xe
 3207 000b 55       		.uleb128 0x55
 3208 000c 17       		.uleb128 0x17
 3209 000d 11       		.uleb128 0x11
 3210 000e 01       		.uleb128 0x1
 3211 000f 10       		.uleb128 0x10
 3212 0010 17       		.uleb128 0x17
 3213 0011 00       		.byte	0
 3214 0012 00       		.byte	0
 3215 0013 02       		.uleb128 0x2
 3216 0014 24       		.uleb128 0x24
 3217 0015 00       		.byte	0
 3218 0016 0B       		.uleb128 0xb
 3219 0017 0B       		.uleb128 0xb
 3220 0018 3E       		.uleb128 0x3e
 3221 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 75


 3222 001a 03       		.uleb128 0x3
 3223 001b 08       		.uleb128 0x8
 3224 001c 00       		.byte	0
 3225 001d 00       		.byte	0
 3226 001e 03       		.uleb128 0x3
 3227 001f 24       		.uleb128 0x24
 3228 0020 00       		.byte	0
 3229 0021 0B       		.uleb128 0xb
 3230 0022 0B       		.uleb128 0xb
 3231 0023 3E       		.uleb128 0x3e
 3232 0024 0B       		.uleb128 0xb
 3233 0025 03       		.uleb128 0x3
 3234 0026 0E       		.uleb128 0xe
 3235 0027 00       		.byte	0
 3236 0028 00       		.byte	0
 3237 0029 04       		.uleb128 0x4
 3238 002a 16       		.uleb128 0x16
 3239 002b 00       		.byte	0
 3240 002c 03       		.uleb128 0x3
 3241 002d 0E       		.uleb128 0xe
 3242 002e 3A       		.uleb128 0x3a
 3243 002f 0B       		.uleb128 0xb
 3244 0030 3B       		.uleb128 0x3b
 3245 0031 0B       		.uleb128 0xb
 3246 0032 49       		.uleb128 0x49
 3247 0033 13       		.uleb128 0x13
 3248 0034 00       		.byte	0
 3249 0035 00       		.byte	0
 3250 0036 05       		.uleb128 0x5
 3251 0037 0F       		.uleb128 0xf
 3252 0038 00       		.byte	0
 3253 0039 0B       		.uleb128 0xb
 3254 003a 0B       		.uleb128 0xb
 3255 003b 00       		.byte	0
 3256 003c 00       		.byte	0
 3257 003d 06       		.uleb128 0x6
 3258 003e 35       		.uleb128 0x35
 3259 003f 00       		.byte	0
 3260 0040 49       		.uleb128 0x49
 3261 0041 13       		.uleb128 0x13
 3262 0042 00       		.byte	0
 3263 0043 00       		.byte	0
 3264 0044 07       		.uleb128 0x7
 3265 0045 0F       		.uleb128 0xf
 3266 0046 00       		.byte	0
 3267 0047 0B       		.uleb128 0xb
 3268 0048 0B       		.uleb128 0xb
 3269 0049 49       		.uleb128 0x49
 3270 004a 13       		.uleb128 0x13
 3271 004b 00       		.byte	0
 3272 004c 00       		.byte	0
 3273 004d 08       		.uleb128 0x8
 3274 004e 13       		.uleb128 0x13
 3275 004f 00       		.byte	0
 3276 0050 03       		.uleb128 0x3
 3277 0051 0E       		.uleb128 0xe
 3278 0052 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 76


 3279 0053 19       		.uleb128 0x19
 3280 0054 00       		.byte	0
 3281 0055 00       		.byte	0
 3282 0056 09       		.uleb128 0x9
 3283 0057 04       		.uleb128 0x4
 3284 0058 01       		.byte	0x1
 3285 0059 0B       		.uleb128 0xb
 3286 005a 0B       		.uleb128 0xb
 3287 005b 3A       		.uleb128 0x3a
 3288 005c 0B       		.uleb128 0xb
 3289 005d 3B       		.uleb128 0x3b
 3290 005e 0B       		.uleb128 0xb
 3291 005f 01       		.uleb128 0x1
 3292 0060 13       		.uleb128 0x13
 3293 0061 00       		.byte	0
 3294 0062 00       		.byte	0
 3295 0063 0A       		.uleb128 0xa
 3296 0064 28       		.uleb128 0x28
 3297 0065 00       		.byte	0
 3298 0066 03       		.uleb128 0x3
 3299 0067 0E       		.uleb128 0xe
 3300 0068 1C       		.uleb128 0x1c
 3301 0069 0D       		.uleb128 0xd
 3302 006a 00       		.byte	0
 3303 006b 00       		.byte	0
 3304 006c 0B       		.uleb128 0xb
 3305 006d 2E       		.uleb128 0x2e
 3306 006e 01       		.byte	0x1
 3307 006f 03       		.uleb128 0x3
 3308 0070 0E       		.uleb128 0xe
 3309 0071 3A       		.uleb128 0x3a
 3310 0072 0B       		.uleb128 0xb
 3311 0073 3B       		.uleb128 0x3b
 3312 0074 0B       		.uleb128 0xb
 3313 0075 27       		.uleb128 0x27
 3314 0076 19       		.uleb128 0x19
 3315 0077 49       		.uleb128 0x49
 3316 0078 13       		.uleb128 0x13
 3317 0079 20       		.uleb128 0x20
 3318 007a 0B       		.uleb128 0xb
 3319 007b 01       		.uleb128 0x1
 3320 007c 13       		.uleb128 0x13
 3321 007d 00       		.byte	0
 3322 007e 00       		.byte	0
 3323 007f 0C       		.uleb128 0xc
 3324 0080 34       		.uleb128 0x34
 3325 0081 00       		.byte	0
 3326 0082 03       		.uleb128 0x3
 3327 0083 0E       		.uleb128 0xe
 3328 0084 3A       		.uleb128 0x3a
 3329 0085 0B       		.uleb128 0xb
 3330 0086 3B       		.uleb128 0x3b
 3331 0087 0B       		.uleb128 0xb
 3332 0088 49       		.uleb128 0x49
 3333 0089 13       		.uleb128 0x13
 3334 008a 00       		.byte	0
 3335 008b 00       		.byte	0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 77


 3336 008c 0D       		.uleb128 0xd
 3337 008d 2E       		.uleb128 0x2e
 3338 008e 01       		.byte	0x1
 3339 008f 03       		.uleb128 0x3
 3340 0090 0E       		.uleb128 0xe
 3341 0091 3A       		.uleb128 0x3a
 3342 0092 0B       		.uleb128 0xb
 3343 0093 3B       		.uleb128 0x3b
 3344 0094 0B       		.uleb128 0xb
 3345 0095 27       		.uleb128 0x27
 3346 0096 19       		.uleb128 0x19
 3347 0097 20       		.uleb128 0x20
 3348 0098 0B       		.uleb128 0xb
 3349 0099 01       		.uleb128 0x1
 3350 009a 13       		.uleb128 0x13
 3351 009b 00       		.byte	0
 3352 009c 00       		.byte	0
 3353 009d 0E       		.uleb128 0xe
 3354 009e 05       		.uleb128 0x5
 3355 009f 00       		.byte	0
 3356 00a0 03       		.uleb128 0x3
 3357 00a1 0E       		.uleb128 0xe
 3358 00a2 3A       		.uleb128 0x3a
 3359 00a3 0B       		.uleb128 0xb
 3360 00a4 3B       		.uleb128 0x3b
 3361 00a5 0B       		.uleb128 0xb
 3362 00a6 49       		.uleb128 0x49
 3363 00a7 13       		.uleb128 0x13
 3364 00a8 00       		.byte	0
 3365 00a9 00       		.byte	0
 3366 00aa 0F       		.uleb128 0xf
 3367 00ab 2E       		.uleb128 0x2e
 3368 00ac 00       		.byte	0
 3369 00ad 3F       		.uleb128 0x3f
 3370 00ae 19       		.uleb128 0x19
 3371 00af 03       		.uleb128 0x3
 3372 00b0 0E       		.uleb128 0xe
 3373 00b1 3A       		.uleb128 0x3a
 3374 00b2 0B       		.uleb128 0xb
 3375 00b3 3B       		.uleb128 0x3b
 3376 00b4 0B       		.uleb128 0xb
 3377 00b5 27       		.uleb128 0x27
 3378 00b6 19       		.uleb128 0x19
 3379 00b7 11       		.uleb128 0x11
 3380 00b8 01       		.uleb128 0x1
 3381 00b9 12       		.uleb128 0x12
 3382 00ba 06       		.uleb128 0x6
 3383 00bb 40       		.uleb128 0x40
 3384 00bc 18       		.uleb128 0x18
 3385 00bd 9642     		.uleb128 0x2116
 3386 00bf 19       		.uleb128 0x19
 3387 00c0 00       		.byte	0
 3388 00c1 00       		.byte	0
 3389 00c2 10       		.uleb128 0x10
 3390 00c3 2E       		.uleb128 0x2e
 3391 00c4 01       		.byte	0x1
 3392 00c5 03       		.uleb128 0x3
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 78


 3393 00c6 0E       		.uleb128 0xe
 3394 00c7 3A       		.uleb128 0x3a
 3395 00c8 0B       		.uleb128 0xb
 3396 00c9 3B       		.uleb128 0x3b
 3397 00ca 0B       		.uleb128 0xb
 3398 00cb 27       		.uleb128 0x27
 3399 00cc 19       		.uleb128 0x19
 3400 00cd 11       		.uleb128 0x11
 3401 00ce 01       		.uleb128 0x1
 3402 00cf 12       		.uleb128 0x12
 3403 00d0 06       		.uleb128 0x6
 3404 00d1 40       		.uleb128 0x40
 3405 00d2 18       		.uleb128 0x18
 3406 00d3 9642     		.uleb128 0x2116
 3407 00d5 19       		.uleb128 0x19
 3408 00d6 01       		.uleb128 0x1
 3409 00d7 13       		.uleb128 0x13
 3410 00d8 00       		.byte	0
 3411 00d9 00       		.byte	0
 3412 00da 11       		.uleb128 0x11
 3413 00db 05       		.uleb128 0x5
 3414 00dc 00       		.byte	0
 3415 00dd 03       		.uleb128 0x3
 3416 00de 0E       		.uleb128 0xe
 3417 00df 3A       		.uleb128 0x3a
 3418 00e0 0B       		.uleb128 0xb
 3419 00e1 3B       		.uleb128 0x3b
 3420 00e2 0B       		.uleb128 0xb
 3421 00e3 49       		.uleb128 0x49
 3422 00e4 13       		.uleb128 0x13
 3423 00e5 02       		.uleb128 0x2
 3424 00e6 18       		.uleb128 0x18
 3425 00e7 00       		.byte	0
 3426 00e8 00       		.byte	0
 3427 00e9 12       		.uleb128 0x12
 3428 00ea 2E       		.uleb128 0x2e
 3429 00eb 01       		.byte	0x1
 3430 00ec 03       		.uleb128 0x3
 3431 00ed 0E       		.uleb128 0xe
 3432 00ee 3A       		.uleb128 0x3a
 3433 00ef 0B       		.uleb128 0xb
 3434 00f0 3B       		.uleb128 0x3b
 3435 00f1 05       		.uleb128 0x5
 3436 00f2 27       		.uleb128 0x27
 3437 00f3 19       		.uleb128 0x19
 3438 00f4 11       		.uleb128 0x11
 3439 00f5 01       		.uleb128 0x1
 3440 00f6 12       		.uleb128 0x12
 3441 00f7 06       		.uleb128 0x6
 3442 00f8 40       		.uleb128 0x40
 3443 00f9 18       		.uleb128 0x18
 3444 00fa 9742     		.uleb128 0x2117
 3445 00fc 19       		.uleb128 0x19
 3446 00fd 01       		.uleb128 0x1
 3447 00fe 13       		.uleb128 0x13
 3448 00ff 00       		.byte	0
 3449 0100 00       		.byte	0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 79


 3450 0101 13       		.uleb128 0x13
 3451 0102 05       		.uleb128 0x5
 3452 0103 00       		.byte	0
 3453 0104 03       		.uleb128 0x3
 3454 0105 0E       		.uleb128 0xe
 3455 0106 3A       		.uleb128 0x3a
 3456 0107 0B       		.uleb128 0xb
 3457 0108 3B       		.uleb128 0x3b
 3458 0109 05       		.uleb128 0x5
 3459 010a 49       		.uleb128 0x49
 3460 010b 13       		.uleb128 0x13
 3461 010c 02       		.uleb128 0x2
 3462 010d 18       		.uleb128 0x18
 3463 010e 00       		.byte	0
 3464 010f 00       		.byte	0
 3465 0110 14       		.uleb128 0x14
 3466 0111 2E       		.uleb128 0x2e
 3467 0112 01       		.byte	0x1
 3468 0113 03       		.uleb128 0x3
 3469 0114 0E       		.uleb128 0xe
 3470 0115 3A       		.uleb128 0x3a
 3471 0116 0B       		.uleb128 0xb
 3472 0117 3B       		.uleb128 0x3b
 3473 0118 05       		.uleb128 0x5
 3474 0119 27       		.uleb128 0x27
 3475 011a 19       		.uleb128 0x19
 3476 011b 11       		.uleb128 0x11
 3477 011c 01       		.uleb128 0x1
 3478 011d 12       		.uleb128 0x12
 3479 011e 06       		.uleb128 0x6
 3480 011f 40       		.uleb128 0x40
 3481 0120 18       		.uleb128 0x18
 3482 0121 9642     		.uleb128 0x2116
 3483 0123 19       		.uleb128 0x19
 3484 0124 01       		.uleb128 0x1
 3485 0125 13       		.uleb128 0x13
 3486 0126 00       		.byte	0
 3487 0127 00       		.byte	0
 3488 0128 15       		.uleb128 0x15
 3489 0129 34       		.uleb128 0x34
 3490 012a 00       		.byte	0
 3491 012b 03       		.uleb128 0x3
 3492 012c 0E       		.uleb128 0xe
 3493 012d 3A       		.uleb128 0x3a
 3494 012e 0B       		.uleb128 0xb
 3495 012f 3B       		.uleb128 0x3b
 3496 0130 05       		.uleb128 0x5
 3497 0131 49       		.uleb128 0x49
 3498 0132 13       		.uleb128 0x13
 3499 0133 02       		.uleb128 0x2
 3500 0134 18       		.uleb128 0x18
 3501 0135 00       		.byte	0
 3502 0136 00       		.byte	0
 3503 0137 16       		.uleb128 0x16
 3504 0138 34       		.uleb128 0x34
 3505 0139 00       		.byte	0
 3506 013a 03       		.uleb128 0x3
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 80


 3507 013b 08       		.uleb128 0x8
 3508 013c 3A       		.uleb128 0x3a
 3509 013d 0B       		.uleb128 0xb
 3510 013e 3B       		.uleb128 0x3b
 3511 013f 05       		.uleb128 0x5
 3512 0140 49       		.uleb128 0x49
 3513 0141 13       		.uleb128 0x13
 3514 0142 02       		.uleb128 0x2
 3515 0143 18       		.uleb128 0x18
 3516 0144 00       		.byte	0
 3517 0145 00       		.byte	0
 3518 0146 17       		.uleb128 0x17
 3519 0147 2E       		.uleb128 0x2e
 3520 0148 01       		.byte	0x1
 3521 0149 3F       		.uleb128 0x3f
 3522 014a 19       		.uleb128 0x19
 3523 014b 03       		.uleb128 0x3
 3524 014c 0E       		.uleb128 0xe
 3525 014d 3A       		.uleb128 0x3a
 3526 014e 0B       		.uleb128 0xb
 3527 014f 3B       		.uleb128 0x3b
 3528 0150 05       		.uleb128 0x5
 3529 0151 27       		.uleb128 0x27
 3530 0152 19       		.uleb128 0x19
 3531 0153 49       		.uleb128 0x49
 3532 0154 13       		.uleb128 0x13
 3533 0155 11       		.uleb128 0x11
 3534 0156 01       		.uleb128 0x1
 3535 0157 12       		.uleb128 0x12
 3536 0158 06       		.uleb128 0x6
 3537 0159 40       		.uleb128 0x40
 3538 015a 18       		.uleb128 0x18
 3539 015b 9642     		.uleb128 0x2116
 3540 015d 19       		.uleb128 0x19
 3541 015e 01       		.uleb128 0x1
 3542 015f 13       		.uleb128 0x13
 3543 0160 00       		.byte	0
 3544 0161 00       		.byte	0
 3545 0162 18       		.uleb128 0x18
 3546 0163 0B       		.uleb128 0xb
 3547 0164 01       		.byte	0x1
 3548 0165 11       		.uleb128 0x11
 3549 0166 01       		.uleb128 0x1
 3550 0167 12       		.uleb128 0x12
 3551 0168 06       		.uleb128 0x6
 3552 0169 01       		.uleb128 0x1
 3553 016a 13       		.uleb128 0x13
 3554 016b 00       		.byte	0
 3555 016c 00       		.byte	0
 3556 016d 19       		.uleb128 0x19
 3557 016e 1D       		.uleb128 0x1d
 3558 016f 01       		.byte	0x1
 3559 0170 31       		.uleb128 0x31
 3560 0171 13       		.uleb128 0x13
 3561 0172 11       		.uleb128 0x11
 3562 0173 01       		.uleb128 0x1
 3563 0174 12       		.uleb128 0x12
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 81


 3564 0175 06       		.uleb128 0x6
 3565 0176 58       		.uleb128 0x58
 3566 0177 0B       		.uleb128 0xb
 3567 0178 59       		.uleb128 0x59
 3568 0179 05       		.uleb128 0x5
 3569 017a 01       		.uleb128 0x1
 3570 017b 13       		.uleb128 0x13
 3571 017c 00       		.byte	0
 3572 017d 00       		.byte	0
 3573 017e 1A       		.uleb128 0x1a
 3574 017f 0B       		.uleb128 0xb
 3575 0180 01       		.byte	0x1
 3576 0181 11       		.uleb128 0x11
 3577 0182 01       		.uleb128 0x1
 3578 0183 12       		.uleb128 0x12
 3579 0184 06       		.uleb128 0x6
 3580 0185 00       		.byte	0
 3581 0186 00       		.byte	0
 3582 0187 1B       		.uleb128 0x1b
 3583 0188 34       		.uleb128 0x34
 3584 0189 00       		.byte	0
 3585 018a 31       		.uleb128 0x31
 3586 018b 13       		.uleb128 0x13
 3587 018c 02       		.uleb128 0x2
 3588 018d 18       		.uleb128 0x18
 3589 018e 00       		.byte	0
 3590 018f 00       		.byte	0
 3591 0190 1C       		.uleb128 0x1c
 3592 0191 1D       		.uleb128 0x1d
 3593 0192 01       		.byte	0x1
 3594 0193 31       		.uleb128 0x31
 3595 0194 13       		.uleb128 0x13
 3596 0195 11       		.uleb128 0x11
 3597 0196 01       		.uleb128 0x1
 3598 0197 12       		.uleb128 0x12
 3599 0198 06       		.uleb128 0x6
 3600 0199 58       		.uleb128 0x58
 3601 019a 0B       		.uleb128 0xb
 3602 019b 59       		.uleb128 0x59
 3603 019c 05       		.uleb128 0x5
 3604 019d 00       		.byte	0
 3605 019e 00       		.byte	0
 3606 019f 1D       		.uleb128 0x1d
 3607 01a0 05       		.uleb128 0x5
 3608 01a1 00       		.byte	0
 3609 01a2 31       		.uleb128 0x31
 3610 01a3 13       		.uleb128 0x13
 3611 01a4 02       		.uleb128 0x2
 3612 01a5 18       		.uleb128 0x18
 3613 01a6 00       		.byte	0
 3614 01a7 00       		.byte	0
 3615 01a8 1E       		.uleb128 0x1e
 3616 01a9 34       		.uleb128 0x34
 3617 01aa 00       		.byte	0
 3618 01ab 03       		.uleb128 0x3
 3619 01ac 0E       		.uleb128 0xe
 3620 01ad 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 82


 3621 01ae 0B       		.uleb128 0xb
 3622 01af 3B       		.uleb128 0x3b
 3623 01b0 0B       		.uleb128 0xb
 3624 01b1 49       		.uleb128 0x49
 3625 01b2 13       		.uleb128 0x13
 3626 01b3 02       		.uleb128 0x2
 3627 01b4 18       		.uleb128 0x18
 3628 01b5 00       		.byte	0
 3629 01b6 00       		.byte	0
 3630 01b7 1F       		.uleb128 0x1f
 3631 01b8 01       		.uleb128 0x1
 3632 01b9 01       		.byte	0x1
 3633 01ba 49       		.uleb128 0x49
 3634 01bb 13       		.uleb128 0x13
 3635 01bc 01       		.uleb128 0x1
 3636 01bd 13       		.uleb128 0x13
 3637 01be 00       		.byte	0
 3638 01bf 00       		.byte	0
 3639 01c0 20       		.uleb128 0x20
 3640 01c1 21       		.uleb128 0x21
 3641 01c2 00       		.byte	0
 3642 01c3 49       		.uleb128 0x49
 3643 01c4 13       		.uleb128 0x13
 3644 01c5 2F       		.uleb128 0x2f
 3645 01c6 0B       		.uleb128 0xb
 3646 01c7 00       		.byte	0
 3647 01c8 00       		.byte	0
 3648 01c9 21       		.uleb128 0x21
 3649 01ca 34       		.uleb128 0x34
 3650 01cb 00       		.byte	0
 3651 01cc 03       		.uleb128 0x3
 3652 01cd 0E       		.uleb128 0xe
 3653 01ce 3A       		.uleb128 0x3a
 3654 01cf 0B       		.uleb128 0xb
 3655 01d0 3B       		.uleb128 0x3b
 3656 01d1 05       		.uleb128 0x5
 3657 01d2 49       		.uleb128 0x49
 3658 01d3 13       		.uleb128 0x13
 3659 01d4 3F       		.uleb128 0x3f
 3660 01d5 19       		.uleb128 0x19
 3661 01d6 3C       		.uleb128 0x3c
 3662 01d7 19       		.uleb128 0x19
 3663 01d8 00       		.byte	0
 3664 01d9 00       		.byte	0
 3665 01da 22       		.uleb128 0x22
 3666 01db 34       		.uleb128 0x34
 3667 01dc 00       		.byte	0
 3668 01dd 03       		.uleb128 0x3
 3669 01de 0E       		.uleb128 0xe
 3670 01df 3A       		.uleb128 0x3a
 3671 01e0 0B       		.uleb128 0xb
 3672 01e1 3B       		.uleb128 0x3b
 3673 01e2 0B       		.uleb128 0xb
 3674 01e3 49       		.uleb128 0x49
 3675 01e4 13       		.uleb128 0x13
 3676 01e5 3F       		.uleb128 0x3f
 3677 01e6 19       		.uleb128 0x19
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 83


 3678 01e7 02       		.uleb128 0x2
 3679 01e8 18       		.uleb128 0x18
 3680 01e9 00       		.byte	0
 3681 01ea 00       		.byte	0
 3682 01eb 00       		.byte	0
 3683              		.section	.debug_aranges,"",%progbits
 3684 0000 74000000 		.4byte	0x74
 3685 0004 0200     		.2byte	0x2
 3686 0006 00000000 		.4byte	.Ldebug_info0
 3687 000a 04       		.byte	0x4
 3688 000b 00       		.byte	0
 3689 000c 0000     		.2byte	0
 3690 000e 0000     		.2byte	0
 3691 0010 00000000 		.4byte	.LFB68
 3692 0014 08010000 		.4byte	.LFE68-.LFB68
 3693 0018 00000000 		.4byte	.LFB69
 3694 001c 3C000000 		.4byte	.LFE69-.LFB69
 3695 0020 00000000 		.4byte	.LFB70
 3696 0024 3C000000 		.4byte	.LFE70-.LFB70
 3697 0028 00000000 		.4byte	.LFB71
 3698 002c 28000000 		.4byte	.LFE71-.LFB71
 3699 0030 00000000 		.4byte	.LFB72
 3700 0034 70010000 		.4byte	.LFE72-.LFB72
 3701 0038 00000000 		.4byte	.LFB73
 3702 003c B8000000 		.4byte	.LFE73-.LFB73
 3703 0040 00000000 		.4byte	.LFB74
 3704 0044 50010000 		.4byte	.LFE74-.LFB74
 3705 0048 00000000 		.4byte	.LFB75
 3706 004c B0000000 		.4byte	.LFE75-.LFB75
 3707 0050 00000000 		.4byte	.LFB76
 3708 0054 A4000000 		.4byte	.LFE76-.LFB76
 3709 0058 00000000 		.4byte	.LFB77
 3710 005c CC010000 		.4byte	.LFE77-.LFB77
 3711 0060 00000000 		.4byte	.LFB78
 3712 0064 A8020000 		.4byte	.LFE78-.LFB78
 3713 0068 00000000 		.4byte	.LFB79
 3714 006c A0000000 		.4byte	.LFE79-.LFB79
 3715 0070 00000000 		.4byte	0
 3716 0074 00000000 		.4byte	0
 3717              		.section	.debug_ranges,"",%progbits
 3718              	.Ldebug_ranges0:
 3719 0000 00000000 		.4byte	.LFB68
 3720 0004 08010000 		.4byte	.LFE68
 3721 0008 00000000 		.4byte	.LFB69
 3722 000c 3C000000 		.4byte	.LFE69
 3723 0010 00000000 		.4byte	.LFB70
 3724 0014 3C000000 		.4byte	.LFE70
 3725 0018 00000000 		.4byte	.LFB71
 3726 001c 28000000 		.4byte	.LFE71
 3727 0020 00000000 		.4byte	.LFB72
 3728 0024 70010000 		.4byte	.LFE72
 3729 0028 00000000 		.4byte	.LFB73
 3730 002c B8000000 		.4byte	.LFE73
 3731 0030 00000000 		.4byte	.LFB74
 3732 0034 50010000 		.4byte	.LFE74
 3733 0038 00000000 		.4byte	.LFB75
 3734 003c B0000000 		.4byte	.LFE75
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 84


 3735 0040 00000000 		.4byte	.LFB76
 3736 0044 A4000000 		.4byte	.LFE76
 3737 0048 00000000 		.4byte	.LFB77
 3738 004c CC010000 		.4byte	.LFE77
 3739 0050 00000000 		.4byte	.LFB78
 3740 0054 A8020000 		.4byte	.LFE78
 3741 0058 00000000 		.4byte	.LFB79
 3742 005c A0000000 		.4byte	.LFE79
 3743 0060 00000000 		.4byte	0
 3744 0064 00000000 		.4byte	0
 3745              		.section	.debug_line,"",%progbits
 3746              	.Ldebug_line0:
 3747 0000 58050000 		.section	.debug_str,"MS",%progbits,1
 3747      0200B401 
 3747      00000201 
 3747      FB0E0D00 
 3747      01010101 
 3748              	.LASF26:
 3749 0000 65426C6F 		.ascii	"eBlocked\000"
 3749      636B6564 
 3749      00
 3750              	.LASF79:
 3751 0009 78486967 		.ascii	"xHighPriorityNormallyFullTask1\000"
 3751      68507269 
 3751      6F726974 
 3751      794E6F72 
 3751      6D616C6C 
 3752              	.LASF80:
 3753 0028 78486967 		.ascii	"xHighPriorityNormallyFullTask2\000"
 3753      68507269 
 3753      6F726974 
 3753      794E6F72 
 3753      6D616C6C 
 3754              	.LASF47:
 3755 0047 70727631 		.ascii	"prv1stHigherPriorityNormallyFullTask\000"
 3755      73744869 
 3755      67686572 
 3755      5072696F 
 3755      72697479 
 3756              	.LASF28:
 3757 006c 6544656C 		.ascii	"eDeleted\000"
 3757      65746564 
 3757      00
 3758              	.LASF12:
 3759 0075 73697A65 		.ascii	"sizetype\000"
 3759      74797065 
 3759      00
 3760              	.LASF69:
 3761 007e 78457272 		.ascii	"xErrorStatus\000"
 3761      6F725374 
 3761      61747573 
 3761      00
 3762              	.LASF23:
 3763 008b 5461736B 		.ascii	"TaskHandle_t\000"
 3763      48616E64 
 3763      6C655F74 
 3763      00
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 85


 3764              	.LASF34:
 3765 0098 70727652 		.ascii	"prvRecordValue_NormallyFull\000"
 3765      65636F72 
 3765      6456616C 
 3765      75655F4E 
 3765      6F726D61 
 3766              	.LASF77:
 3767 00b4 78486967 		.ascii	"xHighPriorityNormallyEmptyTask1\000"
 3767      68507269 
 3767      6F726974 
 3767      794E6F72 
 3767      6D616C6C 
 3768              	.LASF78:
 3769 00d4 78486967 		.ascii	"xHighPriorityNormallyEmptyTask2\000"
 3769      68507269 
 3769      6F726974 
 3769      794E6F72 
 3769      6D616C6C 
 3770              	.LASF75:
 3771 00f4 75634E6F 		.ascii	"ucNormallyFullReceivedValues\000"
 3771      726D616C 
 3771      6C794675 
 3771      6C6C5265 
 3771      63656976 
 3772              	.LASF62:
 3773 0111 75784C61 		.ascii	"uxLastLowPriorityLoops2\000"
 3773      73744C6F 
 3773      77507269 
 3773      6F726974 
 3773      794C6F6F 
 3774              	.LASF18:
 3775 0129 646F7562 		.ascii	"double\000"
 3775      6C6500
 3776              	.LASF29:
 3777 0130 65496E76 		.ascii	"eInvalid\000"
 3777      616C6964 
 3777      00
 3778              	.LASF63:
 3779 0139 784E6F72 		.ascii	"xNormallyEmptyQueue\000"
 3779      6D616C6C 
 3779      79456D70 
 3779      74795175 
 3779      65756500 
 3780              	.LASF56:
 3781 014d 78466972 		.ascii	"xFirstTimerHandler\000"
 3781      73745469 
 3781      6D657248 
 3781      616E646C 
 3781      657200
 3782              	.LASF41:
 3783 0160 75785461 		.ascii	"uxTask1\000"
 3783      736B3100 
 3784              	.LASF42:
 3785 0168 75785461 		.ascii	"uxTask2\000"
 3785      736B3200 
 3786              	.LASF83:
 3787 0170 453A5C47 		.ascii	"E:\\GitHub\\FreeRTOS\\freertos-code-2543-trunk\\fre"
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 86


 3787      69744875 
 3787      625C4672 
 3787      65655254 
 3787      4F535C66 
 3788 019f 6572746F 		.ascii	"ertos-code-2543-trunk\\FreeRTOS\\Demo\\CORTEX_CY8C5"
 3788      732D636F 
 3788      64652D32 
 3788      3534332D 
 3788      7472756E 
 3789 01cf 3538385F 		.ascii	"588_PSoC_Creator_GCC\\FreeRTOS_Demo.cydsn\000"
 3789      50536F43 
 3789      5F437265 
 3789      61746F72 
 3789      5F474343 
 3790              	.LASF14:
 3791 01f8 75696E74 		.ascii	"uint8_t\000"
 3791      385F7400 
 3792              	.LASF49:
 3793 0200 70727632 		.ascii	"prv2ndHigherPriorityNormallyFullTask\000"
 3793      6E644869 
 3793      67686572 
 3793      5072696F 
 3793      72697479 
 3794              	.LASF64:
 3795 0225 784E6F72 		.ascii	"xNormallyFullQueue\000"
 3795      6D616C6C 
 3795      7946756C 
 3795      6C517565 
 3795      756500
 3796              	.LASF54:
 3797 0238 75784E65 		.ascii	"uxNextOperation\000"
 3797      78744F70 
 3797      65726174 
 3797      696F6E00 
 3798              	.LASF85:
 3799 0248 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 3799      72745261 
 3799      69736542 
 3799      41534550 
 3799      524900
 3800              	.LASF3:
 3801 025b 73686F72 		.ascii	"short int\000"
 3801      7420696E 
 3801      7400
 3802              	.LASF33:
 3803 0265 7578536F 		.ascii	"uxSource\000"
 3803      75726365 
 3803      00
 3804              	.LASF17:
 3805 026e 666C6F61 		.ascii	"float\000"
 3805      7400
 3806              	.LASF50:
 3807 0274 7072764C 		.ascii	"prvLowerPriorityNormallyFullTask\000"
 3807      6F776572 
 3807      5072696F 
 3807      72697479 
 3807      4E6F726D 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 87


 3808              	.LASF10:
 3809 0295 6C6F6E67 		.ascii	"long long int\000"
 3809      206C6F6E 
 3809      6720696E 
 3809      7400
 3810              	.LASF58:
 3811 02a3 78417265 		.ascii	"xAreIntQueueTasksStillRunning\000"
 3811      496E7451 
 3811      75657565 
 3811      5461736B 
 3811      73537469 
 3812              	.LASF82:
 3813 02c1 2E2E5C2E 		.ascii	"..\\..\\Common\\Minimal\\IntQueue.c\000"
 3813      2E5C436F 
 3813      6D6D6F6E 
 3813      5C4D696E 
 3813      696D616C 
 3814              	.LASF51:
 3815 02e1 75785478 		.ascii	"uxTxed\000"
 3815      656400
 3816              	.LASF81:
 3817 02e8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3817      4320342E 
 3817      392E3320 
 3817      32303135 
 3817      30333033 
 3818 031b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3818      20726576 
 3818      6973696F 
 3818      6E203232 
 3818      31323230 
 3819 034e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3819      66756E63 
 3819      74696F6E 
 3819      2D736563 
 3819      74696F6E 
 3820              	.LASF59:
 3821 0376 75784C61 		.ascii	"uxLastHighPriorityLoops1\000"
 3821      73744869 
 3821      67685072 
 3821      696F7269 
 3821      74794C6F 
 3822              	.LASF60:
 3823 038f 75784C61 		.ascii	"uxLastHighPriorityLoops2\000"
 3823      73744869 
 3823      67685072 
 3823      696F7269 
 3823      74794C6F 
 3824              	.LASF57:
 3825 03a8 78536563 		.ascii	"xSecondTimerHandler\000"
 3825      6F6E6454 
 3825      696D6572 
 3825      48616E64 
 3825      6C657200 
 3826              	.LASF84:
 3827 03bc 5461736B 		.ascii	"TaskControlBlock_t\000"
 3827      436F6E74 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 88


 3827      726F6C42 
 3827      6C6F636B 
 3827      5F7400
 3828              	.LASF66:
 3829 03cf 75784869 		.ascii	"uxHighPriorityLoops2\000"
 3829      67685072 
 3829      696F7269 
 3829      74794C6F 
 3829      6F707332 
 3830              	.LASF65:
 3831 03e4 75784869 		.ascii	"uxHighPriorityLoops1\000"
 3831      67685072 
 3831      696F7269 
 3831      74794C6F 
 3831      6F707331 
 3832              	.LASF37:
 3833 03f9 75784C69 		.ascii	"uxLine\000"
 3833      6E6500
 3834              	.LASF21:
 3835 0400 5469636B 		.ascii	"TickType_t\000"
 3835      54797065 
 3835      5F7400
 3836              	.LASF71:
 3837 040b 78576173 		.ascii	"xWasSuspended\000"
 3837      53757370 
 3837      656E6465 
 3837      6400
 3838              	.LASF2:
 3839 0419 756E7369 		.ascii	"unsigned char\000"
 3839      676E6564 
 3839      20636861 
 3839      7200
 3840              	.LASF30:
 3841 0427 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 3841      6967696E 
 3841      616C4241 
 3841      53455052 
 3841      4900
 3842              	.LASF48:
 3843 0439 75785661 		.ascii	"uxValueToTx\000"
 3843      6C756554 
 3843      6F547800 
 3844              	.LASF25:
 3845 0445 65526561 		.ascii	"eReady\000"
 3845      647900
 3846              	.LASF1:
 3847 044c 7369676E 		.ascii	"signed char\000"
 3847      65642063 
 3847      68617200 
 3848              	.LASF11:
 3849 0458 6C6F6E67 		.ascii	"long long unsigned int\000"
 3849      206C6F6E 
 3849      6720756E 
 3849      7369676E 
 3849      65642069 
 3850              	.LASF52:
 3851 046f 78486967 		.ascii	"xHigherPriorityTaskWoken\000"
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 89


 3851      68657250 
 3851      72696F72 
 3851      69747954 
 3851      61736B57 
 3852              	.LASF16:
 3853 0488 75696E74 		.ascii	"uint32_t\000"
 3853      33325F74 
 3853      00
 3854              	.LASF0:
 3855 0491 756E7369 		.ascii	"unsigned int\000"
 3855      676E6564 
 3855      20696E74 
 3855      00
 3856              	.LASF19:
 3857 049e 42617365 		.ascii	"BaseType_t\000"
 3857      54797065 
 3857      5F7400
 3858              	.LASF39:
 3859 04a9 70765061 		.ascii	"pvParameters\000"
 3859      72616D65 
 3859      74657273 
 3859      00
 3860              	.LASF32:
 3861 04b6 75785661 		.ascii	"uxValue\000"
 3861      6C756500 
 3862              	.LASF43:
 3863 04be 7578496E 		.ascii	"uxInterrupts\000"
 3863      74657272 
 3863      75707473 
 3863      00
 3864              	.LASF86:
 3865 04cb 76506F72 		.ascii	"vPortSetBASEPRI\000"
 3865      74536574 
 3865      42415345 
 3865      50524900 
 3866              	.LASF13:
 3867 04db 63686172 		.ascii	"char\000"
 3867      00
 3868              	.LASF7:
 3869 04e0 6C6F6E67 		.ascii	"long int\000"
 3869      20696E74 
 3869      00
 3870              	.LASF15:
 3871 04e9 696E7433 		.ascii	"int32_t\000"
 3871      325F7400 
 3872              	.LASF4:
 3873 04f1 73686F72 		.ascii	"short unsigned int\000"
 3873      7420756E 
 3873      7369676E 
 3873      65642069 
 3873      6E7400
 3874              	.LASF35:
 3875 0504 70727652 		.ascii	"prvRecordValue_NormallyEmpty\000"
 3875      65636F72 
 3875      6456616C 
 3875      75655F4E 
 3875      6F726D61 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 90


 3876              	.LASF70:
 3877 0521 78457272 		.ascii	"xErrorLine\000"
 3877      6F724C69 
 3877      6E6500
 3878              	.LASF46:
 3879 052c 7072764C 		.ascii	"prvLowerPriorityNormallyEmptyTask\000"
 3879      6F776572 
 3879      5072696F 
 3879      72697479 
 3879      4E6F726D 
 3880              	.LASF36:
 3881 054e 70727651 		.ascii	"prvQueueAccessLogError\000"
 3881      75657565 
 3881      41636365 
 3881      73734C6F 
 3881      67457272 
 3882              	.LASF9:
 3883 0565 6C6F6E67 		.ascii	"long unsigned int\000"
 3883      20756E73 
 3883      69676E65 
 3883      6420696E 
 3883      7400
 3884              	.LASF73:
 3885 0577 75785661 		.ascii	"uxValueForNormallyFullQueue\000"
 3885      6C756546 
 3885      6F724E6F 
 3885      726D616C 
 3885      6C794675 
 3886              	.LASF20:
 3887 0593 55426173 		.ascii	"UBaseType_t\000"
 3887      65547970 
 3887      655F7400 
 3888              	.LASF24:
 3889 059f 6552756E 		.ascii	"eRunning\000"
 3889      6E696E67 
 3889      00
 3890              	.LASF53:
 3891 05a8 75785278 		.ascii	"uxRxedValue\000"
 3891      65645661 
 3891      6C756500 
 3892              	.LASF87:
 3893 05b4 756C4E65 		.ascii	"ulNewMaskValue\000"
 3893      774D6173 
 3893      6B56616C 
 3893      756500
 3894              	.LASF8:
 3895 05c3 5F5F7569 		.ascii	"__uint32_t\000"
 3895      6E743332 
 3895      5F7400
 3896              	.LASF88:
 3897 05ce 76537461 		.ascii	"vStartInterruptQueueTasks\000"
 3897      7274496E 
 3897      74657272 
 3897      75707451 
 3897      75657565 
 3898              	.LASF6:
 3899 05e8 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 91


 3899      7433325F 
 3899      7400
 3900              	.LASF27:
 3901 05f2 65537573 		.ascii	"eSuspended\000"
 3901      70656E64 
 3901      656400
 3902              	.LASF40:
 3903 05fd 75785278 		.ascii	"uxRxed\000"
 3903      656400
 3904              	.LASF55:
 3905 0604 75785361 		.ascii	"uxSavedInterruptStatus\000"
 3905      76656449 
 3905      6E746572 
 3905      72757074 
 3905      53746174 
 3906              	.LASF74:
 3907 061b 75634E6F 		.ascii	"ucNormallyEmptyReceivedValues\000"
 3907      726D616C 
 3907      6C79456D 
 3907      70747952 
 3907      65636569 
 3908              	.LASF44:
 3909 0639 75784572 		.ascii	"uxErrorCount1\000"
 3909      726F7243 
 3909      6F756E74 
 3909      3100
 3910              	.LASF45:
 3911 0647 75784572 		.ascii	"uxErrorCount2\000"
 3911      726F7243 
 3911      6F756E74 
 3911      3200
 3912              	.LASF22:
 3913 0655 51756575 		.ascii	"QueueHandle_t\000"
 3913      6548616E 
 3913      646C655F 
 3913      7400
 3914              	.LASF67:
 3915 0663 75784C6F 		.ascii	"uxLowPriorityLoops1\000"
 3915      77507269 
 3915      6F726974 
 3915      794C6F6F 
 3915      70733100 
 3916              	.LASF68:
 3917 0677 75784C6F 		.ascii	"uxLowPriorityLoops2\000"
 3917      77507269 
 3917      6F726974 
 3917      794C6F6F 
 3917      70733200 
 3918              	.LASF76:
 3919 068b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3919      52784275 
 3919      66666572 
 3919      00
 3920              	.LASF38:
 3921 0698 70727648 		.ascii	"prvHigherPriorityNormallyEmptyTask\000"
 3921      69676865 
 3921      72507269 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccuQho73.s 			page 92


 3921      6F726974 
 3921      794E6F72 
 3922              	.LASF72:
 3923 06bb 75785661 		.ascii	"uxValueForNormallyEmptyQueue\000"
 3923      6C756546 
 3923      6F724E6F 
 3923      726D616C 
 3923      6C79456D 
 3924              	.LASF61:
 3925 06d8 75784C61 		.ascii	"uxLastLowPriorityLoops1\000"
 3925      73744C6F 
 3925      77507269 
 3925      6F726974 
 3925      794C6F6F 
 3926              	.LASF5:
 3927 06f0 5F5F7569 		.ascii	"__uint8_t\000"
 3927      6E74385F 
 3927      7400
 3928              	.LASF31:
 3929 06fa 756C4E65 		.ascii	"ulNewBASEPRI\000"
 3929      77424153 
 3929      45505249 
 3929      00
 3930              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
