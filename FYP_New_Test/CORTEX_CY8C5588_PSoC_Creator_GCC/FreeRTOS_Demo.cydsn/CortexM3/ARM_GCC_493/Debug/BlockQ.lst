ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"BlockQ.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	sBlockingConsumerCount:
  21 0000 00000000 		.space	6
  21      0000
  22 0006 0000     		.align	2
  23              	sBlockingProducerCount:
  24 0008 00000000 		.space	6
  24      0000
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 51436F6E 		.ascii	"QConsB1\000"
  28      73423100 
  29              		.align	2
  30              	.LC1:
  31 0008 5150726F 		.ascii	"QProdB2\000"
  31      64423200 
  32              		.align	2
  33              	.LC2:
  34 0010 51436F6E 		.ascii	"QConsB3\000"
  34      73423300 
  35              		.align	2
  36              	.LC3:
  37 0018 5150726F 		.ascii	"QProdB4\000"
  37      64423400 
  38              		.align	2
  39              	.LC4:
  40 0020 5150726F 		.ascii	"QProdB5\000"
  40      64423500 
  41              		.align	2
  42              	.LC5:
  43 0028 51436F6E 		.ascii	"QConsB6\000"
  43      73423600 
  44              		.section	.text.vStartBlockingQueueTasks,"ax",%progbits
  45              		.align	2
  46              		.global	vStartBlockingQueueTasks
  47              		.thumb
  48              		.thumb_func
  49              		.type	vStartBlockingQueueTasks, %function
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 2


  50              	vStartBlockingQueueTasks:
  51              	.LFB68:
  52              		.file 1 "..\\..\\Common\\Minimal\\BlockQ.c"
   1:..\..\Common\Minimal/BlockQ.c **** /*
   2:..\..\Common\Minimal/BlockQ.c ****  * FreeRTOS Kernel V10.0.1
   3:..\..\Common\Minimal/BlockQ.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\Common\Minimal/BlockQ.c ****  *
   5:..\..\Common\Minimal/BlockQ.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\Common\Minimal/BlockQ.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\Common\Minimal/BlockQ.c ****  * the Software without restriction, including without limitation the rights to
   8:..\..\Common\Minimal/BlockQ.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\Common\Minimal/BlockQ.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\..\Common\Minimal/BlockQ.c ****  * subject to the following conditions:
  11:..\..\Common\Minimal/BlockQ.c ****  *
  12:..\..\Common\Minimal/BlockQ.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\Common\Minimal/BlockQ.c ****  * copies or substantial portions of the Software.
  14:..\..\Common\Minimal/BlockQ.c ****  *
  15:..\..\Common\Minimal/BlockQ.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\Common\Minimal/BlockQ.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\Common\Minimal/BlockQ.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\Common\Minimal/BlockQ.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\Common\Minimal/BlockQ.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\Common\Minimal/BlockQ.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\Common\Minimal/BlockQ.c ****  *
  22:..\..\Common\Minimal/BlockQ.c ****  * http://www.FreeRTOS.org
  23:..\..\Common\Minimal/BlockQ.c ****  * http://aws.amazon.com/freertos
  24:..\..\Common\Minimal/BlockQ.c ****  *
  25:..\..\Common\Minimal/BlockQ.c ****  * 1 tab == 4 spaces!
  26:..\..\Common\Minimal/BlockQ.c ****  */
  27:..\..\Common\Minimal/BlockQ.c **** 
  28:..\..\Common\Minimal/BlockQ.c **** /*
  29:..\..\Common\Minimal/BlockQ.c ****  * Creates six tasks that operate on three queues as follows:
  30:..\..\Common\Minimal/BlockQ.c ****  *
  31:..\..\Common\Minimal/BlockQ.c ****  * The first two tasks send and receive an incrementing number to/from a queue.
  32:..\..\Common\Minimal/BlockQ.c ****  * One task acts as a producer and the other as the consumer.  The consumer is a
  33:..\..\Common\Minimal/BlockQ.c ****  * higher priority than the producer and is set to block on queue reads.  The queue
  34:..\..\Common\Minimal/BlockQ.c ****  * only has space for one item - as soon as the producer posts a message on the
  35:..\..\Common\Minimal/BlockQ.c ****  * queue the consumer will unblock, pre-empt the producer, and remove the item.
  36:..\..\Common\Minimal/BlockQ.c ****  *
  37:..\..\Common\Minimal/BlockQ.c ****  * The second two tasks work the other way around.  Again the queue used only has
  38:..\..\Common\Minimal/BlockQ.c ****  * enough space for one item.  This time the consumer has a lower priority than the
  39:..\..\Common\Minimal/BlockQ.c ****  * producer.  The producer will try to post on the queue blocking when the queue is
  40:..\..\Common\Minimal/BlockQ.c ****  * full.  When the consumer wakes it will remove the item from the queue, causing
  41:..\..\Common\Minimal/BlockQ.c ****  * the producer to unblock, pre-empt the consumer, and immediately re-fill the
  42:..\..\Common\Minimal/BlockQ.c ****  * queue.
  43:..\..\Common\Minimal/BlockQ.c ****  *
  44:..\..\Common\Minimal/BlockQ.c ****  * The last two tasks use the same queue producer and consumer functions.  This time the queue has
  45:..\..\Common\Minimal/BlockQ.c ****  * enough space for lots of items and the tasks operate at the same priority.  The
  46:..\..\Common\Minimal/BlockQ.c ****  * producer will execute, placing items into the queue.  The consumer will start
  47:..\..\Common\Minimal/BlockQ.c ****  * executing when either the queue becomes full (causing the producer to block) or
  48:..\..\Common\Minimal/BlockQ.c ****  * a context switch occurs (tasks of the same priority will time slice).
  49:..\..\Common\Minimal/BlockQ.c ****  *
  50:..\..\Common\Minimal/BlockQ.c ****  */
  51:..\..\Common\Minimal/BlockQ.c **** 
  52:..\..\Common\Minimal/BlockQ.c **** #include <stdlib.h>
  53:..\..\Common\Minimal/BlockQ.c **** 
  54:..\..\Common\Minimal/BlockQ.c **** /* Scheduler include files. */
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 3


  55:..\..\Common\Minimal/BlockQ.c **** #include "FreeRTOS.h"
  56:..\..\Common\Minimal/BlockQ.c **** #include "task.h"
  57:..\..\Common\Minimal/BlockQ.c **** #include "queue.h"
  58:..\..\Common\Minimal/BlockQ.c **** 
  59:..\..\Common\Minimal/BlockQ.c **** /* Demo program include files. */
  60:..\..\Common\Minimal/BlockQ.c **** #include "BlockQ.h"
  61:..\..\Common\Minimal/BlockQ.c **** 
  62:..\..\Common\Minimal/BlockQ.c **** #define blckqSTACK_SIZE		configMINIMAL_STACK_SIZE
  63:..\..\Common\Minimal/BlockQ.c **** #define blckqNUM_TASK_SETS	( 3 )
  64:..\..\Common\Minimal/BlockQ.c **** 
  65:..\..\Common\Minimal/BlockQ.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  66:..\..\Common\Minimal/BlockQ.c **** 	#error This example cannot be used if dynamic allocation is not allowed.
  67:..\..\Common\Minimal/BlockQ.c **** #endif
  68:..\..\Common\Minimal/BlockQ.c **** 
  69:..\..\Common\Minimal/BlockQ.c **** /* Structure used to pass parameters to the blocking queue tasks. */
  70:..\..\Common\Minimal/BlockQ.c **** typedef struct BLOCKING_QUEUE_PARAMETERS
  71:..\..\Common\Minimal/BlockQ.c **** {
  72:..\..\Common\Minimal/BlockQ.c **** 	QueueHandle_t xQueue;					/*< The queue to be used by the task. */
  73:..\..\Common\Minimal/BlockQ.c **** 	TickType_t xBlockTime;				/*< The block time to use on queue reads/writes. */
  74:..\..\Common\Minimal/BlockQ.c **** 	volatile short *psCheckVariable;	/*< Incremented on each successful cycle to check the task is sti
  75:..\..\Common\Minimal/BlockQ.c **** } xBlockingQueueParameters;
  76:..\..\Common\Minimal/BlockQ.c **** 
  77:..\..\Common\Minimal/BlockQ.c **** /* Task function that creates an incrementing number and posts it on a queue. */
  78:..\..\Common\Minimal/BlockQ.c **** static portTASK_FUNCTION_PROTO( vBlockingQueueProducer, pvParameters );
  79:..\..\Common\Minimal/BlockQ.c **** 
  80:..\..\Common\Minimal/BlockQ.c **** /* Task function that removes the incrementing number from a queue and checks that
  81:..\..\Common\Minimal/BlockQ.c **** it is the expected number. */
  82:..\..\Common\Minimal/BlockQ.c **** static portTASK_FUNCTION_PROTO( vBlockingQueueConsumer, pvParameters );
  83:..\..\Common\Minimal/BlockQ.c **** 
  84:..\..\Common\Minimal/BlockQ.c **** /* Variables which are incremented each time an item is removed from a queue, and
  85:..\..\Common\Minimal/BlockQ.c **** found to be the expected value.
  86:..\..\Common\Minimal/BlockQ.c **** These are used to check that the tasks are still running. */
  87:..\..\Common\Minimal/BlockQ.c **** static volatile short sBlockingConsumerCount[ blckqNUM_TASK_SETS ] = { ( uint16_t ) 0, ( uint16_t )
  88:..\..\Common\Minimal/BlockQ.c **** 
  89:..\..\Common\Minimal/BlockQ.c **** /* Variable which are incremented each time an item is posted on a queue.   These
  90:..\..\Common\Minimal/BlockQ.c **** are used to check that the tasks are still running. */
  91:..\..\Common\Minimal/BlockQ.c **** static volatile short sBlockingProducerCount[ blckqNUM_TASK_SETS ] = { ( uint16_t ) 0, ( uint16_t )
  92:..\..\Common\Minimal/BlockQ.c **** 
  93:..\..\Common\Minimal/BlockQ.c **** /*-----------------------------------------------------------*/
  94:..\..\Common\Minimal/BlockQ.c **** 
  95:..\..\Common\Minimal/BlockQ.c **** void vStartBlockingQueueTasks( UBaseType_t uxPriority )
  96:..\..\Common\Minimal/BlockQ.c **** {
  53              		.loc 1 96 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 48
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57 0000 80B5     		push	{r7, lr}
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 8EB0     		sub	sp, sp, #56
  62              		.cfi_def_cfa_offset 64
  63 0004 02AF     		add	r7, sp, #8
  64              		.cfi_def_cfa 7, 56
  65 0006 7860     		str	r0, [r7, #4]
  97:..\..\Common\Minimal/BlockQ.c **** xBlockingQueueParameters *pxQueueParameters1, *pxQueueParameters2;
  98:..\..\Common\Minimal/BlockQ.c **** xBlockingQueueParameters *pxQueueParameters3, *pxQueueParameters4;
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 4


  99:..\..\Common\Minimal/BlockQ.c **** xBlockingQueueParameters *pxQueueParameters5, *pxQueueParameters6;
 100:..\..\Common\Minimal/BlockQ.c **** const UBaseType_t uxQueueSize1 = 1, uxQueueSize5 = 5;
  66              		.loc 1 100 0
  67 0008 0123     		movs	r3, #1
  68 000a FB62     		str	r3, [r7, #44]
  69 000c 0523     		movs	r3, #5
  70 000e BB62     		str	r3, [r7, #40]
 101:..\..\Common\Minimal/BlockQ.c **** const TickType_t xBlockTime = pdMS_TO_TICKS( ( TickType_t ) 1000 );
  71              		.loc 1 101 0
  72 0010 4FF47A73 		mov	r3, #1000
  73 0014 7B62     		str	r3, [r7, #36]
 102:..\..\Common\Minimal/BlockQ.c **** const TickType_t xDontBlock = ( TickType_t ) 0;
  74              		.loc 1 102 0
  75 0016 0023     		movs	r3, #0
  76 0018 3B62     		str	r3, [r7, #32]
 103:..\..\Common\Minimal/BlockQ.c **** 
 104:..\..\Common\Minimal/BlockQ.c **** 	/* Create the first two tasks as described at the top of the file. */
 105:..\..\Common\Minimal/BlockQ.c **** 
 106:..\..\Common\Minimal/BlockQ.c **** 	/* First create the structure used to pass parameters to the consumer tasks. */
 107:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters1 = ( xBlockingQueueParameters * ) pvPortMalloc( sizeof( xBlockingQueueParameters
  77              		.loc 1 107 0
  78 001a 0C20     		movs	r0, #12
  79 001c FFF7FEFF 		bl	pvPortMalloc
  80 0020 F861     		str	r0, [r7, #28]
 108:..\..\Common\Minimal/BlockQ.c **** 
 109:..\..\Common\Minimal/BlockQ.c **** 	/* Create the queue used by the first two tasks to pass the incrementing number.
 110:..\..\Common\Minimal/BlockQ.c **** 	Pass a pointer to the queue in the parameter structure. */
 111:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters1->xQueue = xQueueCreate( uxQueueSize1, ( UBaseType_t ) sizeof( uint16_t ) );
  81              		.loc 1 111 0
  82 0022 F86A     		ldr	r0, [r7, #44]
  83 0024 0221     		movs	r1, #2
  84 0026 0022     		movs	r2, #0
  85 0028 FFF7FEFF 		bl	xQueueGenericCreate
  86 002c 0246     		mov	r2, r0
  87 002e FB69     		ldr	r3, [r7, #28]
  88 0030 1A60     		str	r2, [r3]
 112:..\..\Common\Minimal/BlockQ.c **** 
 113:..\..\Common\Minimal/BlockQ.c **** 	/* The consumer is created first so gets a block time as described above. */
 114:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters1->xBlockTime = xBlockTime;
  89              		.loc 1 114 0
  90 0032 FB69     		ldr	r3, [r7, #28]
  91 0034 7A6A     		ldr	r2, [r7, #36]
  92 0036 5A60     		str	r2, [r3, #4]
 115:..\..\Common\Minimal/BlockQ.c **** 
 116:..\..\Common\Minimal/BlockQ.c **** 	/* Pass in the variable that this task is going to increment so we can check it
 117:..\..\Common\Minimal/BlockQ.c **** 	is still running. */
 118:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters1->psCheckVariable = &( sBlockingConsumerCount[ 0 ] );
  93              		.loc 1 118 0
  94 0038 FB69     		ldr	r3, [r7, #28]
  95 003a 474A     		ldr	r2, .L2
  96 003c 9A60     		str	r2, [r3, #8]
 119:..\..\Common\Minimal/BlockQ.c **** 
 120:..\..\Common\Minimal/BlockQ.c **** 	/* Create the structure used to pass parameters to the producer task. */
 121:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters2 = ( xBlockingQueueParameters * ) pvPortMalloc( sizeof( xBlockingQueueParameters
  97              		.loc 1 121 0
  98 003e 0C20     		movs	r0, #12
  99 0040 FFF7FEFF 		bl	pvPortMalloc
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 5


 100 0044 B861     		str	r0, [r7, #24]
 122:..\..\Common\Minimal/BlockQ.c **** 
 123:..\..\Common\Minimal/BlockQ.c **** 	/* Pass the queue to this task also, using the parameter structure. */
 124:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters2->xQueue = pxQueueParameters1->xQueue;
 101              		.loc 1 124 0
 102 0046 FB69     		ldr	r3, [r7, #28]
 103 0048 1A68     		ldr	r2, [r3]
 104 004a BB69     		ldr	r3, [r7, #24]
 105 004c 1A60     		str	r2, [r3]
 125:..\..\Common\Minimal/BlockQ.c **** 
 126:..\..\Common\Minimal/BlockQ.c **** 	/* The producer is not going to block - as soon as it posts the consumer will
 127:..\..\Common\Minimal/BlockQ.c **** 	wake and remove the item so the producer should always have room to post. */
 128:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters2->xBlockTime = xDontBlock;
 106              		.loc 1 128 0
 107 004e BB69     		ldr	r3, [r7, #24]
 108 0050 3A6A     		ldr	r2, [r7, #32]
 109 0052 5A60     		str	r2, [r3, #4]
 129:..\..\Common\Minimal/BlockQ.c **** 
 130:..\..\Common\Minimal/BlockQ.c **** 	/* Pass in the variable that this task is going to increment so we can check
 131:..\..\Common\Minimal/BlockQ.c **** 	it is still running. */
 132:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters2->psCheckVariable = &( sBlockingProducerCount[ 0 ] );
 110              		.loc 1 132 0
 111 0054 BB69     		ldr	r3, [r7, #24]
 112 0056 414A     		ldr	r2, .L2+4
 113 0058 9A60     		str	r2, [r3, #8]
 133:..\..\Common\Minimal/BlockQ.c **** 
 134:..\..\Common\Minimal/BlockQ.c **** 
 135:..\..\Common\Minimal/BlockQ.c **** 	/* Note the producer has a lower priority than the consumer when the tasks are
 136:..\..\Common\Minimal/BlockQ.c **** 	spawned. */
 137:..\..\Common\Minimal/BlockQ.c **** 	xTaskCreate( vBlockingQueueConsumer, "QConsB1", blckqSTACK_SIZE, ( void * ) pxQueueParameters1, ux
 114              		.loc 1 137 0
 115 005a 7B68     		ldr	r3, [r7, #4]
 116 005c 0093     		str	r3, [sp]
 117 005e 0023     		movs	r3, #0
 118 0060 0193     		str	r3, [sp, #4]
 119 0062 3F48     		ldr	r0, .L2+8
 120 0064 3F49     		ldr	r1, .L2+12
 121 0066 6422     		movs	r2, #100
 122 0068 FB69     		ldr	r3, [r7, #28]
 123 006a FFF7FEFF 		bl	xTaskCreate
 138:..\..\Common\Minimal/BlockQ.c **** 	xTaskCreate( vBlockingQueueProducer, "QProdB2", blckqSTACK_SIZE, ( void * ) pxQueueParameters2, ts
 124              		.loc 1 138 0
 125 006e 0023     		movs	r3, #0
 126 0070 0093     		str	r3, [sp]
 127 0072 0023     		movs	r3, #0
 128 0074 0193     		str	r3, [sp, #4]
 129 0076 3C48     		ldr	r0, .L2+16
 130 0078 3C49     		ldr	r1, .L2+20
 131 007a 6422     		movs	r2, #100
 132 007c BB69     		ldr	r3, [r7, #24]
 133 007e FFF7FEFF 		bl	xTaskCreate
 139:..\..\Common\Minimal/BlockQ.c **** 
 140:..\..\Common\Minimal/BlockQ.c **** 
 141:..\..\Common\Minimal/BlockQ.c **** 
 142:..\..\Common\Minimal/BlockQ.c **** 	/* Create the second two tasks as described at the top of the file.   This uses
 143:..\..\Common\Minimal/BlockQ.c **** 	the same mechanism but reverses the task priorities. */
 144:..\..\Common\Minimal/BlockQ.c **** 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 6


 145:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters3 = ( xBlockingQueueParameters * ) pvPortMalloc( sizeof( xBlockingQueueParameters
 134              		.loc 1 145 0
 135 0082 0C20     		movs	r0, #12
 136 0084 FFF7FEFF 		bl	pvPortMalloc
 137 0088 7861     		str	r0, [r7, #20]
 146:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters3->xQueue = xQueueCreate( uxQueueSize1, ( UBaseType_t ) sizeof( uint16_t ) );
 138              		.loc 1 146 0
 139 008a F86A     		ldr	r0, [r7, #44]
 140 008c 0221     		movs	r1, #2
 141 008e 0022     		movs	r2, #0
 142 0090 FFF7FEFF 		bl	xQueueGenericCreate
 143 0094 0246     		mov	r2, r0
 144 0096 7B69     		ldr	r3, [r7, #20]
 145 0098 1A60     		str	r2, [r3]
 147:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters3->xBlockTime = xDontBlock;
 146              		.loc 1 147 0
 147 009a 7B69     		ldr	r3, [r7, #20]
 148 009c 3A6A     		ldr	r2, [r7, #32]
 149 009e 5A60     		str	r2, [r3, #4]
 148:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters3->psCheckVariable = &( sBlockingProducerCount[ 1 ] );
 150              		.loc 1 148 0
 151 00a0 7B69     		ldr	r3, [r7, #20]
 152 00a2 334A     		ldr	r2, .L2+24
 153 00a4 9A60     		str	r2, [r3, #8]
 149:..\..\Common\Minimal/BlockQ.c **** 
 150:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters4 = ( xBlockingQueueParameters * ) pvPortMalloc( sizeof( xBlockingQueueParameters
 154              		.loc 1 150 0
 155 00a6 0C20     		movs	r0, #12
 156 00a8 FFF7FEFF 		bl	pvPortMalloc
 157 00ac 3861     		str	r0, [r7, #16]
 151:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters4->xQueue = pxQueueParameters3->xQueue;
 158              		.loc 1 151 0
 159 00ae 7B69     		ldr	r3, [r7, #20]
 160 00b0 1A68     		ldr	r2, [r3]
 161 00b2 3B69     		ldr	r3, [r7, #16]
 162 00b4 1A60     		str	r2, [r3]
 152:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters4->xBlockTime = xBlockTime;
 163              		.loc 1 152 0
 164 00b6 3B69     		ldr	r3, [r7, #16]
 165 00b8 7A6A     		ldr	r2, [r7, #36]
 166 00ba 5A60     		str	r2, [r3, #4]
 153:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters4->psCheckVariable = &( sBlockingConsumerCount[ 1 ] );
 167              		.loc 1 153 0
 168 00bc 3B69     		ldr	r3, [r7, #16]
 169 00be 2D4A     		ldr	r2, .L2+28
 170 00c0 9A60     		str	r2, [r3, #8]
 154:..\..\Common\Minimal/BlockQ.c **** 
 155:..\..\Common\Minimal/BlockQ.c **** 	xTaskCreate( vBlockingQueueConsumer, "QConsB3", blckqSTACK_SIZE, ( void * ) pxQueueParameters3, ts
 171              		.loc 1 155 0
 172 00c2 0023     		movs	r3, #0
 173 00c4 0093     		str	r3, [sp]
 174 00c6 0023     		movs	r3, #0
 175 00c8 0193     		str	r3, [sp, #4]
 176 00ca 2548     		ldr	r0, .L2+8
 177 00cc 2A49     		ldr	r1, .L2+32
 178 00ce 6422     		movs	r2, #100
 179 00d0 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 7


 180 00d2 FFF7FEFF 		bl	xTaskCreate
 156:..\..\Common\Minimal/BlockQ.c **** 	xTaskCreate( vBlockingQueueProducer, "QProdB4", blckqSTACK_SIZE, ( void * ) pxQueueParameters4, ux
 181              		.loc 1 156 0
 182 00d6 7B68     		ldr	r3, [r7, #4]
 183 00d8 0093     		str	r3, [sp]
 184 00da 0023     		movs	r3, #0
 185 00dc 0193     		str	r3, [sp, #4]
 186 00de 2248     		ldr	r0, .L2+16
 187 00e0 2649     		ldr	r1, .L2+36
 188 00e2 6422     		movs	r2, #100
 189 00e4 3B69     		ldr	r3, [r7, #16]
 190 00e6 FFF7FEFF 		bl	xTaskCreate
 157:..\..\Common\Minimal/BlockQ.c **** 
 158:..\..\Common\Minimal/BlockQ.c **** 
 159:..\..\Common\Minimal/BlockQ.c **** 
 160:..\..\Common\Minimal/BlockQ.c **** 	/* Create the last two tasks as described above.  The mechanism is again just
 161:..\..\Common\Minimal/BlockQ.c **** 	the same.  This time both parameter structures are given a block time. */
 162:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters5 = ( xBlockingQueueParameters * ) pvPortMalloc( sizeof( xBlockingQueueParameters
 191              		.loc 1 162 0
 192 00ea 0C20     		movs	r0, #12
 193 00ec FFF7FEFF 		bl	pvPortMalloc
 194 00f0 F860     		str	r0, [r7, #12]
 163:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters5->xQueue = xQueueCreate( uxQueueSize5, ( UBaseType_t ) sizeof( uint16_t ) );
 195              		.loc 1 163 0
 196 00f2 B86A     		ldr	r0, [r7, #40]
 197 00f4 0221     		movs	r1, #2
 198 00f6 0022     		movs	r2, #0
 199 00f8 FFF7FEFF 		bl	xQueueGenericCreate
 200 00fc 0246     		mov	r2, r0
 201 00fe FB68     		ldr	r3, [r7, #12]
 202 0100 1A60     		str	r2, [r3]
 164:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters5->xBlockTime = xBlockTime;
 203              		.loc 1 164 0
 204 0102 FB68     		ldr	r3, [r7, #12]
 205 0104 7A6A     		ldr	r2, [r7, #36]
 206 0106 5A60     		str	r2, [r3, #4]
 165:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters5->psCheckVariable = &( sBlockingProducerCount[ 2 ] );
 207              		.loc 1 165 0
 208 0108 FB68     		ldr	r3, [r7, #12]
 209 010a 1D4A     		ldr	r2, .L2+40
 210 010c 9A60     		str	r2, [r3, #8]
 166:..\..\Common\Minimal/BlockQ.c **** 
 167:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters6 = ( xBlockingQueueParameters * ) pvPortMalloc( sizeof( xBlockingQueueParameters
 211              		.loc 1 167 0
 212 010e 0C20     		movs	r0, #12
 213 0110 FFF7FEFF 		bl	pvPortMalloc
 214 0114 B860     		str	r0, [r7, #8]
 168:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters6->xQueue = pxQueueParameters5->xQueue;
 215              		.loc 1 168 0
 216 0116 FB68     		ldr	r3, [r7, #12]
 217 0118 1A68     		ldr	r2, [r3]
 218 011a BB68     		ldr	r3, [r7, #8]
 219 011c 1A60     		str	r2, [r3]
 169:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters6->xBlockTime = xBlockTime;
 220              		.loc 1 169 0
 221 011e BB68     		ldr	r3, [r7, #8]
 222 0120 7A6A     		ldr	r2, [r7, #36]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 8


 223 0122 5A60     		str	r2, [r3, #4]
 170:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters6->psCheckVariable = &( sBlockingConsumerCount[ 2 ] );
 224              		.loc 1 170 0
 225 0124 BB68     		ldr	r3, [r7, #8]
 226 0126 174A     		ldr	r2, .L2+44
 227 0128 9A60     		str	r2, [r3, #8]
 171:..\..\Common\Minimal/BlockQ.c **** 
 172:..\..\Common\Minimal/BlockQ.c **** 	xTaskCreate( vBlockingQueueProducer, "QProdB5", blckqSTACK_SIZE, ( void * ) pxQueueParameters5, ts
 228              		.loc 1 172 0
 229 012a 0023     		movs	r3, #0
 230 012c 0093     		str	r3, [sp]
 231 012e 0023     		movs	r3, #0
 232 0130 0193     		str	r3, [sp, #4]
 233 0132 0D48     		ldr	r0, .L2+16
 234 0134 1449     		ldr	r1, .L2+48
 235 0136 6422     		movs	r2, #100
 236 0138 FB68     		ldr	r3, [r7, #12]
 237 013a FFF7FEFF 		bl	xTaskCreate
 173:..\..\Common\Minimal/BlockQ.c **** 	xTaskCreate( vBlockingQueueConsumer, "QConsB6", blckqSTACK_SIZE, ( void * ) pxQueueParameters6, ts
 238              		.loc 1 173 0
 239 013e 0023     		movs	r3, #0
 240 0140 0093     		str	r3, [sp]
 241 0142 0023     		movs	r3, #0
 242 0144 0193     		str	r3, [sp, #4]
 243 0146 0648     		ldr	r0, .L2+8
 244 0148 1049     		ldr	r1, .L2+52
 245 014a 6422     		movs	r2, #100
 246 014c BB68     		ldr	r3, [r7, #8]
 247 014e FFF7FEFF 		bl	xTaskCreate
 174:..\..\Common\Minimal/BlockQ.c **** }
 248              		.loc 1 174 0
 249 0152 3037     		adds	r7, r7, #48
 250              		.cfi_def_cfa_offset 8
 251 0154 BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 0156 80BD     		pop	{r7, pc}
 255              	.L3:
 256              		.align	2
 257              	.L2:
 258 0158 00000000 		.word	sBlockingConsumerCount
 259 015c 08000000 		.word	sBlockingProducerCount
 260 0160 00000000 		.word	vBlockingQueueConsumer
 261 0164 00000000 		.word	.LC0
 262 0168 00000000 		.word	vBlockingQueueProducer
 263 016c 08000000 		.word	.LC1
 264 0170 0A000000 		.word	sBlockingProducerCount+2
 265 0174 02000000 		.word	sBlockingConsumerCount+2
 266 0178 10000000 		.word	.LC2
 267 017c 18000000 		.word	.LC3
 268 0180 0C000000 		.word	sBlockingProducerCount+4
 269 0184 04000000 		.word	sBlockingConsumerCount+4
 270 0188 20000000 		.word	.LC4
 271 018c 28000000 		.word	.LC5
 272              		.cfi_endproc
 273              	.LFE68:
 274              		.size	vStartBlockingQueueTasks, .-vStartBlockingQueueTasks
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 9


 275              		.section	.text.vBlockingQueueProducer,"ax",%progbits
 276              		.align	2
 277              		.thumb
 278              		.thumb_func
 279              		.type	vBlockingQueueProducer, %function
 280              	vBlockingQueueProducer:
 281              	.LFB69:
 175:..\..\Common\Minimal/BlockQ.c **** /*-----------------------------------------------------------*/
 176:..\..\Common\Minimal/BlockQ.c **** 
 177:..\..\Common\Minimal/BlockQ.c **** static portTASK_FUNCTION( vBlockingQueueProducer, pvParameters )
 178:..\..\Common\Minimal/BlockQ.c **** {
 282              		.loc 1 178 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 24
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 86B0     		sub	sp, sp, #24
 291              		.cfi_def_cfa_offset 32
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 179:..\..\Common\Minimal/BlockQ.c **** uint16_t usValue = 0;
 295              		.loc 1 179 0
 296 0008 0023     		movs	r3, #0
 297 000a FB81     		strh	r3, [r7, #14]	@ movhi
 180:..\..\Common\Minimal/BlockQ.c **** xBlockingQueueParameters *pxQueueParameters;
 181:..\..\Common\Minimal/BlockQ.c **** short sErrorEverOccurred = pdFALSE;
 298              		.loc 1 181 0
 299 000c 0023     		movs	r3, #0
 300 000e FB82     		strh	r3, [r7, #22]	@ movhi
 182:..\..\Common\Minimal/BlockQ.c **** 
 183:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters = ( xBlockingQueueParameters * ) pvParameters;
 301              		.loc 1 183 0
 302 0010 7B68     		ldr	r3, [r7, #4]
 303 0012 3B61     		str	r3, [r7, #16]
 304              	.L8:
 184:..\..\Common\Minimal/BlockQ.c **** 
 185:..\..\Common\Minimal/BlockQ.c **** 	for( ;; )
 186:..\..\Common\Minimal/BlockQ.c **** 	{
 187:..\..\Common\Minimal/BlockQ.c **** 		if( xQueueSend( pxQueueParameters->xQueue, ( void * ) &usValue, pxQueueParameters->xBlockTime ) !
 305              		.loc 1 187 0
 306 0014 3B69     		ldr	r3, [r7, #16]
 307 0016 1968     		ldr	r1, [r3]
 308 0018 3B69     		ldr	r3, [r7, #16]
 309 001a 5B68     		ldr	r3, [r3, #4]
 310 001c 07F10E02 		add	r2, r7, #14
 311 0020 0846     		mov	r0, r1
 312 0022 1146     		mov	r1, r2
 313 0024 1A46     		mov	r2, r3
 314 0026 0023     		movs	r3, #0
 315 0028 FFF7FEFF 		bl	xQueueGenericSend
 316 002c 0346     		mov	r3, r0
 317 002e 012B     		cmp	r3, #1
 318 0030 02D0     		beq	.L5
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 10


 188:..\..\Common\Minimal/BlockQ.c **** 		{
 189:..\..\Common\Minimal/BlockQ.c **** 			sErrorEverOccurred = pdTRUE;
 319              		.loc 1 189 0
 320 0032 0123     		movs	r3, #1
 321 0034 FB82     		strh	r3, [r7, #22]	@ movhi
 322 0036 11E0     		b	.L6
 323              	.L5:
 190:..\..\Common\Minimal/BlockQ.c **** 		}
 191:..\..\Common\Minimal/BlockQ.c **** 		else
 192:..\..\Common\Minimal/BlockQ.c **** 		{
 193:..\..\Common\Minimal/BlockQ.c **** 			/* We have successfully posted a message, so increment the variable
 194:..\..\Common\Minimal/BlockQ.c **** 			used to check we are still running. */
 195:..\..\Common\Minimal/BlockQ.c **** 			if( sErrorEverOccurred == pdFALSE )
 324              		.loc 1 195 0
 325 0038 B7F91630 		ldrsh	r3, [r7, #22]
 326 003c 002B     		cmp	r3, #0
 327 003e 09D1     		bne	.L7
 196:..\..\Common\Minimal/BlockQ.c **** 			{
 197:..\..\Common\Minimal/BlockQ.c **** 				( *pxQueueParameters->psCheckVariable )++;
 328              		.loc 1 197 0
 329 0040 3B69     		ldr	r3, [r7, #16]
 330 0042 9A68     		ldr	r2, [r3, #8]
 331 0044 1388     		ldrh	r3, [r2]	@ movhi
 332 0046 9BB2     		uxth	r3, r3
 333 0048 9BB2     		uxth	r3, r3
 334 004a 9BB2     		uxth	r3, r3
 335 004c 0133     		adds	r3, r3, #1
 336 004e 9BB2     		uxth	r3, r3
 337 0050 9BB2     		uxth	r3, r3
 338 0052 1380     		strh	r3, [r2]	@ movhi
 339              	.L7:
 198:..\..\Common\Minimal/BlockQ.c **** 			}
 199:..\..\Common\Minimal/BlockQ.c **** 
 200:..\..\Common\Minimal/BlockQ.c **** 			/* Increment the variable we are going to post next time round.  The
 201:..\..\Common\Minimal/BlockQ.c **** 			consumer will expect the numbers to	follow in numerical order. */
 202:..\..\Common\Minimal/BlockQ.c **** 			++usValue;
 340              		.loc 1 202 0
 341 0054 FB89     		ldrh	r3, [r7, #14]
 342 0056 0133     		adds	r3, r3, #1
 343 0058 9BB2     		uxth	r3, r3
 344 005a FB81     		strh	r3, [r7, #14]	@ movhi
 345              	.L6:
 203:..\..\Common\Minimal/BlockQ.c **** 
 204:..\..\Common\Minimal/BlockQ.c **** 			#if configUSE_PREEMPTION == 0
 205:..\..\Common\Minimal/BlockQ.c **** 				taskYIELD();
 206:..\..\Common\Minimal/BlockQ.c **** 			#endif
 207:..\..\Common\Minimal/BlockQ.c **** 		}
 208:..\..\Common\Minimal/BlockQ.c **** 	}
 346              		.loc 1 208 0
 347 005c DAE7     		b	.L8
 348              		.cfi_endproc
 349              	.LFE69:
 350              		.size	vBlockingQueueProducer, .-vBlockingQueueProducer
 351 005e 00BF     		.section	.text.vBlockingQueueConsumer,"ax",%progbits
 352              		.align	2
 353              		.thumb
 354              		.thumb_func
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 11


 355              		.type	vBlockingQueueConsumer, %function
 356              	vBlockingQueueConsumer:
 357              	.LFB70:
 209:..\..\Common\Minimal/BlockQ.c **** }
 210:..\..\Common\Minimal/BlockQ.c **** /*-----------------------------------------------------------*/
 211:..\..\Common\Minimal/BlockQ.c **** 
 212:..\..\Common\Minimal/BlockQ.c **** static portTASK_FUNCTION( vBlockingQueueConsumer, pvParameters )
 213:..\..\Common\Minimal/BlockQ.c **** {
 358              		.loc 1 213 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 24
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362 0000 80B5     		push	{r7, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 86B0     		sub	sp, sp, #24
 367              		.cfi_def_cfa_offset 32
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 214:..\..\Common\Minimal/BlockQ.c **** uint16_t usData, usExpectedValue = 0;
 371              		.loc 1 214 0
 372 0008 0023     		movs	r3, #0
 373 000a FB82     		strh	r3, [r7, #22]	@ movhi
 215:..\..\Common\Minimal/BlockQ.c **** xBlockingQueueParameters *pxQueueParameters;
 216:..\..\Common\Minimal/BlockQ.c **** short sErrorEverOccurred = pdFALSE;
 374              		.loc 1 216 0
 375 000c 0023     		movs	r3, #0
 376 000e BB82     		strh	r3, [r7, #20]	@ movhi
 217:..\..\Common\Minimal/BlockQ.c **** 
 218:..\..\Common\Minimal/BlockQ.c **** 	pxQueueParameters = ( xBlockingQueueParameters * ) pvParameters;
 377              		.loc 1 218 0
 378 0010 7B68     		ldr	r3, [r7, #4]
 379 0012 3B61     		str	r3, [r7, #16]
 380              	.L13:
 219:..\..\Common\Minimal/BlockQ.c **** 
 220:..\..\Common\Minimal/BlockQ.c **** 	for( ;; )
 221:..\..\Common\Minimal/BlockQ.c **** 	{
 222:..\..\Common\Minimal/BlockQ.c **** 		if( xQueueReceive( pxQueueParameters->xQueue, &usData, pxQueueParameters->xBlockTime ) == pdPASS 
 381              		.loc 1 222 0
 382 0014 3B69     		ldr	r3, [r7, #16]
 383 0016 1968     		ldr	r1, [r3]
 384 0018 3B69     		ldr	r3, [r7, #16]
 385 001a 5B68     		ldr	r3, [r3, #4]
 386 001c 07F10E02 		add	r2, r7, #14
 387 0020 0846     		mov	r0, r1
 388 0022 1146     		mov	r1, r2
 389 0024 1A46     		mov	r2, r3
 390 0026 FFF7FEFF 		bl	xQueueReceive
 391 002a 0346     		mov	r3, r0
 392 002c 012B     		cmp	r3, #1
 393 002e 19D1     		bne	.L10
 223:..\..\Common\Minimal/BlockQ.c **** 		{
 224:..\..\Common\Minimal/BlockQ.c **** 			if( usData != usExpectedValue )
 394              		.loc 1 224 0
 395 0030 FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 12


 396 0032 FA8A     		ldrh	r2, [r7, #22]
 397 0034 9A42     		cmp	r2, r3
 398 0036 04D0     		beq	.L11
 225:..\..\Common\Minimal/BlockQ.c **** 			{
 226:..\..\Common\Minimal/BlockQ.c **** 				/* Catch-up. */
 227:..\..\Common\Minimal/BlockQ.c **** 				usExpectedValue = usData;
 399              		.loc 1 227 0
 400 0038 FB89     		ldrh	r3, [r7, #14]	@ movhi
 401 003a FB82     		strh	r3, [r7, #22]	@ movhi
 228:..\..\Common\Minimal/BlockQ.c **** 
 229:..\..\Common\Minimal/BlockQ.c **** 				sErrorEverOccurred = pdTRUE;
 402              		.loc 1 229 0
 403 003c 0123     		movs	r3, #1
 404 003e BB82     		strh	r3, [r7, #20]	@ movhi
 405 0040 10E0     		b	.L10
 406              	.L11:
 230:..\..\Common\Minimal/BlockQ.c **** 			}
 231:..\..\Common\Minimal/BlockQ.c **** 			else
 232:..\..\Common\Minimal/BlockQ.c **** 			{
 233:..\..\Common\Minimal/BlockQ.c **** 				/* We have successfully received a message, so increment the
 234:..\..\Common\Minimal/BlockQ.c **** 				variable used to check we are still running. */
 235:..\..\Common\Minimal/BlockQ.c **** 				if( sErrorEverOccurred == pdFALSE )
 407              		.loc 1 235 0
 408 0042 B7F91430 		ldrsh	r3, [r7, #20]
 409 0046 002B     		cmp	r3, #0
 410 0048 09D1     		bne	.L12
 236:..\..\Common\Minimal/BlockQ.c **** 				{
 237:..\..\Common\Minimal/BlockQ.c **** 					( *pxQueueParameters->psCheckVariable )++;
 411              		.loc 1 237 0
 412 004a 3B69     		ldr	r3, [r7, #16]
 413 004c 9A68     		ldr	r2, [r3, #8]
 414 004e 1388     		ldrh	r3, [r2]	@ movhi
 415 0050 9BB2     		uxth	r3, r3
 416 0052 9BB2     		uxth	r3, r3
 417 0054 9BB2     		uxth	r3, r3
 418 0056 0133     		adds	r3, r3, #1
 419 0058 9BB2     		uxth	r3, r3
 420 005a 9BB2     		uxth	r3, r3
 421 005c 1380     		strh	r3, [r2]	@ movhi
 422              	.L12:
 238:..\..\Common\Minimal/BlockQ.c **** 				}
 239:..\..\Common\Minimal/BlockQ.c **** 
 240:..\..\Common\Minimal/BlockQ.c **** 				/* Increment the value we expect to remove from the queue next time
 241:..\..\Common\Minimal/BlockQ.c **** 				round. */
 242:..\..\Common\Minimal/BlockQ.c **** 				++usExpectedValue;
 423              		.loc 1 242 0
 424 005e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 425 0060 0133     		adds	r3, r3, #1
 426 0062 FB82     		strh	r3, [r7, #22]	@ movhi
 427              	.L10:
 243:..\..\Common\Minimal/BlockQ.c **** 			}
 244:..\..\Common\Minimal/BlockQ.c **** 
 245:..\..\Common\Minimal/BlockQ.c **** 			#if configUSE_PREEMPTION == 0
 246:..\..\Common\Minimal/BlockQ.c **** 			{
 247:..\..\Common\Minimal/BlockQ.c **** 				if( pxQueueParameters->xBlockTime == 0 )
 248:..\..\Common\Minimal/BlockQ.c **** 				{
 249:..\..\Common\Minimal/BlockQ.c **** 					taskYIELD();
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 13


 250:..\..\Common\Minimal/BlockQ.c **** 				}
 251:..\..\Common\Minimal/BlockQ.c **** 			}
 252:..\..\Common\Minimal/BlockQ.c **** 			#endif
 253:..\..\Common\Minimal/BlockQ.c **** 		}
 254:..\..\Common\Minimal/BlockQ.c **** 	}
 428              		.loc 1 254 0
 429 0064 D6E7     		b	.L13
 430              		.cfi_endproc
 431              	.LFE70:
 432              		.size	vBlockingQueueConsumer, .-vBlockingQueueConsumer
 433 0066 00BF     		.section	.text.xAreBlockingQueuesStillRunning,"ax",%progbits
 434              		.align	2
 435              		.global	xAreBlockingQueuesStillRunning
 436              		.thumb
 437              		.thumb_func
 438              		.type	xAreBlockingQueuesStillRunning, %function
 439              	xAreBlockingQueuesStillRunning:
 440              	.LFB71:
 255:..\..\Common\Minimal/BlockQ.c **** }
 256:..\..\Common\Minimal/BlockQ.c **** /*-----------------------------------------------------------*/
 257:..\..\Common\Minimal/BlockQ.c **** 
 258:..\..\Common\Minimal/BlockQ.c **** /* This is called to check that all the created tasks are still running. */
 259:..\..\Common\Minimal/BlockQ.c **** BaseType_t xAreBlockingQueuesStillRunning( void )
 260:..\..\Common\Minimal/BlockQ.c **** {
 441              		.loc 1 260 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 8
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 83B0     		sub	sp, sp, #12
 450              		.cfi_def_cfa_offset 16
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 261:..\..\Common\Minimal/BlockQ.c **** static short sLastBlockingConsumerCount[ blckqNUM_TASK_SETS ] = { ( uint16_t ) 0, ( uint16_t ) 0, (
 262:..\..\Common\Minimal/BlockQ.c **** static short sLastBlockingProducerCount[ blckqNUM_TASK_SETS ] = { ( uint16_t ) 0, ( uint16_t ) 0, (
 263:..\..\Common\Minimal/BlockQ.c **** BaseType_t xReturn = pdPASS, xTasks;
 453              		.loc 1 263 0
 454 0006 0123     		movs	r3, #1
 455 0008 7B60     		str	r3, [r7, #4]
 264:..\..\Common\Minimal/BlockQ.c **** 
 265:..\..\Common\Minimal/BlockQ.c **** 	/* Not too worried about mutual exclusion on these variables as they are 16
 266:..\..\Common\Minimal/BlockQ.c **** 	bits and we are only reading them. We also only care to see if they have
 267:..\..\Common\Minimal/BlockQ.c **** 	changed or not.
 268:..\..\Common\Minimal/BlockQ.c **** 
 269:..\..\Common\Minimal/BlockQ.c **** 	Loop through each check variable to and return pdFALSE if any are found not
 270:..\..\Common\Minimal/BlockQ.c **** 	to have changed since the last call. */
 271:..\..\Common\Minimal/BlockQ.c **** 
 272:..\..\Common\Minimal/BlockQ.c **** 	for( xTasks = 0; xTasks < blckqNUM_TASK_SETS; xTasks++ )
 456              		.loc 1 272 0
 457 000a 0023     		movs	r3, #0
 458 000c 3B60     		str	r3, [r7]
 459 000e 32E0     		b	.L15
 460              	.L18:
 273:..\..\Common\Minimal/BlockQ.c **** 	{
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 14


 274:..\..\Common\Minimal/BlockQ.c **** 		if( sBlockingConsumerCount[ xTasks ] == sLastBlockingConsumerCount[ xTasks ]  )
 461              		.loc 1 274 0
 462 0010 1E4A     		ldr	r2, .L20
 463 0012 3B68     		ldr	r3, [r7]
 464 0014 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 465 0018 99B2     		uxth	r1, r3
 466 001a 1D4A     		ldr	r2, .L20+4
 467 001c 3B68     		ldr	r3, [r7]
 468 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 469 0022 0AB2     		sxth	r2, r1
 470 0024 1BB2     		sxth	r3, r3
 471 0026 9A42     		cmp	r2, r3
 472 0028 01D1     		bne	.L16
 275:..\..\Common\Minimal/BlockQ.c **** 		{
 276:..\..\Common\Minimal/BlockQ.c **** 			xReturn = pdFALSE;
 473              		.loc 1 276 0
 474 002a 0023     		movs	r3, #0
 475 002c 7B60     		str	r3, [r7, #4]
 476              	.L16:
 277:..\..\Common\Minimal/BlockQ.c **** 		}
 278:..\..\Common\Minimal/BlockQ.c **** 		sLastBlockingConsumerCount[ xTasks ] = sBlockingConsumerCount[ xTasks ];
 477              		.loc 1 278 0
 478 002e 174A     		ldr	r2, .L20
 479 0030 3B68     		ldr	r3, [r7]
 480 0032 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 481 0036 99B2     		uxth	r1, r3
 482 0038 154A     		ldr	r2, .L20+4
 483 003a 3B68     		ldr	r3, [r7]
 484 003c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 279:..\..\Common\Minimal/BlockQ.c **** 
 280:..\..\Common\Minimal/BlockQ.c **** 
 281:..\..\Common\Minimal/BlockQ.c **** 		if( sBlockingProducerCount[ xTasks ] == sLastBlockingProducerCount[ xTasks ]  )
 485              		.loc 1 281 0
 486 0040 144A     		ldr	r2, .L20+8
 487 0042 3B68     		ldr	r3, [r7]
 488 0044 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 489 0048 99B2     		uxth	r1, r3
 490 004a 134A     		ldr	r2, .L20+12
 491 004c 3B68     		ldr	r3, [r7]
 492 004e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 493 0052 0AB2     		sxth	r2, r1
 494 0054 1BB2     		sxth	r3, r3
 495 0056 9A42     		cmp	r2, r3
 496 0058 01D1     		bne	.L17
 282:..\..\Common\Minimal/BlockQ.c **** 		{
 283:..\..\Common\Minimal/BlockQ.c **** 			xReturn = pdFALSE;
 497              		.loc 1 283 0
 498 005a 0023     		movs	r3, #0
 499 005c 7B60     		str	r3, [r7, #4]
 500              	.L17:
 284:..\..\Common\Minimal/BlockQ.c **** 		}
 285:..\..\Common\Minimal/BlockQ.c **** 		sLastBlockingProducerCount[ xTasks ] = sBlockingProducerCount[ xTasks ];
 501              		.loc 1 285 0 discriminator 2
 502 005e 0D4A     		ldr	r2, .L20+8
 503 0060 3B68     		ldr	r3, [r7]
 504 0062 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 505 0066 99B2     		uxth	r1, r3
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 15


 506 0068 0B4A     		ldr	r2, .L20+12
 507 006a 3B68     		ldr	r3, [r7]
 508 006c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 272:..\..\Common\Minimal/BlockQ.c **** 	{
 509              		.loc 1 272 0 discriminator 2
 510 0070 3B68     		ldr	r3, [r7]
 511 0072 0133     		adds	r3, r3, #1
 512 0074 3B60     		str	r3, [r7]
 513              	.L15:
 272:..\..\Common\Minimal/BlockQ.c **** 	{
 514              		.loc 1 272 0 is_stmt 0 discriminator 1
 515 0076 3B68     		ldr	r3, [r7]
 516 0078 022B     		cmp	r3, #2
 517 007a C9DD     		ble	.L18
 286:..\..\Common\Minimal/BlockQ.c **** 	}
 287:..\..\Common\Minimal/BlockQ.c **** 
 288:..\..\Common\Minimal/BlockQ.c **** 	return xReturn;
 518              		.loc 1 288 0 is_stmt 1
 519 007c 7B68     		ldr	r3, [r7, #4]
 289:..\..\Common\Minimal/BlockQ.c **** }
 520              		.loc 1 289 0
 521 007e 1846     		mov	r0, r3
 522 0080 0C37     		adds	r7, r7, #12
 523              		.cfi_def_cfa_offset 4
 524 0082 BD46     		mov	sp, r7
 525              		.cfi_def_cfa_register 13
 526              		@ sp needed
 527 0084 5DF8047B 		ldr	r7, [sp], #4
 528              		.cfi_restore 7
 529              		.cfi_def_cfa_offset 0
 530 0088 7047     		bx	lr
 531              	.L21:
 532 008a 00BF     		.align	2
 533              	.L20:
 534 008c 00000000 		.word	sBlockingConsumerCount
 535 0090 10000000 		.word	sLastBlockingConsumerCount.6807
 536 0094 08000000 		.word	sBlockingProducerCount
 537 0098 18000000 		.word	sLastBlockingProducerCount.6808
 538              		.cfi_endproc
 539              	.LFE71:
 540              		.size	xAreBlockingQueuesStillRunning, .-xAreBlockingQueuesStillRunning
 541              		.bss
 542 000e 0000     		.align	2
 543              	sLastBlockingConsumerCount.6807:
 544 0010 00000000 		.space	6
 544      0000
 545 0016 0000     		.align	2
 546              	sLastBlockingProducerCount.6808:
 547 0018 00000000 		.space	6
 547      0000
 548 001e 0000     		.text
 549              	.Letext0:
 550              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 551              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 552              		.file 4 "../../../Source/portable/GCC/ARM_CM3/portmacro.h"
 553              		.file 5 "../../../Source/include/queue.h"
 554              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 16


 555              		.section	.debug_info,"",%progbits
 556              	.Ldebug_info0:
 557 0000 65030000 		.4byte	0x365
 558 0004 0400     		.2byte	0x4
 559 0006 00000000 		.4byte	.Ldebug_abbrev0
 560 000a 04       		.byte	0x4
 561 000b 01       		.uleb128 0x1
 562 000c 6F000000 		.4byte	.LASF53
 563 0010 01       		.byte	0x1
 564 0011 C7010000 		.4byte	.LASF54
 565 0015 E6020000 		.4byte	.LASF55
 566 0019 00000000 		.4byte	.Ldebug_ranges0+0
 567 001d 00000000 		.4byte	0
 568 0021 00000000 		.4byte	.Ldebug_line0
 569 0025 02       		.uleb128 0x2
 570 0026 04       		.byte	0x4
 571 0027 07       		.byte	0x7
 572 0028 BA020000 		.4byte	.LASF0
 573 002c 03       		.uleb128 0x3
 574 002d 04       		.byte	0x4
 575 002e 05       		.byte	0x5
 576 002f 696E7400 		.ascii	"int\000"
 577 0033 02       		.uleb128 0x2
 578 0034 01       		.byte	0x1
 579 0035 06       		.byte	0x6
 580 0036 45040000 		.4byte	.LASF1
 581 003a 04       		.uleb128 0x4
 582 003b 29000000 		.4byte	.LASF4
 583 003f 02       		.byte	0x2
 584 0040 1D       		.byte	0x1d
 585 0041 45000000 		.4byte	0x45
 586 0045 02       		.uleb128 0x2
 587 0046 01       		.byte	0x1
 588 0047 08       		.byte	0x8
 589 0048 F8010000 		.4byte	.LASF2
 590 004c 02       		.uleb128 0x2
 591 004d 02       		.byte	0x2
 592 004e 05       		.byte	0x5
 593 004f E0030000 		.4byte	.LASF3
 594 0053 04       		.uleb128 0x4
 595 0054 06020000 		.4byte	.LASF5
 596 0058 02       		.byte	0x2
 597 0059 2B       		.byte	0x2b
 598 005a 5E000000 		.4byte	0x5e
 599 005e 02       		.uleb128 0x2
 600 005f 02       		.byte	0x2
 601 0060 07       		.byte	0x7
 602 0061 99010000 		.4byte	.LASF6
 603 0065 04       		.uleb128 0x4
 604 0066 55000000 		.4byte	.LASF7
 605 006a 02       		.byte	0x2
 606 006b 3F       		.byte	0x3f
 607 006c 70000000 		.4byte	0x70
 608 0070 02       		.uleb128 0x2
 609 0071 04       		.byte	0x4
 610 0072 05       		.byte	0x5
 611 0073 66000000 		.4byte	.LASF8
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 17


 612 0077 04       		.uleb128 0x4
 613 0078 18020000 		.4byte	.LASF9
 614 007c 02       		.byte	0x2
 615 007d 41       		.byte	0x41
 616 007e 82000000 		.4byte	0x82
 617 0082 02       		.uleb128 0x2
 618 0083 04       		.byte	0x4
 619 0084 07       		.byte	0x7
 620 0085 87010000 		.4byte	.LASF10
 621 0089 02       		.uleb128 0x2
 622 008a 08       		.byte	0x8
 623 008b 05       		.byte	0x5
 624 008c 8F030000 		.4byte	.LASF11
 625 0090 02       		.uleb128 0x2
 626 0091 08       		.byte	0x8
 627 0092 07       		.byte	0x7
 628 0093 C7020000 		.4byte	.LASF12
 629 0097 02       		.uleb128 0x2
 630 0098 04       		.byte	0x4
 631 0099 07       		.byte	0x7
 632 009a 86030000 		.4byte	.LASF13
 633 009e 05       		.uleb128 0x5
 634 009f 04       		.byte	0x4
 635 00a0 02       		.uleb128 0x2
 636 00a1 01       		.byte	0x1
 637 00a2 08       		.byte	0x8
 638 00a3 28040000 		.4byte	.LASF14
 639 00a7 04       		.uleb128 0x4
 640 00a8 DE020000 		.4byte	.LASF15
 641 00ac 03       		.byte	0x3
 642 00ad 15       		.byte	0x15
 643 00ae 3A000000 		.4byte	0x3a
 644 00b2 04       		.uleb128 0x4
 645 00b3 EA030000 		.4byte	.LASF16
 646 00b7 03       		.byte	0x3
 647 00b8 21       		.byte	0x21
 648 00b9 53000000 		.4byte	0x53
 649 00bd 04       		.uleb128 0x4
 650 00be D8030000 		.4byte	.LASF17
 651 00c2 03       		.byte	0x3
 652 00c3 2C       		.byte	0x2c
 653 00c4 65000000 		.4byte	0x65
 654 00c8 04       		.uleb128 0x4
 655 00c9 12040000 		.4byte	.LASF18
 656 00cd 03       		.byte	0x3
 657 00ce 2D       		.byte	0x2d
 658 00cf 77000000 		.4byte	0x77
 659 00d3 02       		.uleb128 0x2
 660 00d4 04       		.byte	0x4
 661 00d5 04       		.byte	0x4
 662 00d6 67010000 		.4byte	.LASF19
 663 00da 02       		.uleb128 0x2
 664 00db 08       		.byte	0x8
 665 00dc 04       		.byte	0x4
 666 00dd 11020000 		.4byte	.LASF20
 667 00e1 04       		.uleb128 0x4
 668 00e2 72040000 		.4byte	.LASF21
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 18


 669 00e6 04       		.byte	0x4
 670 00e7 38       		.byte	0x38
 671 00e8 70000000 		.4byte	0x70
 672 00ec 04       		.uleb128 0x4
 673 00ed 74010000 		.4byte	.LASF22
 674 00f1 04       		.byte	0x4
 675 00f2 39       		.byte	0x39
 676 00f3 82000000 		.4byte	0x82
 677 00f7 04       		.uleb128 0x4
 678 00f8 4A000000 		.4byte	.LASF23
 679 00fc 04       		.byte	0x4
 680 00fd 3F       		.byte	0x3f
 681 00fe C8000000 		.4byte	0xc8
 682 0102 04       		.uleb128 0x4
 683 0103 FD000000 		.4byte	.LASF24
 684 0107 05       		.byte	0x5
 685 0108 2E       		.byte	0x2e
 686 0109 9E000000 		.4byte	0x9e
 687 010d 06       		.uleb128 0x6
 688 010e 23020000 		.4byte	.LASF56
 689 0112 0C       		.byte	0xc
 690 0113 01       		.byte	0x1
 691 0114 46       		.byte	0x46
 692 0115 3E010000 		.4byte	0x13e
 693 0119 07       		.uleb128 0x7
 694 011a 5F000000 		.4byte	.LASF25
 695 011e 01       		.byte	0x1
 696 011f 48       		.byte	0x48
 697 0120 02010000 		.4byte	0x102
 698 0124 00       		.byte	0
 699 0125 07       		.uleb128 0x7
 700 0126 7B030000 		.4byte	.LASF26
 701 012a 01       		.byte	0x1
 702 012b 49       		.byte	0x49
 703 012c F7000000 		.4byte	0xf7
 704 0130 04       		.byte	0x4
 705 0131 07       		.uleb128 0x7
 706 0132 2D040000 		.4byte	.LASF27
 707 0136 01       		.byte	0x1
 708 0137 4A       		.byte	0x4a
 709 0138 3E010000 		.4byte	0x13e
 710 013c 08       		.byte	0x8
 711 013d 00       		.byte	0
 712 013e 08       		.uleb128 0x8
 713 013f 04       		.byte	0x4
 714 0140 44010000 		.4byte	0x144
 715 0144 09       		.uleb128 0x9
 716 0145 4C000000 		.4byte	0x4c
 717 0149 04       		.uleb128 0x4
 718 014a 59040000 		.4byte	.LASF28
 719 014e 01       		.byte	0x1
 720 014f 4B       		.byte	0x4b
 721 0150 0D010000 		.4byte	0x10d
 722 0154 0A       		.uleb128 0xa
 723 0155 10000000 		.4byte	.LASF57
 724 0159 01       		.byte	0x1
 725 015a 5F       		.byte	0x5f
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 19


 726 015b 00000000 		.4byte	.LFB68
 727 015f 90010000 		.4byte	.LFE68-.LFB68
 728 0163 01       		.uleb128 0x1
 729 0164 9C       		.byte	0x9c
 730 0165 04020000 		.4byte	0x204
 731 0169 0B       		.uleb128 0xb
 732 016a AF020000 		.4byte	.LASF38
 733 016e 01       		.byte	0x1
 734 016f 5F       		.byte	0x5f
 735 0170 EC000000 		.4byte	0xec
 736 0174 02       		.uleb128 0x2
 737 0175 91       		.byte	0x91
 738 0176 4C       		.sleb128 -52
 739 0177 0C       		.uleb128 0xc
 740 0178 3D020000 		.4byte	.LASF29
 741 017c 01       		.byte	0x1
 742 017d 61       		.byte	0x61
 743 017e 04020000 		.4byte	0x204
 744 0182 02       		.uleb128 0x2
 745 0183 91       		.byte	0x91
 746 0184 64       		.sleb128 -28
 747 0185 0C       		.uleb128 0xc
 748 0186 50020000 		.4byte	.LASF30
 749 018a 01       		.byte	0x1
 750 018b 61       		.byte	0x61
 751 018c 04020000 		.4byte	0x204
 752 0190 02       		.uleb128 0x2
 753 0191 91       		.byte	0x91
 754 0192 60       		.sleb128 -32
 755 0193 0C       		.uleb128 0xc
 756 0194 63020000 		.4byte	.LASF31
 757 0198 01       		.byte	0x1
 758 0199 62       		.byte	0x62
 759 019a 04020000 		.4byte	0x204
 760 019e 02       		.uleb128 0x2
 761 019f 91       		.byte	0x91
 762 01a0 5C       		.sleb128 -36
 763 01a1 0C       		.uleb128 0xc
 764 01a2 76020000 		.4byte	.LASF32
 765 01a6 01       		.byte	0x1
 766 01a7 62       		.byte	0x62
 767 01a8 04020000 		.4byte	0x204
 768 01ac 02       		.uleb128 0x2
 769 01ad 91       		.byte	0x91
 770 01ae 58       		.sleb128 -40
 771 01af 0C       		.uleb128 0xc
 772 01b0 89020000 		.4byte	.LASF33
 773 01b4 01       		.byte	0x1
 774 01b5 63       		.byte	0x63
 775 01b6 04020000 		.4byte	0x204
 776 01ba 02       		.uleb128 0x2
 777 01bb 91       		.byte	0x91
 778 01bc 54       		.sleb128 -44
 779 01bd 0C       		.uleb128 0xc
 780 01be 9C020000 		.4byte	.LASF34
 781 01c2 01       		.byte	0x1
 782 01c3 63       		.byte	0x63
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 20


 783 01c4 04020000 		.4byte	0x204
 784 01c8 02       		.uleb128 0x2
 785 01c9 91       		.byte	0x91
 786 01ca 50       		.sleb128 -48
 787 01cb 0C       		.uleb128 0xc
 788 01cc F3030000 		.4byte	.LASF35
 789 01d0 01       		.byte	0x1
 790 01d1 64       		.byte	0x64
 791 01d2 0A020000 		.4byte	0x20a
 792 01d6 02       		.uleb128 0x2
 793 01d7 91       		.byte	0x91
 794 01d8 74       		.sleb128 -12
 795 01d9 0C       		.uleb128 0xc
 796 01da 1B040000 		.4byte	.LASF36
 797 01de 01       		.byte	0x1
 798 01df 64       		.byte	0x64
 799 01e0 0A020000 		.4byte	0x20a
 800 01e4 02       		.uleb128 0x2
 801 01e5 91       		.byte	0x91
 802 01e6 70       		.sleb128 -16
 803 01e7 0C       		.uleb128 0xc
 804 01e8 7B030000 		.4byte	.LASF26
 805 01ec 01       		.byte	0x1
 806 01ed 65       		.byte	0x65
 807 01ee 0F020000 		.4byte	0x20f
 808 01f2 02       		.uleb128 0x2
 809 01f3 91       		.byte	0x91
 810 01f4 6C       		.sleb128 -20
 811 01f5 0C       		.uleb128 0xc
 812 01f6 22010000 		.4byte	.LASF37
 813 01fa 01       		.byte	0x1
 814 01fb 66       		.byte	0x66
 815 01fc 0F020000 		.4byte	0x20f
 816 0200 02       		.uleb128 0x2
 817 0201 91       		.byte	0x91
 818 0202 68       		.sleb128 -24
 819 0203 00       		.byte	0
 820 0204 08       		.uleb128 0x8
 821 0205 04       		.byte	0x4
 822 0206 49010000 		.4byte	0x149
 823 020a 0D       		.uleb128 0xd
 824 020b EC000000 		.4byte	0xec
 825 020f 0D       		.uleb128 0xd
 826 0210 F7000000 		.4byte	0xf7
 827 0214 0E       		.uleb128 0xe
 828 0215 B4030000 		.4byte	.LASF43
 829 0219 01       		.byte	0x1
 830 021a B1       		.byte	0xb1
 831 021b 00000000 		.4byte	.LFB69
 832 021f 5E000000 		.4byte	.LFE69-.LFB69
 833 0223 01       		.uleb128 0x1
 834 0224 9C       		.byte	0x9c
 835 0225 62020000 		.4byte	0x262
 836 0229 0B       		.uleb128 0xb
 837 022a CB030000 		.4byte	.LASF39
 838 022e 01       		.byte	0x1
 839 022f B1       		.byte	0xb1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 21


 840 0230 9E000000 		.4byte	0x9e
 841 0234 02       		.uleb128 0x2
 842 0235 91       		.byte	0x91
 843 0236 64       		.sleb128 -28
 844 0237 0C       		.uleb128 0xc
 845 0238 51040000 		.4byte	.LASF40
 846 023c 01       		.byte	0x1
 847 023d B3       		.byte	0xb3
 848 023e B2000000 		.4byte	0xb2
 849 0242 02       		.uleb128 0x2
 850 0243 91       		.byte	0x91
 851 0244 6E       		.sleb128 -18
 852 0245 0C       		.uleb128 0xc
 853 0246 00040000 		.4byte	.LASF41
 854 024a 01       		.byte	0x1
 855 024b B4       		.byte	0xb4
 856 024c 04020000 		.4byte	0x204
 857 0250 02       		.uleb128 0x2
 858 0251 91       		.byte	0x91
 859 0252 70       		.sleb128 -16
 860 0253 0C       		.uleb128 0xc
 861 0254 E5010000 		.4byte	.LASF42
 862 0258 01       		.byte	0x1
 863 0259 B5       		.byte	0xb5
 864 025a 4C000000 		.4byte	0x4c
 865 025e 02       		.uleb128 0x2
 866 025f 91       		.byte	0x91
 867 0260 76       		.sleb128 -10
 868 0261 00       		.byte	0
 869 0262 0E       		.uleb128 0xe
 870 0263 9D030000 		.4byte	.LASF44
 871 0267 01       		.byte	0x1
 872 0268 D4       		.byte	0xd4
 873 0269 00000000 		.4byte	.LFB70
 874 026d 66000000 		.4byte	.LFE70-.LFB70
 875 0271 01       		.uleb128 0x1
 876 0272 9C       		.byte	0x9c
 877 0273 BE020000 		.4byte	0x2be
 878 0277 0B       		.uleb128 0xb
 879 0278 CB030000 		.4byte	.LASF39
 880 027c 01       		.byte	0x1
 881 027d D4       		.byte	0xd4
 882 027e 9E000000 		.4byte	0x9e
 883 0282 02       		.uleb128 0x2
 884 0283 91       		.byte	0x91
 885 0284 64       		.sleb128 -28
 886 0285 0C       		.uleb128 0xc
 887 0286 80010000 		.4byte	.LASF45
 888 028a 01       		.byte	0x1
 889 028b D6       		.byte	0xd6
 890 028c B2000000 		.4byte	0xb2
 891 0290 02       		.uleb128 0x2
 892 0291 91       		.byte	0x91
 893 0292 6E       		.sleb128 -18
 894 0293 0C       		.uleb128 0xc
 895 0294 00000000 		.4byte	.LASF46
 896 0298 01       		.byte	0x1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 22


 897 0299 D6       		.byte	0xd6
 898 029a B2000000 		.4byte	0xb2
 899 029e 02       		.uleb128 0x2
 900 029f 91       		.byte	0x91
 901 02a0 76       		.sleb128 -10
 902 02a1 0C       		.uleb128 0xc
 903 02a2 00040000 		.4byte	.LASF41
 904 02a6 01       		.byte	0x1
 905 02a7 D7       		.byte	0xd7
 906 02a8 04020000 		.4byte	0x204
 907 02ac 02       		.uleb128 0x2
 908 02ad 91       		.byte	0x91
 909 02ae 70       		.sleb128 -16
 910 02af 0C       		.uleb128 0xc
 911 02b0 E5010000 		.4byte	.LASF42
 912 02b4 01       		.byte	0x1
 913 02b5 D8       		.byte	0xd8
 914 02b6 4C000000 		.4byte	0x4c
 915 02ba 02       		.uleb128 0x2
 916 02bb 91       		.byte	0x91
 917 02bc 74       		.sleb128 -12
 918 02bd 00       		.byte	0
 919 02be 0F       		.uleb128 0xf
 920 02bf 48010000 		.4byte	.LASF58
 921 02c3 01       		.byte	0x1
 922 02c4 0301     		.2byte	0x103
 923 02c6 E1000000 		.4byte	0xe1
 924 02ca 00000000 		.4byte	.LFB71
 925 02ce 9C000000 		.4byte	.LFE71-.LFB71
 926 02d2 01       		.uleb128 0x1
 927 02d3 9C       		.byte	0x9c
 928 02d4 1B030000 		.4byte	0x31b
 929 02d8 10       		.uleb128 0x10
 930 02d9 AC010000 		.4byte	.LASF47
 931 02dd 01       		.byte	0x1
 932 02de 0501     		.2byte	0x105
 933 02e0 1B030000 		.4byte	0x31b
 934 02e4 05       		.uleb128 0x5
 935 02e5 03       		.byte	0x3
 936 02e6 10000000 		.4byte	sLastBlockingConsumerCount.6807
 937 02ea 10       		.uleb128 0x10
 938 02eb 2D010000 		.4byte	.LASF48
 939 02ef 01       		.byte	0x1
 940 02f0 0601     		.2byte	0x106
 941 02f2 1B030000 		.4byte	0x31b
 942 02f6 05       		.uleb128 0x5
 943 02f7 03       		.byte	0x3
 944 02f8 18000000 		.4byte	sLastBlockingProducerCount.6808
 945 02fc 10       		.uleb128 0x10
 946 02fd 3D040000 		.4byte	.LASF49
 947 0301 01       		.byte	0x1
 948 0302 0701     		.2byte	0x107
 949 0304 E1000000 		.4byte	0xe1
 950 0308 02       		.uleb128 0x2
 951 0309 91       		.byte	0x91
 952 030a 74       		.sleb128 -12
 953 030b 10       		.uleb128 0x10
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 23


 954 030c 6D010000 		.4byte	.LASF50
 955 0310 01       		.byte	0x1
 956 0311 0701     		.2byte	0x107
 957 0313 E1000000 		.4byte	0xe1
 958 0317 02       		.uleb128 0x2
 959 0318 91       		.byte	0x91
 960 0319 70       		.sleb128 -16
 961 031a 00       		.byte	0
 962 031b 11       		.uleb128 0x11
 963 031c 4C000000 		.4byte	0x4c
 964 0320 2B030000 		.4byte	0x32b
 965 0324 12       		.uleb128 0x12
 966 0325 97000000 		.4byte	0x97
 967 0329 02       		.byte	0x2
 968 032a 00       		.byte	0
 969 032b 0C       		.uleb128 0xc
 970 032c 0B010000 		.4byte	.LASF51
 971 0330 01       		.byte	0x1
 972 0331 57       		.byte	0x57
 973 0332 3C030000 		.4byte	0x33c
 974 0336 05       		.uleb128 0x5
 975 0337 03       		.byte	0x3
 976 0338 00000000 		.4byte	sBlockingConsumerCount
 977 033c 09       		.uleb128 0x9
 978 033d 1B030000 		.4byte	0x31b
 979 0341 0C       		.uleb128 0xc
 980 0342 33000000 		.4byte	.LASF52
 981 0346 01       		.byte	0x1
 982 0347 5B       		.byte	0x5b
 983 0348 52030000 		.4byte	0x352
 984 034c 05       		.uleb128 0x5
 985 034d 03       		.byte	0x3
 986 034e 08000000 		.4byte	sBlockingProducerCount
 987 0352 09       		.uleb128 0x9
 988 0353 1B030000 		.4byte	0x31b
 989 0357 13       		.uleb128 0x13
 990 0358 6E030000 		.4byte	.LASF59
 991 035c 06       		.byte	0x6
 992 035d 9606     		.2byte	0x696
 993 035f 63030000 		.4byte	0x363
 994 0363 09       		.uleb128 0x9
 995 0364 BD000000 		.4byte	0xbd
 996 0368 00       		.byte	0
 997              		.section	.debug_abbrev,"",%progbits
 998              	.Ldebug_abbrev0:
 999 0000 01       		.uleb128 0x1
 1000 0001 11       		.uleb128 0x11
 1001 0002 01       		.byte	0x1
 1002 0003 25       		.uleb128 0x25
 1003 0004 0E       		.uleb128 0xe
 1004 0005 13       		.uleb128 0x13
 1005 0006 0B       		.uleb128 0xb
 1006 0007 03       		.uleb128 0x3
 1007 0008 0E       		.uleb128 0xe
 1008 0009 1B       		.uleb128 0x1b
 1009 000a 0E       		.uleb128 0xe
 1010 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 24


 1011 000c 17       		.uleb128 0x17
 1012 000d 11       		.uleb128 0x11
 1013 000e 01       		.uleb128 0x1
 1014 000f 10       		.uleb128 0x10
 1015 0010 17       		.uleb128 0x17
 1016 0011 00       		.byte	0
 1017 0012 00       		.byte	0
 1018 0013 02       		.uleb128 0x2
 1019 0014 24       		.uleb128 0x24
 1020 0015 00       		.byte	0
 1021 0016 0B       		.uleb128 0xb
 1022 0017 0B       		.uleb128 0xb
 1023 0018 3E       		.uleb128 0x3e
 1024 0019 0B       		.uleb128 0xb
 1025 001a 03       		.uleb128 0x3
 1026 001b 0E       		.uleb128 0xe
 1027 001c 00       		.byte	0
 1028 001d 00       		.byte	0
 1029 001e 03       		.uleb128 0x3
 1030 001f 24       		.uleb128 0x24
 1031 0020 00       		.byte	0
 1032 0021 0B       		.uleb128 0xb
 1033 0022 0B       		.uleb128 0xb
 1034 0023 3E       		.uleb128 0x3e
 1035 0024 0B       		.uleb128 0xb
 1036 0025 03       		.uleb128 0x3
 1037 0026 08       		.uleb128 0x8
 1038 0027 00       		.byte	0
 1039 0028 00       		.byte	0
 1040 0029 04       		.uleb128 0x4
 1041 002a 16       		.uleb128 0x16
 1042 002b 00       		.byte	0
 1043 002c 03       		.uleb128 0x3
 1044 002d 0E       		.uleb128 0xe
 1045 002e 3A       		.uleb128 0x3a
 1046 002f 0B       		.uleb128 0xb
 1047 0030 3B       		.uleb128 0x3b
 1048 0031 0B       		.uleb128 0xb
 1049 0032 49       		.uleb128 0x49
 1050 0033 13       		.uleb128 0x13
 1051 0034 00       		.byte	0
 1052 0035 00       		.byte	0
 1053 0036 05       		.uleb128 0x5
 1054 0037 0F       		.uleb128 0xf
 1055 0038 00       		.byte	0
 1056 0039 0B       		.uleb128 0xb
 1057 003a 0B       		.uleb128 0xb
 1058 003b 00       		.byte	0
 1059 003c 00       		.byte	0
 1060 003d 06       		.uleb128 0x6
 1061 003e 13       		.uleb128 0x13
 1062 003f 01       		.byte	0x1
 1063 0040 03       		.uleb128 0x3
 1064 0041 0E       		.uleb128 0xe
 1065 0042 0B       		.uleb128 0xb
 1066 0043 0B       		.uleb128 0xb
 1067 0044 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 25


 1068 0045 0B       		.uleb128 0xb
 1069 0046 3B       		.uleb128 0x3b
 1070 0047 0B       		.uleb128 0xb
 1071 0048 01       		.uleb128 0x1
 1072 0049 13       		.uleb128 0x13
 1073 004a 00       		.byte	0
 1074 004b 00       		.byte	0
 1075 004c 07       		.uleb128 0x7
 1076 004d 0D       		.uleb128 0xd
 1077 004e 00       		.byte	0
 1078 004f 03       		.uleb128 0x3
 1079 0050 0E       		.uleb128 0xe
 1080 0051 3A       		.uleb128 0x3a
 1081 0052 0B       		.uleb128 0xb
 1082 0053 3B       		.uleb128 0x3b
 1083 0054 0B       		.uleb128 0xb
 1084 0055 49       		.uleb128 0x49
 1085 0056 13       		.uleb128 0x13
 1086 0057 38       		.uleb128 0x38
 1087 0058 0B       		.uleb128 0xb
 1088 0059 00       		.byte	0
 1089 005a 00       		.byte	0
 1090 005b 08       		.uleb128 0x8
 1091 005c 0F       		.uleb128 0xf
 1092 005d 00       		.byte	0
 1093 005e 0B       		.uleb128 0xb
 1094 005f 0B       		.uleb128 0xb
 1095 0060 49       		.uleb128 0x49
 1096 0061 13       		.uleb128 0x13
 1097 0062 00       		.byte	0
 1098 0063 00       		.byte	0
 1099 0064 09       		.uleb128 0x9
 1100 0065 35       		.uleb128 0x35
 1101 0066 00       		.byte	0
 1102 0067 49       		.uleb128 0x49
 1103 0068 13       		.uleb128 0x13
 1104 0069 00       		.byte	0
 1105 006a 00       		.byte	0
 1106 006b 0A       		.uleb128 0xa
 1107 006c 2E       		.uleb128 0x2e
 1108 006d 01       		.byte	0x1
 1109 006e 3F       		.uleb128 0x3f
 1110 006f 19       		.uleb128 0x19
 1111 0070 03       		.uleb128 0x3
 1112 0071 0E       		.uleb128 0xe
 1113 0072 3A       		.uleb128 0x3a
 1114 0073 0B       		.uleb128 0xb
 1115 0074 3B       		.uleb128 0x3b
 1116 0075 0B       		.uleb128 0xb
 1117 0076 27       		.uleb128 0x27
 1118 0077 19       		.uleb128 0x19
 1119 0078 11       		.uleb128 0x11
 1120 0079 01       		.uleb128 0x1
 1121 007a 12       		.uleb128 0x12
 1122 007b 06       		.uleb128 0x6
 1123 007c 40       		.uleb128 0x40
 1124 007d 18       		.uleb128 0x18
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 26


 1125 007e 9642     		.uleb128 0x2116
 1126 0080 19       		.uleb128 0x19
 1127 0081 01       		.uleb128 0x1
 1128 0082 13       		.uleb128 0x13
 1129 0083 00       		.byte	0
 1130 0084 00       		.byte	0
 1131 0085 0B       		.uleb128 0xb
 1132 0086 05       		.uleb128 0x5
 1133 0087 00       		.byte	0
 1134 0088 03       		.uleb128 0x3
 1135 0089 0E       		.uleb128 0xe
 1136 008a 3A       		.uleb128 0x3a
 1137 008b 0B       		.uleb128 0xb
 1138 008c 3B       		.uleb128 0x3b
 1139 008d 0B       		.uleb128 0xb
 1140 008e 49       		.uleb128 0x49
 1141 008f 13       		.uleb128 0x13
 1142 0090 02       		.uleb128 0x2
 1143 0091 18       		.uleb128 0x18
 1144 0092 00       		.byte	0
 1145 0093 00       		.byte	0
 1146 0094 0C       		.uleb128 0xc
 1147 0095 34       		.uleb128 0x34
 1148 0096 00       		.byte	0
 1149 0097 03       		.uleb128 0x3
 1150 0098 0E       		.uleb128 0xe
 1151 0099 3A       		.uleb128 0x3a
 1152 009a 0B       		.uleb128 0xb
 1153 009b 3B       		.uleb128 0x3b
 1154 009c 0B       		.uleb128 0xb
 1155 009d 49       		.uleb128 0x49
 1156 009e 13       		.uleb128 0x13
 1157 009f 02       		.uleb128 0x2
 1158 00a0 18       		.uleb128 0x18
 1159 00a1 00       		.byte	0
 1160 00a2 00       		.byte	0
 1161 00a3 0D       		.uleb128 0xd
 1162 00a4 26       		.uleb128 0x26
 1163 00a5 00       		.byte	0
 1164 00a6 49       		.uleb128 0x49
 1165 00a7 13       		.uleb128 0x13
 1166 00a8 00       		.byte	0
 1167 00a9 00       		.byte	0
 1168 00aa 0E       		.uleb128 0xe
 1169 00ab 2E       		.uleb128 0x2e
 1170 00ac 01       		.byte	0x1
 1171 00ad 03       		.uleb128 0x3
 1172 00ae 0E       		.uleb128 0xe
 1173 00af 3A       		.uleb128 0x3a
 1174 00b0 0B       		.uleb128 0xb
 1175 00b1 3B       		.uleb128 0x3b
 1176 00b2 0B       		.uleb128 0xb
 1177 00b3 27       		.uleb128 0x27
 1178 00b4 19       		.uleb128 0x19
 1179 00b5 11       		.uleb128 0x11
 1180 00b6 01       		.uleb128 0x1
 1181 00b7 12       		.uleb128 0x12
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 27


 1182 00b8 06       		.uleb128 0x6
 1183 00b9 40       		.uleb128 0x40
 1184 00ba 18       		.uleb128 0x18
 1185 00bb 9642     		.uleb128 0x2116
 1186 00bd 19       		.uleb128 0x19
 1187 00be 01       		.uleb128 0x1
 1188 00bf 13       		.uleb128 0x13
 1189 00c0 00       		.byte	0
 1190 00c1 00       		.byte	0
 1191 00c2 0F       		.uleb128 0xf
 1192 00c3 2E       		.uleb128 0x2e
 1193 00c4 01       		.byte	0x1
 1194 00c5 3F       		.uleb128 0x3f
 1195 00c6 19       		.uleb128 0x19
 1196 00c7 03       		.uleb128 0x3
 1197 00c8 0E       		.uleb128 0xe
 1198 00c9 3A       		.uleb128 0x3a
 1199 00ca 0B       		.uleb128 0xb
 1200 00cb 3B       		.uleb128 0x3b
 1201 00cc 05       		.uleb128 0x5
 1202 00cd 27       		.uleb128 0x27
 1203 00ce 19       		.uleb128 0x19
 1204 00cf 49       		.uleb128 0x49
 1205 00d0 13       		.uleb128 0x13
 1206 00d1 11       		.uleb128 0x11
 1207 00d2 01       		.uleb128 0x1
 1208 00d3 12       		.uleb128 0x12
 1209 00d4 06       		.uleb128 0x6
 1210 00d5 40       		.uleb128 0x40
 1211 00d6 18       		.uleb128 0x18
 1212 00d7 9742     		.uleb128 0x2117
 1213 00d9 19       		.uleb128 0x19
 1214 00da 01       		.uleb128 0x1
 1215 00db 13       		.uleb128 0x13
 1216 00dc 00       		.byte	0
 1217 00dd 00       		.byte	0
 1218 00de 10       		.uleb128 0x10
 1219 00df 34       		.uleb128 0x34
 1220 00e0 00       		.byte	0
 1221 00e1 03       		.uleb128 0x3
 1222 00e2 0E       		.uleb128 0xe
 1223 00e3 3A       		.uleb128 0x3a
 1224 00e4 0B       		.uleb128 0xb
 1225 00e5 3B       		.uleb128 0x3b
 1226 00e6 05       		.uleb128 0x5
 1227 00e7 49       		.uleb128 0x49
 1228 00e8 13       		.uleb128 0x13
 1229 00e9 02       		.uleb128 0x2
 1230 00ea 18       		.uleb128 0x18
 1231 00eb 00       		.byte	0
 1232 00ec 00       		.byte	0
 1233 00ed 11       		.uleb128 0x11
 1234 00ee 01       		.uleb128 0x1
 1235 00ef 01       		.byte	0x1
 1236 00f0 49       		.uleb128 0x49
 1237 00f1 13       		.uleb128 0x13
 1238 00f2 01       		.uleb128 0x1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 28


 1239 00f3 13       		.uleb128 0x13
 1240 00f4 00       		.byte	0
 1241 00f5 00       		.byte	0
 1242 00f6 12       		.uleb128 0x12
 1243 00f7 21       		.uleb128 0x21
 1244 00f8 00       		.byte	0
 1245 00f9 49       		.uleb128 0x49
 1246 00fa 13       		.uleb128 0x13
 1247 00fb 2F       		.uleb128 0x2f
 1248 00fc 0B       		.uleb128 0xb
 1249 00fd 00       		.byte	0
 1250 00fe 00       		.byte	0
 1251 00ff 13       		.uleb128 0x13
 1252 0100 34       		.uleb128 0x34
 1253 0101 00       		.byte	0
 1254 0102 03       		.uleb128 0x3
 1255 0103 0E       		.uleb128 0xe
 1256 0104 3A       		.uleb128 0x3a
 1257 0105 0B       		.uleb128 0xb
 1258 0106 3B       		.uleb128 0x3b
 1259 0107 05       		.uleb128 0x5
 1260 0108 49       		.uleb128 0x49
 1261 0109 13       		.uleb128 0x13
 1262 010a 3F       		.uleb128 0x3f
 1263 010b 19       		.uleb128 0x19
 1264 010c 3C       		.uleb128 0x3c
 1265 010d 19       		.uleb128 0x19
 1266 010e 00       		.byte	0
 1267 010f 00       		.byte	0
 1268 0110 00       		.byte	0
 1269              		.section	.debug_aranges,"",%progbits
 1270 0000 34000000 		.4byte	0x34
 1271 0004 0200     		.2byte	0x2
 1272 0006 00000000 		.4byte	.Ldebug_info0
 1273 000a 04       		.byte	0x4
 1274 000b 00       		.byte	0
 1275 000c 0000     		.2byte	0
 1276 000e 0000     		.2byte	0
 1277 0010 00000000 		.4byte	.LFB68
 1278 0014 90010000 		.4byte	.LFE68-.LFB68
 1279 0018 00000000 		.4byte	.LFB69
 1280 001c 5E000000 		.4byte	.LFE69-.LFB69
 1281 0020 00000000 		.4byte	.LFB70
 1282 0024 66000000 		.4byte	.LFE70-.LFB70
 1283 0028 00000000 		.4byte	.LFB71
 1284 002c 9C000000 		.4byte	.LFE71-.LFB71
 1285 0030 00000000 		.4byte	0
 1286 0034 00000000 		.4byte	0
 1287              		.section	.debug_ranges,"",%progbits
 1288              	.Ldebug_ranges0:
 1289 0000 00000000 		.4byte	.LFB68
 1290 0004 90010000 		.4byte	.LFE68
 1291 0008 00000000 		.4byte	.LFB69
 1292 000c 5E000000 		.4byte	.LFE69
 1293 0010 00000000 		.4byte	.LFB70
 1294 0014 66000000 		.4byte	.LFE70
 1295 0018 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 29


 1296 001c 9C000000 		.4byte	.LFE71
 1297 0020 00000000 		.4byte	0
 1298 0024 00000000 		.4byte	0
 1299              		.section	.debug_line,"",%progbits
 1300              	.Ldebug_line0:
 1301 0000 46020000 		.section	.debug_str,"MS",%progbits,1
 1301      0200A801 
 1301      00000201 
 1301      FB0E0D00 
 1301      01010101 
 1302              	.LASF46:
 1303 0000 75734578 		.ascii	"usExpectedValue\000"
 1303      70656374 
 1303      65645661 
 1303      6C756500 
 1304              	.LASF57:
 1305 0010 76537461 		.ascii	"vStartBlockingQueueTasks\000"
 1305      7274426C 
 1305      6F636B69 
 1305      6E675175 
 1305      65756554 
 1306              	.LASF4:
 1307 0029 5F5F7569 		.ascii	"__uint8_t\000"
 1307      6E74385F 
 1307      7400
 1308              	.LASF52:
 1309 0033 73426C6F 		.ascii	"sBlockingProducerCount\000"
 1309      636B696E 
 1309      6750726F 
 1309      64756365 
 1309      72436F75 
 1310              	.LASF23:
 1311 004a 5469636B 		.ascii	"TickType_t\000"
 1311      54797065 
 1311      5F7400
 1312              	.LASF7:
 1313 0055 5F5F696E 		.ascii	"__int32_t\000"
 1313      7433325F 
 1313      7400
 1314              	.LASF25:
 1315 005f 78517565 		.ascii	"xQueue\000"
 1315      756500
 1316              	.LASF8:
 1317 0066 6C6F6E67 		.ascii	"long int\000"
 1317      20696E74 
 1317      00
 1318              	.LASF53:
 1319 006f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1319      4320342E 
 1319      392E3320 
 1319      32303135 
 1319      30333033 
 1320 00a2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1320      20726576 
 1320      6973696F 
 1320      6E203232 
 1320      31323230 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 30


 1321 00d5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1321      66756E63 
 1321      74696F6E 
 1321      2D736563 
 1321      74696F6E 
 1322              	.LASF24:
 1323 00fd 51756575 		.ascii	"QueueHandle_t\000"
 1323      6548616E 
 1323      646C655F 
 1323      7400
 1324              	.LASF51:
 1325 010b 73426C6F 		.ascii	"sBlockingConsumerCount\000"
 1325      636B696E 
 1325      67436F6E 
 1325      73756D65 
 1325      72436F75 
 1326              	.LASF37:
 1327 0122 78446F6E 		.ascii	"xDontBlock\000"
 1327      74426C6F 
 1327      636B00
 1328              	.LASF48:
 1329 012d 734C6173 		.ascii	"sLastBlockingProducerCount\000"
 1329      74426C6F 
 1329      636B696E 
 1329      6750726F 
 1329      64756365 
 1330              	.LASF58:
 1331 0148 78417265 		.ascii	"xAreBlockingQueuesStillRunning\000"
 1331      426C6F63 
 1331      6B696E67 
 1331      51756575 
 1331      65735374 
 1332              	.LASF19:
 1333 0167 666C6F61 		.ascii	"float\000"
 1333      7400
 1334              	.LASF50:
 1335 016d 78546173 		.ascii	"xTasks\000"
 1335      6B7300
 1336              	.LASF22:
 1337 0174 55426173 		.ascii	"UBaseType_t\000"
 1337      65547970 
 1337      655F7400 
 1338              	.LASF45:
 1339 0180 75734461 		.ascii	"usData\000"
 1339      746100
 1340              	.LASF10:
 1341 0187 6C6F6E67 		.ascii	"long unsigned int\000"
 1341      20756E73 
 1341      69676E65 
 1341      6420696E 
 1341      7400
 1342              	.LASF6:
 1343 0199 73686F72 		.ascii	"short unsigned int\000"
 1343      7420756E 
 1343      7369676E 
 1343      65642069 
 1343      6E7400
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 31


 1344              	.LASF47:
 1345 01ac 734C6173 		.ascii	"sLastBlockingConsumerCount\000"
 1345      74426C6F 
 1345      636B696E 
 1345      67436F6E 
 1345      73756D65 
 1346              	.LASF54:
 1347 01c7 2E2E5C2E 		.ascii	"..\\..\\Common\\Minimal\\BlockQ.c\000"
 1347      2E5C436F 
 1347      6D6D6F6E 
 1347      5C4D696E 
 1347      696D616C 
 1348              	.LASF42:
 1349 01e5 73457272 		.ascii	"sErrorEverOccurred\000"
 1349      6F724576 
 1349      65724F63 
 1349      63757272 
 1349      656400
 1350              	.LASF2:
 1351 01f8 756E7369 		.ascii	"unsigned char\000"
 1351      676E6564 
 1351      20636861 
 1351      7200
 1352              	.LASF5:
 1353 0206 5F5F7569 		.ascii	"__uint16_t\000"
 1353      6E743136 
 1353      5F7400
 1354              	.LASF20:
 1355 0211 646F7562 		.ascii	"double\000"
 1355      6C6500
 1356              	.LASF9:
 1357 0218 5F5F7569 		.ascii	"__uint32_t\000"
 1357      6E743332 
 1357      5F7400
 1358              	.LASF56:
 1359 0223 424C4F43 		.ascii	"BLOCKING_QUEUE_PARAMETERS\000"
 1359      4B494E47 
 1359      5F515545 
 1359      55455F50 
 1359      4152414D 
 1360              	.LASF29:
 1361 023d 70785175 		.ascii	"pxQueueParameters1\000"
 1361      65756550 
 1361      6172616D 
 1361      65746572 
 1361      733100
 1362              	.LASF30:
 1363 0250 70785175 		.ascii	"pxQueueParameters2\000"
 1363      65756550 
 1363      6172616D 
 1363      65746572 
 1363      733200
 1364              	.LASF31:
 1365 0263 70785175 		.ascii	"pxQueueParameters3\000"
 1365      65756550 
 1365      6172616D 
 1365      65746572 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 32


 1365      733300
 1366              	.LASF32:
 1367 0276 70785175 		.ascii	"pxQueueParameters4\000"
 1367      65756550 
 1367      6172616D 
 1367      65746572 
 1367      733400
 1368              	.LASF33:
 1369 0289 70785175 		.ascii	"pxQueueParameters5\000"
 1369      65756550 
 1369      6172616D 
 1369      65746572 
 1369      733500
 1370              	.LASF34:
 1371 029c 70785175 		.ascii	"pxQueueParameters6\000"
 1371      65756550 
 1371      6172616D 
 1371      65746572 
 1371      733600
 1372              	.LASF38:
 1373 02af 75785072 		.ascii	"uxPriority\000"
 1373      696F7269 
 1373      747900
 1374              	.LASF0:
 1375 02ba 756E7369 		.ascii	"unsigned int\000"
 1375      676E6564 
 1375      20696E74 
 1375      00
 1376              	.LASF12:
 1377 02c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1377      206C6F6E 
 1377      6720756E 
 1377      7369676E 
 1377      65642069 
 1378              	.LASF15:
 1379 02de 75696E74 		.ascii	"uint8_t\000"
 1379      385F7400 
 1380              	.LASF55:
 1381 02e6 453A5C47 		.ascii	"E:\\GitHub\\FreeRTOS\\freertos-code-2543-trunk\\fre"
 1381      69744875 
 1381      625C4672 
 1381      65655254 
 1381      4F535C66 
 1382 0315 6572746F 		.ascii	"ertos-code-2543-trunk\\FreeRTOS\\Demo\\CORTEX_CY8C5"
 1382      732D636F 
 1382      64652D32 
 1382      3534332D 
 1382      7472756E 
 1383 0345 3538385F 		.ascii	"588_PSoC_Creator_GCC\\FreeRTOS_Demo.cydsn\000"
 1383      50536F43 
 1383      5F437265 
 1383      61746F72 
 1383      5F474343 
 1384              	.LASF59:
 1385 036e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1385      52784275 
 1385      66666572 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 33


 1385      00
 1386              	.LASF26:
 1387 037b 78426C6F 		.ascii	"xBlockTime\000"
 1387      636B5469 
 1387      6D6500
 1388              	.LASF13:
 1389 0386 73697A65 		.ascii	"sizetype\000"
 1389      74797065 
 1389      00
 1390              	.LASF11:
 1391 038f 6C6F6E67 		.ascii	"long long int\000"
 1391      206C6F6E 
 1391      6720696E 
 1391      7400
 1392              	.LASF44:
 1393 039d 76426C6F 		.ascii	"vBlockingQueueConsumer\000"
 1393      636B696E 
 1393      67517565 
 1393      7565436F 
 1393      6E73756D 
 1394              	.LASF43:
 1395 03b4 76426C6F 		.ascii	"vBlockingQueueProducer\000"
 1395      636B696E 
 1395      67517565 
 1395      75655072 
 1395      6F647563 
 1396              	.LASF39:
 1397 03cb 70765061 		.ascii	"pvParameters\000"
 1397      72616D65 
 1397      74657273 
 1397      00
 1398              	.LASF17:
 1399 03d8 696E7433 		.ascii	"int32_t\000"
 1399      325F7400 
 1400              	.LASF3:
 1401 03e0 73686F72 		.ascii	"short int\000"
 1401      7420696E 
 1401      7400
 1402              	.LASF16:
 1403 03ea 75696E74 		.ascii	"uint16_t\000"
 1403      31365F74 
 1403      00
 1404              	.LASF35:
 1405 03f3 75785175 		.ascii	"uxQueueSize1\000"
 1405      65756553 
 1405      697A6531 
 1405      00
 1406              	.LASF41:
 1407 0400 70785175 		.ascii	"pxQueueParameters\000"
 1407      65756550 
 1407      6172616D 
 1407      65746572 
 1407      7300
 1408              	.LASF18:
 1409 0412 75696E74 		.ascii	"uint32_t\000"
 1409      33325F74 
 1409      00
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\ccJiMieY.s 			page 34


 1410              	.LASF36:
 1411 041b 75785175 		.ascii	"uxQueueSize5\000"
 1411      65756553 
 1411      697A6535 
 1411      00
 1412              	.LASF14:
 1413 0428 63686172 		.ascii	"char\000"
 1413      00
 1414              	.LASF27:
 1415 042d 70734368 		.ascii	"psCheckVariable\000"
 1415      65636B56 
 1415      61726961 
 1415      626C6500 
 1416              	.LASF49:
 1417 043d 78526574 		.ascii	"xReturn\000"
 1417      75726E00 
 1418              	.LASF1:
 1419 0445 7369676E 		.ascii	"signed char\000"
 1419      65642063 
 1419      68617200 
 1420              	.LASF40:
 1421 0451 75735661 		.ascii	"usValue\000"
 1421      6C756500 
 1422              	.LASF28:
 1423 0459 78426C6F 		.ascii	"xBlockingQueueParameters\000"
 1423      636B696E 
 1423      67517565 
 1423      75655061 
 1423      72616D65 
 1424              	.LASF21:
 1425 0472 42617365 		.ascii	"BaseType_t\000"
 1425      54797065 
 1425      5F7400
 1426              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
