ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PollQ.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	xPollingConsumerCount:
  21 0000 00000000 		.space	4
  22              		.align	2
  23              	xPollingProducerCount:
  24 0004 00000000 		.space	4
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 506F6C6C 		.ascii	"Poll_Test_Queue\000"
  28      5F546573 
  28      745F5175 
  28      65756500 
  29              		.align	2
  30              	.LC1:
  31 0010 51436F6E 		.ascii	"QConsNB\000"
  31      734E4200 
  32              		.align	2
  33              	.LC2:
  34 0018 5150726F 		.ascii	"QProdNB\000"
  34      644E4200 
  35              		.section	.text.vStartPolledQueueTasks,"ax",%progbits
  36              		.align	2
  37              		.global	vStartPolledQueueTasks
  38              		.thumb
  39              		.thumb_func
  40              		.type	vStartPolledQueueTasks, %function
  41              	vStartPolledQueueTasks:
  42              	.LFB68:
  43              		.file 1 "..\\..\\Common\\Minimal\\PollQ.c"
   1:..\..\Common\Minimal/PollQ.c **** /*
   2:..\..\Common\Minimal/PollQ.c ****  * FreeRTOS Kernel V10.0.1
   3:..\..\Common\Minimal/PollQ.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\..\Common\Minimal/PollQ.c ****  *
   5:..\..\Common\Minimal/PollQ.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\..\Common\Minimal/PollQ.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\..\Common\Minimal/PollQ.c ****  * the Software without restriction, including without limitation the rights to
   8:..\..\Common\Minimal/PollQ.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\..\Common\Minimal/PollQ.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 2


  10:..\..\Common\Minimal/PollQ.c ****  * subject to the following conditions:
  11:..\..\Common\Minimal/PollQ.c ****  *
  12:..\..\Common\Minimal/PollQ.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\..\Common\Minimal/PollQ.c ****  * copies or substantial portions of the Software.
  14:..\..\Common\Minimal/PollQ.c ****  *
  15:..\..\Common\Minimal/PollQ.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\..\Common\Minimal/PollQ.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\..\Common\Minimal/PollQ.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\..\Common\Minimal/PollQ.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\..\Common\Minimal/PollQ.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\..\Common\Minimal/PollQ.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\..\Common\Minimal/PollQ.c ****  *
  22:..\..\Common\Minimal/PollQ.c ****  * http://www.FreeRTOS.org
  23:..\..\Common\Minimal/PollQ.c ****  * http://aws.amazon.com/freertos
  24:..\..\Common\Minimal/PollQ.c ****  *
  25:..\..\Common\Minimal/PollQ.c ****  * 1 tab == 4 spaces!
  26:..\..\Common\Minimal/PollQ.c ****  */
  27:..\..\Common\Minimal/PollQ.c **** 
  28:..\..\Common\Minimal/PollQ.c **** /*
  29:..\..\Common\Minimal/PollQ.c ****  * This version of PollQ. c is for use on systems that have limited stack
  30:..\..\Common\Minimal/PollQ.c ****  * space and no display facilities.  The complete version can be found in
  31:..\..\Common\Minimal/PollQ.c ****  * the Demo/Common/Full directory.
  32:..\..\Common\Minimal/PollQ.c ****  *
  33:..\..\Common\Minimal/PollQ.c ****  * Creates two tasks that communicate over a single queue.  One task acts as a
  34:..\..\Common\Minimal/PollQ.c ****  * producer, the other a consumer.
  35:..\..\Common\Minimal/PollQ.c ****  *
  36:..\..\Common\Minimal/PollQ.c ****  * The producer loops for three iteration, posting an incrementing number onto the
  37:..\..\Common\Minimal/PollQ.c ****  * queue each cycle.  It then delays for a fixed period before doing exactly the
  38:..\..\Common\Minimal/PollQ.c ****  * same again.
  39:..\..\Common\Minimal/PollQ.c ****  *
  40:..\..\Common\Minimal/PollQ.c ****  * The consumer loops emptying the queue.  Each item removed from the queue is
  41:..\..\Common\Minimal/PollQ.c ****  * checked to ensure it contains the expected value.  When the queue is empty it
  42:..\..\Common\Minimal/PollQ.c ****  * blocks for a fixed period, then does the same again.
  43:..\..\Common\Minimal/PollQ.c ****  *
  44:..\..\Common\Minimal/PollQ.c ****  * All queue access is performed without blocking.  The consumer completely empties
  45:..\..\Common\Minimal/PollQ.c ****  * the queue each time it runs so the producer should never find the queue full.
  46:..\..\Common\Minimal/PollQ.c ****  *
  47:..\..\Common\Minimal/PollQ.c ****  * An error is flagged if the consumer obtains an unexpected value or the producer
  48:..\..\Common\Minimal/PollQ.c ****  * find the queue is full.
  49:..\..\Common\Minimal/PollQ.c ****  */
  50:..\..\Common\Minimal/PollQ.c **** 
  51:..\..\Common\Minimal/PollQ.c **** /*
  52:..\..\Common\Minimal/PollQ.c **** Changes from V2.0.0
  53:..\..\Common\Minimal/PollQ.c **** 
  54:..\..\Common\Minimal/PollQ.c **** 	+ Delay periods are now specified using variables and constants of
  55:..\..\Common\Minimal/PollQ.c **** 	  TickType_t rather than uint32_t.
  56:..\..\Common\Minimal/PollQ.c **** */
  57:..\..\Common\Minimal/PollQ.c **** 
  58:..\..\Common\Minimal/PollQ.c **** #include <stdlib.h>
  59:..\..\Common\Minimal/PollQ.c **** 
  60:..\..\Common\Minimal/PollQ.c **** /* Scheduler include files. */
  61:..\..\Common\Minimal/PollQ.c **** #include "FreeRTOS.h"
  62:..\..\Common\Minimal/PollQ.c **** #include "task.h"
  63:..\..\Common\Minimal/PollQ.c **** #include "queue.h"
  64:..\..\Common\Minimal/PollQ.c **** 
  65:..\..\Common\Minimal/PollQ.c **** /* Demo program include files. */
  66:..\..\Common\Minimal/PollQ.c **** #include "PollQ.h"
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 3


  67:..\..\Common\Minimal/PollQ.c **** 
  68:..\..\Common\Minimal/PollQ.c **** #define pollqSTACK_SIZE			configMINIMAL_STACK_SIZE
  69:..\..\Common\Minimal/PollQ.c **** #define pollqQUEUE_SIZE			( 10 )
  70:..\..\Common\Minimal/PollQ.c **** #define pollqPRODUCER_DELAY		( pdMS_TO_TICKS( ( TickType_t ) 200 ) )
  71:..\..\Common\Minimal/PollQ.c **** #define pollqCONSUMER_DELAY		( pollqPRODUCER_DELAY - ( TickType_t ) ( 20 / portTICK_PERIOD_MS ) )
  72:..\..\Common\Minimal/PollQ.c **** #define pollqNO_DELAY			( ( TickType_t ) 0 )
  73:..\..\Common\Minimal/PollQ.c **** #define pollqVALUES_TO_PRODUCE	( ( BaseType_t ) 3 )
  74:..\..\Common\Minimal/PollQ.c **** #define pollqINITIAL_VALUE		( ( BaseType_t ) 0 )
  75:..\..\Common\Minimal/PollQ.c **** 
  76:..\..\Common\Minimal/PollQ.c **** /* The task that posts the incrementing number onto the queue. */
  77:..\..\Common\Minimal/PollQ.c **** static portTASK_FUNCTION_PROTO( vPolledQueueProducer, pvParameters );
  78:..\..\Common\Minimal/PollQ.c **** 
  79:..\..\Common\Minimal/PollQ.c **** /* The task that empties the queue. */
  80:..\..\Common\Minimal/PollQ.c **** static portTASK_FUNCTION_PROTO( vPolledQueueConsumer, pvParameters );
  81:..\..\Common\Minimal/PollQ.c **** 
  82:..\..\Common\Minimal/PollQ.c **** /* Variables that are used to check that the tasks are still running with no
  83:..\..\Common\Minimal/PollQ.c **** errors. */
  84:..\..\Common\Minimal/PollQ.c **** static volatile BaseType_t xPollingConsumerCount = pollqINITIAL_VALUE, xPollingProducerCount = poll
  85:..\..\Common\Minimal/PollQ.c **** 
  86:..\..\Common\Minimal/PollQ.c **** /*-----------------------------------------------------------*/
  87:..\..\Common\Minimal/PollQ.c **** 
  88:..\..\Common\Minimal/PollQ.c **** void vStartPolledQueueTasks( UBaseType_t uxPriority )
  89:..\..\Common\Minimal/PollQ.c **** {
  44              		.loc 1 89 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 8
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 84B0     		sub	sp, sp, #16
  53              		.cfi_def_cfa_offset 24
  54 0004 02AF     		add	r7, sp, #8
  55              		.cfi_def_cfa 7, 16
  56 0006 7860     		str	r0, [r7, #4]
  90:..\..\Common\Minimal/PollQ.c **** static QueueHandle_t xPolledQueue;
  91:..\..\Common\Minimal/PollQ.c **** 
  92:..\..\Common\Minimal/PollQ.c **** 	/* Create the queue used by the producer and consumer. */
  93:..\..\Common\Minimal/PollQ.c **** 	xPolledQueue = xQueueCreate( pollqQUEUE_SIZE, ( UBaseType_t ) sizeof( uint16_t ) );
  57              		.loc 1 93 0
  58 0008 0A20     		movs	r0, #10
  59 000a 0221     		movs	r1, #2
  60 000c 0022     		movs	r2, #0
  61 000e FFF7FEFF 		bl	xQueueGenericCreate
  62 0012 0246     		mov	r2, r0
  63 0014 114B     		ldr	r3, .L3
  64 0016 1A60     		str	r2, [r3]
  94:..\..\Common\Minimal/PollQ.c **** 
  95:..\..\Common\Minimal/PollQ.c **** 	if( xPolledQueue != NULL )
  65              		.loc 1 95 0
  66 0018 104B     		ldr	r3, .L3
  67 001a 1B68     		ldr	r3, [r3]
  68 001c 002B     		cmp	r3, #0
  69 001e 19D0     		beq	.L1
  96:..\..\Common\Minimal/PollQ.c **** 	{
  97:..\..\Common\Minimal/PollQ.c **** 		/* vQueueAddToRegistry() adds the queue to the queue registry, if one is
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 4


  98:..\..\Common\Minimal/PollQ.c **** 		in use.  The queue registry is provided as a means for kernel aware
  99:..\..\Common\Minimal/PollQ.c **** 		debuggers to locate queues and has no purpose if a kernel aware debugger
 100:..\..\Common\Minimal/PollQ.c **** 		is not being used.  The call to vQueueAddToRegistry() will be removed
 101:..\..\Common\Minimal/PollQ.c **** 		by the pre-processor if configQUEUE_REGISTRY_SIZE is not defined or is
 102:..\..\Common\Minimal/PollQ.c **** 		defined to be less than 1. */
 103:..\..\Common\Minimal/PollQ.c **** 		vQueueAddToRegistry( xPolledQueue, "Poll_Test_Queue" );
  70              		.loc 1 103 0
  71 0020 0E4B     		ldr	r3, .L3
  72 0022 1B68     		ldr	r3, [r3]
  73 0024 1846     		mov	r0, r3
  74 0026 0E49     		ldr	r1, .L3+4
  75 0028 FFF7FEFF 		bl	vQueueAddToRegistry
 104:..\..\Common\Minimal/PollQ.c **** 
 105:..\..\Common\Minimal/PollQ.c **** 		/* Spawn the producer and consumer. */
 106:..\..\Common\Minimal/PollQ.c **** 		xTaskCreate( vPolledQueueConsumer, "QConsNB", pollqSTACK_SIZE, ( void * ) &xPolledQueue, uxPriori
  76              		.loc 1 106 0
  77 002c 7B68     		ldr	r3, [r7, #4]
  78 002e 0093     		str	r3, [sp]
  79 0030 0023     		movs	r3, #0
  80 0032 0193     		str	r3, [sp, #4]
  81 0034 0B48     		ldr	r0, .L3+8
  82 0036 0C49     		ldr	r1, .L3+12
  83 0038 6422     		movs	r2, #100
  84 003a 084B     		ldr	r3, .L3
  85 003c FFF7FEFF 		bl	xTaskCreate
 107:..\..\Common\Minimal/PollQ.c **** 		xTaskCreate( vPolledQueueProducer, "QProdNB", pollqSTACK_SIZE, ( void * ) &xPolledQueue, uxPriori
  86              		.loc 1 107 0
  87 0040 7B68     		ldr	r3, [r7, #4]
  88 0042 0093     		str	r3, [sp]
  89 0044 0023     		movs	r3, #0
  90 0046 0193     		str	r3, [sp, #4]
  91 0048 0848     		ldr	r0, .L3+16
  92 004a 0949     		ldr	r1, .L3+20
  93 004c 6422     		movs	r2, #100
  94 004e 034B     		ldr	r3, .L3
  95 0050 FFF7FEFF 		bl	xTaskCreate
  96              	.L1:
 108:..\..\Common\Minimal/PollQ.c **** 	}
 109:..\..\Common\Minimal/PollQ.c **** }
  97              		.loc 1 109 0
  98 0054 0837     		adds	r7, r7, #8
  99              		.cfi_def_cfa_offset 8
 100 0056 BD46     		mov	sp, r7
 101              		.cfi_def_cfa_register 13
 102              		@ sp needed
 103 0058 80BD     		pop	{r7, pc}
 104              	.L4:
 105 005a 00BF     		.align	2
 106              	.L3:
 107 005c 08000000 		.word	xPolledQueue.6774
 108 0060 00000000 		.word	.LC0
 109 0064 00000000 		.word	vPolledQueueConsumer
 110 0068 10000000 		.word	.LC1
 111 006c 00000000 		.word	vPolledQueueProducer
 112 0070 18000000 		.word	.LC2
 113              		.cfi_endproc
 114              	.LFE68:
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 5


 115              		.size	vStartPolledQueueTasks, .-vStartPolledQueueTasks
 116              		.section	.text.vPolledQueueProducer,"ax",%progbits
 117              		.align	2
 118              		.thumb
 119              		.thumb_func
 120              		.type	vPolledQueueProducer, %function
 121              	vPolledQueueProducer:
 122              	.LFB69:
 110:..\..\Common\Minimal/PollQ.c **** /*-----------------------------------------------------------*/
 111:..\..\Common\Minimal/PollQ.c **** 
 112:..\..\Common\Minimal/PollQ.c **** static portTASK_FUNCTION( vPolledQueueProducer, pvParameters )
 113:..\..\Common\Minimal/PollQ.c **** {
 123              		.loc 1 113 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 24
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 86B0     		sub	sp, sp, #24
 132              		.cfi_def_cfa_offset 32
 133 0004 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
 135 0006 7860     		str	r0, [r7, #4]
 114:..\..\Common\Minimal/PollQ.c **** uint16_t usValue = ( uint16_t ) 0;
 136              		.loc 1 114 0
 137 0008 0023     		movs	r3, #0
 138 000a FB81     		strh	r3, [r7, #14]	@ movhi
 115:..\..\Common\Minimal/PollQ.c **** BaseType_t xError = pdFALSE, xLoop;
 139              		.loc 1 115 0
 140 000c 0023     		movs	r3, #0
 141 000e 7B61     		str	r3, [r7, #20]
 142              	.L11:
 116:..\..\Common\Minimal/PollQ.c **** 
 117:..\..\Common\Minimal/PollQ.c **** 	for( ;; )
 118:..\..\Common\Minimal/PollQ.c **** 	{
 119:..\..\Common\Minimal/PollQ.c **** 		for( xLoop = 0; xLoop < pollqVALUES_TO_PRODUCE; xLoop++ )
 143              		.loc 1 119 0
 144 0010 0023     		movs	r3, #0
 145 0012 3B61     		str	r3, [r7, #16]
 146 0014 22E0     		b	.L6
 147              	.L10:
 120:..\..\Common\Minimal/PollQ.c **** 		{
 121:..\..\Common\Minimal/PollQ.c **** 			/* Send an incrementing number on the queue without blocking. */
 122:..\..\Common\Minimal/PollQ.c **** 			if( xQueueSend( *( ( QueueHandle_t * ) pvParameters ), ( void * ) &usValue, pollqNO_DELAY ) != p
 148              		.loc 1 122 0
 149 0016 7B68     		ldr	r3, [r7, #4]
 150 0018 1A68     		ldr	r2, [r3]
 151 001a 07F10E03 		add	r3, r7, #14
 152 001e 1046     		mov	r0, r2
 153 0020 1946     		mov	r1, r3
 154 0022 0022     		movs	r2, #0
 155 0024 0023     		movs	r3, #0
 156 0026 FFF7FEFF 		bl	xQueueGenericSend
 157 002a 0346     		mov	r3, r0
 158 002c 012B     		cmp	r3, #1
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 6


 159 002e 02D0     		beq	.L7
 123:..\..\Common\Minimal/PollQ.c **** 			{
 124:..\..\Common\Minimal/PollQ.c **** 				/* We should never find the queue full so if we get here there
 125:..\..\Common\Minimal/PollQ.c **** 				has been an error. */
 126:..\..\Common\Minimal/PollQ.c **** 				xError = pdTRUE;
 160              		.loc 1 126 0
 161 0030 0123     		movs	r3, #1
 162 0032 7B61     		str	r3, [r7, #20]
 163 0034 0FE0     		b	.L8
 164              	.L7:
 127:..\..\Common\Minimal/PollQ.c **** 			}
 128:..\..\Common\Minimal/PollQ.c **** 			else
 129:..\..\Common\Minimal/PollQ.c **** 			{
 130:..\..\Common\Minimal/PollQ.c **** 				if( xError == pdFALSE )
 165              		.loc 1 130 0
 166 0036 7B69     		ldr	r3, [r7, #20]
 167 0038 002B     		cmp	r3, #0
 168 003a 08D1     		bne	.L9
 131:..\..\Common\Minimal/PollQ.c **** 				{
 132:..\..\Common\Minimal/PollQ.c **** 					/* If an error has ever been recorded we stop incrementing the
 133:..\..\Common\Minimal/PollQ.c **** 					check variable. */
 134:..\..\Common\Minimal/PollQ.c **** 					portENTER_CRITICAL();
 169              		.loc 1 134 0
 170 003c FFF7FEFF 		bl	vPortEnterCritical
 135:..\..\Common\Minimal/PollQ.c **** 						xPollingProducerCount++;
 171              		.loc 1 135 0
 172 0040 0A4B     		ldr	r3, .L12
 173 0042 1B68     		ldr	r3, [r3]
 174 0044 0133     		adds	r3, r3, #1
 175 0046 094A     		ldr	r2, .L12
 176 0048 1360     		str	r3, [r2]
 136:..\..\Common\Minimal/PollQ.c **** 					portEXIT_CRITICAL();
 177              		.loc 1 136 0
 178 004a FFF7FEFF 		bl	vPortExitCritical
 179              	.L9:
 137:..\..\Common\Minimal/PollQ.c **** 				}
 138:..\..\Common\Minimal/PollQ.c **** 
 139:..\..\Common\Minimal/PollQ.c **** 				/* Update the value we are going to post next time around. */
 140:..\..\Common\Minimal/PollQ.c **** 				usValue++;
 180              		.loc 1 140 0
 181 004e FB89     		ldrh	r3, [r7, #14]
 182 0050 0133     		adds	r3, r3, #1
 183 0052 9BB2     		uxth	r3, r3
 184 0054 FB81     		strh	r3, [r7, #14]	@ movhi
 185              	.L8:
 119:..\..\Common\Minimal/PollQ.c **** 		{
 186              		.loc 1 119 0 discriminator 2
 187 0056 3B69     		ldr	r3, [r7, #16]
 188 0058 0133     		adds	r3, r3, #1
 189 005a 3B61     		str	r3, [r7, #16]
 190              	.L6:
 119:..\..\Common\Minimal/PollQ.c **** 		{
 191              		.loc 1 119 0 is_stmt 0 discriminator 1
 192 005c 3B69     		ldr	r3, [r7, #16]
 193 005e 022B     		cmp	r3, #2
 194 0060 D9DD     		ble	.L10
 141:..\..\Common\Minimal/PollQ.c **** 			}
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 7


 142:..\..\Common\Minimal/PollQ.c **** 		}
 143:..\..\Common\Minimal/PollQ.c **** 
 144:..\..\Common\Minimal/PollQ.c **** 		/* Wait before we start posting again to ensure the consumer runs and
 145:..\..\Common\Minimal/PollQ.c **** 		empties the queue. */
 146:..\..\Common\Minimal/PollQ.c **** 		vTaskDelay( pollqPRODUCER_DELAY );
 195              		.loc 1 146 0 is_stmt 1
 196 0062 C820     		movs	r0, #200
 197 0064 FFF7FEFF 		bl	vTaskDelay
 147:..\..\Common\Minimal/PollQ.c **** 	}
 198              		.loc 1 147 0
 199 0068 D2E7     		b	.L11
 200              	.L13:
 201 006a 00BF     		.align	2
 202              	.L12:
 203 006c 04000000 		.word	xPollingProducerCount
 204              		.cfi_endproc
 205              	.LFE69:
 206              		.size	vPolledQueueProducer, .-vPolledQueueProducer
 207              		.section	.text.vPolledQueueConsumer,"ax",%progbits
 208              		.align	2
 209              		.thumb
 210              		.thumb_func
 211              		.type	vPolledQueueConsumer, %function
 212              	vPolledQueueConsumer:
 213              	.LFB70:
 148:..\..\Common\Minimal/PollQ.c **** }  /*lint !e818 Function prototype must conform to API. */
 149:..\..\Common\Minimal/PollQ.c **** /*-----------------------------------------------------------*/
 150:..\..\Common\Minimal/PollQ.c **** 
 151:..\..\Common\Minimal/PollQ.c **** static portTASK_FUNCTION( vPolledQueueConsumer, pvParameters )
 152:..\..\Common\Minimal/PollQ.c **** {
 214              		.loc 1 152 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 24
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 86B0     		sub	sp, sp, #24
 223              		.cfi_def_cfa_offset 32
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 226 0006 7860     		str	r0, [r7, #4]
 153:..\..\Common\Minimal/PollQ.c **** uint16_t usData, usExpectedValue = ( uint16_t ) 0;
 227              		.loc 1 153 0
 228 0008 0023     		movs	r3, #0
 229 000a FB82     		strh	r3, [r7, #22]	@ movhi
 154:..\..\Common\Minimal/PollQ.c **** BaseType_t xError = pdFALSE;
 230              		.loc 1 154 0
 231 000c 0023     		movs	r3, #0
 232 000e 3B61     		str	r3, [r7, #16]
 233              	.L19:
 155:..\..\Common\Minimal/PollQ.c **** 
 156:..\..\Common\Minimal/PollQ.c **** 	for( ;; )
 157:..\..\Common\Minimal/PollQ.c **** 	{
 158:..\..\Common\Minimal/PollQ.c **** 		/* Loop until the queue is empty. */
 159:..\..\Common\Minimal/PollQ.c **** 		while( uxQueueMessagesWaiting( *( ( QueueHandle_t * ) pvParameters ) ) )
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 8


 234              		.loc 1 159 0
 235 0010 23E0     		b	.L15
 236              	.L18:
 160:..\..\Common\Minimal/PollQ.c **** 		{
 161:..\..\Common\Minimal/PollQ.c **** 			if( xQueueReceive( *( ( QueueHandle_t * ) pvParameters ), &usData, pollqNO_DELAY ) == pdPASS )
 237              		.loc 1 161 0
 238 0012 7B68     		ldr	r3, [r7, #4]
 239 0014 1A68     		ldr	r2, [r3]
 240 0016 07F10E03 		add	r3, r7, #14
 241 001a 1046     		mov	r0, r2
 242 001c 1946     		mov	r1, r3
 243 001e 0022     		movs	r2, #0
 244 0020 FFF7FEFF 		bl	xQueueReceive
 245 0024 0346     		mov	r3, r0
 246 0026 012B     		cmp	r3, #1
 247 0028 17D1     		bne	.L15
 162:..\..\Common\Minimal/PollQ.c **** 			{
 163:..\..\Common\Minimal/PollQ.c **** 				if( usData != usExpectedValue )
 248              		.loc 1 163 0
 249 002a FB89     		ldrh	r3, [r7, #14]
 250 002c FA8A     		ldrh	r2, [r7, #22]
 251 002e 9A42     		cmp	r2, r3
 252 0030 04D0     		beq	.L16
 164:..\..\Common\Minimal/PollQ.c **** 				{
 165:..\..\Common\Minimal/PollQ.c **** 					/* This is not what we expected to receive so an error has
 166:..\..\Common\Minimal/PollQ.c **** 					occurred. */
 167:..\..\Common\Minimal/PollQ.c **** 					xError = pdTRUE;
 253              		.loc 1 167 0
 254 0032 0123     		movs	r3, #1
 255 0034 3B61     		str	r3, [r7, #16]
 168:..\..\Common\Minimal/PollQ.c **** 
 169:..\..\Common\Minimal/PollQ.c **** 					/* Catch-up to the value we received so our next expected
 170:..\..\Common\Minimal/PollQ.c **** 					value should again be correct. */
 171:..\..\Common\Minimal/PollQ.c **** 					usExpectedValue = usData;
 256              		.loc 1 171 0
 257 0036 FB89     		ldrh	r3, [r7, #14]	@ movhi
 258 0038 FB82     		strh	r3, [r7, #22]	@ movhi
 259 003a 0BE0     		b	.L17
 260              	.L16:
 172:..\..\Common\Minimal/PollQ.c **** 				}
 173:..\..\Common\Minimal/PollQ.c **** 				else
 174:..\..\Common\Minimal/PollQ.c **** 				{
 175:..\..\Common\Minimal/PollQ.c **** 					if( xError == pdFALSE )
 261              		.loc 1 175 0
 262 003c 3B69     		ldr	r3, [r7, #16]
 263 003e 002B     		cmp	r3, #0
 264 0040 08D1     		bne	.L17
 176:..\..\Common\Minimal/PollQ.c **** 					{
 177:..\..\Common\Minimal/PollQ.c **** 						/* Only increment the check variable if no errors have
 178:..\..\Common\Minimal/PollQ.c **** 						occurred. */
 179:..\..\Common\Minimal/PollQ.c **** 						portENTER_CRITICAL();
 265              		.loc 1 179 0
 266 0042 FFF7FEFF 		bl	vPortEnterCritical
 180:..\..\Common\Minimal/PollQ.c **** 							xPollingConsumerCount++;
 267              		.loc 1 180 0
 268 0046 0B4B     		ldr	r3, .L20
 269 0048 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 9


 270 004a 0133     		adds	r3, r3, #1
 271 004c 094A     		ldr	r2, .L20
 272 004e 1360     		str	r3, [r2]
 181:..\..\Common\Minimal/PollQ.c **** 						portEXIT_CRITICAL();
 273              		.loc 1 181 0
 274 0050 FFF7FEFF 		bl	vPortExitCritical
 275              	.L17:
 182:..\..\Common\Minimal/PollQ.c **** 					}
 183:..\..\Common\Minimal/PollQ.c **** 				}
 184:..\..\Common\Minimal/PollQ.c **** 
 185:..\..\Common\Minimal/PollQ.c **** 				/* Next time round we would expect the number to be one higher. */
 186:..\..\Common\Minimal/PollQ.c **** 				usExpectedValue++;
 276              		.loc 1 186 0
 277 0054 FB8A     		ldrh	r3, [r7, #22]
 278 0056 0133     		adds	r3, r3, #1
 279 0058 FB82     		strh	r3, [r7, #22]	@ movhi
 280              	.L15:
 159:..\..\Common\Minimal/PollQ.c **** 		{
 281              		.loc 1 159 0
 282 005a 7B68     		ldr	r3, [r7, #4]
 283 005c 1B68     		ldr	r3, [r3]
 284 005e 1846     		mov	r0, r3
 285 0060 FFF7FEFF 		bl	uxQueueMessagesWaiting
 286 0064 0346     		mov	r3, r0
 287 0066 002B     		cmp	r3, #0
 288 0068 D3D1     		bne	.L18
 187:..\..\Common\Minimal/PollQ.c **** 			}
 188:..\..\Common\Minimal/PollQ.c **** 		}
 189:..\..\Common\Minimal/PollQ.c **** 
 190:..\..\Common\Minimal/PollQ.c **** 		/* Now the queue is empty we block, allowing the producer to place more
 191:..\..\Common\Minimal/PollQ.c **** 		items in the queue. */
 192:..\..\Common\Minimal/PollQ.c **** 		vTaskDelay( pollqCONSUMER_DELAY );
 289              		.loc 1 192 0
 290 006a B420     		movs	r0, #180
 291 006c FFF7FEFF 		bl	vTaskDelay
 193:..\..\Common\Minimal/PollQ.c **** 	}
 292              		.loc 1 193 0
 293 0070 CEE7     		b	.L19
 294              	.L21:
 295 0072 00BF     		.align	2
 296              	.L20:
 297 0074 00000000 		.word	xPollingConsumerCount
 298              		.cfi_endproc
 299              	.LFE70:
 300              		.size	vPolledQueueConsumer, .-vPolledQueueConsumer
 301              		.section	.text.xArePollingQueuesStillRunning,"ax",%progbits
 302              		.align	2
 303              		.global	xArePollingQueuesStillRunning
 304              		.thumb
 305              		.thumb_func
 306              		.type	xArePollingQueuesStillRunning, %function
 307              	xArePollingQueuesStillRunning:
 308              	.LFB71:
 194:..\..\Common\Minimal/PollQ.c **** } /*lint !e818 Function prototype must conform to API. */
 195:..\..\Common\Minimal/PollQ.c **** /*-----------------------------------------------------------*/
 196:..\..\Common\Minimal/PollQ.c **** 
 197:..\..\Common\Minimal/PollQ.c **** /* This is called to check that all the created tasks are still running with no errors. */
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 10


 198:..\..\Common\Minimal/PollQ.c **** BaseType_t xArePollingQueuesStillRunning( void )
 199:..\..\Common\Minimal/PollQ.c **** {
 309              		.loc 1 199 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 83B0     		sub	sp, sp, #12
 318              		.cfi_def_cfa_offset 16
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 200:..\..\Common\Minimal/PollQ.c **** BaseType_t xReturn;
 201:..\..\Common\Minimal/PollQ.c **** 
 202:..\..\Common\Minimal/PollQ.c **** 	/* Check both the consumer and producer poll count to check they have both
 203:..\..\Common\Minimal/PollQ.c **** 	been changed since out last trip round.  We do not need a critical section
 204:..\..\Common\Minimal/PollQ.c **** 	around the check variables as this is called from a higher priority than
 205:..\..\Common\Minimal/PollQ.c **** 	the other tasks that access the same variables. */
 206:..\..\Common\Minimal/PollQ.c **** 	if( ( xPollingConsumerCount == pollqINITIAL_VALUE ) ||
 321              		.loc 1 206 0
 322 0006 0D4B     		ldr	r3, .L27
 323 0008 1B68     		ldr	r3, [r3]
 324 000a 002B     		cmp	r3, #0
 325 000c 03D0     		beq	.L23
 207:..\..\Common\Minimal/PollQ.c **** 		( xPollingProducerCount == pollqINITIAL_VALUE )
 326              		.loc 1 207 0 discriminator 1
 327 000e 0C4B     		ldr	r3, .L27+4
 328 0010 1B68     		ldr	r3, [r3]
 206:..\..\Common\Minimal/PollQ.c **** 		( xPollingProducerCount == pollqINITIAL_VALUE )
 329              		.loc 1 206 0 discriminator 1
 330 0012 002B     		cmp	r3, #0
 331 0014 02D1     		bne	.L24
 332              	.L23:
 208:..\..\Common\Minimal/PollQ.c **** 	  )
 209:..\..\Common\Minimal/PollQ.c **** 	{
 210:..\..\Common\Minimal/PollQ.c **** 		xReturn = pdFALSE;
 333              		.loc 1 210 0
 334 0016 0023     		movs	r3, #0
 335 0018 7B60     		str	r3, [r7, #4]
 336 001a 01E0     		b	.L25
 337              	.L24:
 211:..\..\Common\Minimal/PollQ.c **** 	}
 212:..\..\Common\Minimal/PollQ.c **** 	else
 213:..\..\Common\Minimal/PollQ.c **** 	{
 214:..\..\Common\Minimal/PollQ.c **** 		xReturn = pdTRUE;
 338              		.loc 1 214 0
 339 001c 0123     		movs	r3, #1
 340 001e 7B60     		str	r3, [r7, #4]
 341              	.L25:
 215:..\..\Common\Minimal/PollQ.c **** 	}
 216:..\..\Common\Minimal/PollQ.c **** 
 217:..\..\Common\Minimal/PollQ.c **** 	/* Set the check variables back down so we know if they have been
 218:..\..\Common\Minimal/PollQ.c **** 	incremented the next time around. */
 219:..\..\Common\Minimal/PollQ.c **** 	xPollingConsumerCount = pollqINITIAL_VALUE;
 342              		.loc 1 219 0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 11


 343 0020 064B     		ldr	r3, .L27
 344 0022 0022     		movs	r2, #0
 345 0024 1A60     		str	r2, [r3]
 220:..\..\Common\Minimal/PollQ.c **** 	xPollingProducerCount = pollqINITIAL_VALUE;
 346              		.loc 1 220 0
 347 0026 064B     		ldr	r3, .L27+4
 348 0028 0022     		movs	r2, #0
 349 002a 1A60     		str	r2, [r3]
 221:..\..\Common\Minimal/PollQ.c **** 
 222:..\..\Common\Minimal/PollQ.c **** 	return xReturn;
 350              		.loc 1 222 0
 351 002c 7B68     		ldr	r3, [r7, #4]
 223:..\..\Common\Minimal/PollQ.c **** }
 352              		.loc 1 223 0
 353 002e 1846     		mov	r0, r3
 354 0030 0C37     		adds	r7, r7, #12
 355              		.cfi_def_cfa_offset 4
 356 0032 BD46     		mov	sp, r7
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 0034 5DF8047B 		ldr	r7, [sp], #4
 360              		.cfi_restore 7
 361              		.cfi_def_cfa_offset 0
 362 0038 7047     		bx	lr
 363              	.L28:
 364 003a 00BF     		.align	2
 365              	.L27:
 366 003c 00000000 		.word	xPollingConsumerCount
 367 0040 04000000 		.word	xPollingProducerCount
 368              		.cfi_endproc
 369              	.LFE71:
 370              		.size	xArePollingQueuesStillRunning, .-xArePollingQueuesStillRunning
 371              		.bss
 372              		.align	2
 373              	xPolledQueue.6774:
 374 0008 00000000 		.space	4
 375              		.text
 376              	.Letext0:
 377              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 378              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 379              		.file 4 "../../../Source/portable/GCC/ARM_CM3/portmacro.h"
 380              		.file 5 "../../../Source/include/task.h"
 381              		.file 6 "../../../Source/include/queue.h"
 382              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 383              		.section	.debug_info,"",%progbits
 384              	.Ldebug_info0:
 385 0000 51020000 		.4byte	0x251
 386 0004 0400     		.2byte	0x4
 387 0006 00000000 		.4byte	.Ldebug_abbrev0
 388 000a 04       		.byte	0x4
 389 000b 01       		.uleb128 0x1
 390 000c 57000000 		.4byte	.LASF39
 391 0010 01       		.byte	0x1
 392 0011 1D010000 		.4byte	.LASF40
 393 0015 12020000 		.4byte	.LASF41
 394 0019 00000000 		.4byte	.Ldebug_ranges0+0
 395 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 12


 396 0021 00000000 		.4byte	.Ldebug_line0
 397 0025 02       		.uleb128 0x2
 398 0026 04       		.byte	0x4
 399 0027 07       		.byte	0x7
 400 0028 E6010000 		.4byte	.LASF0
 401 002c 03       		.uleb128 0x3
 402 002d 04       		.byte	0x4
 403 002e 05       		.byte	0x5
 404 002f 696E7400 		.ascii	"int\000"
 405 0033 02       		.uleb128 0x2
 406 0034 01       		.byte	0x1
 407 0035 06       		.byte	0x6
 408 0036 29030000 		.4byte	.LASF1
 409 003a 04       		.uleb128 0x4
 410 003b 0B000000 		.4byte	.LASF4
 411 003f 02       		.byte	0x2
 412 0040 1D       		.byte	0x1d
 413 0041 45000000 		.4byte	0x45
 414 0045 02       		.uleb128 0x2
 415 0046 01       		.byte	0x1
 416 0047 08       		.byte	0x8
 417 0048 0F010000 		.4byte	.LASF2
 418 004c 02       		.uleb128 0x2
 419 004d 02       		.byte	0x2
 420 004e 05       		.byte	0x5
 421 004f E2020000 		.4byte	.LASF3
 422 0053 04       		.uleb128 0x4
 423 0054 93010000 		.4byte	.LASF5
 424 0058 02       		.byte	0x2
 425 0059 2B       		.byte	0x2b
 426 005a 5E000000 		.4byte	0x5e
 427 005e 02       		.uleb128 0x2
 428 005f 02       		.byte	0x2
 429 0060 07       		.byte	0x7
 430 0061 35030000 		.4byte	.LASF6
 431 0065 04       		.uleb128 0x4
 432 0066 46000000 		.4byte	.LASF7
 433 006a 02       		.byte	0x2
 434 006b 3F       		.byte	0x3f
 435 006c 70000000 		.4byte	0x70
 436 0070 02       		.uleb128 0x2
 437 0071 04       		.byte	0x4
 438 0072 05       		.byte	0x5
 439 0073 20030000 		.4byte	.LASF8
 440 0077 04       		.uleb128 0x4
 441 0078 A5010000 		.4byte	.LASF9
 442 007c 02       		.byte	0x2
 443 007d 41       		.byte	0x41
 444 007e 82000000 		.4byte	0x82
 445 0082 02       		.uleb128 0x2
 446 0083 04       		.byte	0x4
 447 0084 07       		.byte	0x7
 448 0085 41010000 		.4byte	.LASF10
 449 0089 02       		.uleb128 0x2
 450 008a 08       		.byte	0x8
 451 008b 05       		.byte	0x5
 452 008c C2020000 		.4byte	.LASF11
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 13


 453 0090 02       		.uleb128 0x2
 454 0091 08       		.byte	0x8
 455 0092 07       		.byte	0x7
 456 0093 F3010000 		.4byte	.LASF12
 457 0097 02       		.uleb128 0x2
 458 0098 04       		.byte	0x4
 459 0099 07       		.byte	0x7
 460 009a B9020000 		.4byte	.LASF13
 461 009e 05       		.uleb128 0x5
 462 009f 04       		.byte	0x4
 463 00a0 02       		.uleb128 0x2
 464 00a1 01       		.byte	0x1
 465 00a2 08       		.byte	0x8
 466 00a3 D0020000 		.4byte	.LASF14
 467 00a7 04       		.uleb128 0x4
 468 00a8 0A020000 		.4byte	.LASF15
 469 00ac 03       		.byte	0x3
 470 00ad 15       		.byte	0x15
 471 00ae 3A000000 		.4byte	0x3a
 472 00b2 04       		.uleb128 0x4
 473 00b3 EC020000 		.4byte	.LASF16
 474 00b7 03       		.byte	0x3
 475 00b8 21       		.byte	0x21
 476 00b9 53000000 		.4byte	0x53
 477 00bd 04       		.uleb128 0x4
 478 00be B1020000 		.4byte	.LASF17
 479 00c2 03       		.byte	0x3
 480 00c3 2C       		.byte	0x2c
 481 00c4 65000000 		.4byte	0x65
 482 00c8 04       		.uleb128 0x4
 483 00c9 17030000 		.4byte	.LASF18
 484 00cd 03       		.byte	0x3
 485 00ce 2D       		.byte	0x2d
 486 00cf 77000000 		.4byte	0x77
 487 00d3 02       		.uleb128 0x2
 488 00d4 04       		.byte	0x4
 489 00d5 04       		.byte	0x4
 490 00d6 09010000 		.4byte	.LASF19
 491 00da 02       		.uleb128 0x2
 492 00db 08       		.byte	0x8
 493 00dc 04       		.byte	0x4
 494 00dd 9E010000 		.4byte	.LASF20
 495 00e1 04       		.uleb128 0x4
 496 00e2 54030000 		.4byte	.LASF21
 497 00e6 04       		.byte	0x4
 498 00e7 38       		.byte	0x38
 499 00e8 70000000 		.4byte	0x70
 500 00ec 04       		.uleb128 0x4
 501 00ed 48030000 		.4byte	.LASF22
 502 00f1 04       		.byte	0x4
 503 00f2 39       		.byte	0x39
 504 00f3 82000000 		.4byte	0x82
 505 00f7 04       		.uleb128 0x4
 506 00f8 00000000 		.4byte	.LASF23
 507 00fc 04       		.byte	0x4
 508 00fd 3F       		.byte	0x3f
 509 00fe C8000000 		.4byte	0xc8
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 14


 510 0102 04       		.uleb128 0x4
 511 0103 0A030000 		.4byte	.LASF24
 512 0107 05       		.byte	0x5
 513 0108 3E       		.byte	0x3e
 514 0109 0D010000 		.4byte	0x10d
 515 010d 06       		.uleb128 0x6
 516 010e 04       		.byte	0x4
 517 010f 13010000 		.4byte	0x113
 518 0113 07       		.uleb128 0x7
 519 0114 C0010000 		.4byte	.LASF42
 520 0118 04       		.uleb128 0x4
 521 0119 E5000000 		.4byte	.LASF25
 522 011d 06       		.byte	0x6
 523 011e 2E       		.byte	0x2e
 524 011f 9E000000 		.4byte	0x9e
 525 0123 08       		.uleb128 0x8
 526 0124 9A020000 		.4byte	.LASF43
 527 0128 01       		.byte	0x1
 528 0129 58       		.byte	0x58
 529 012a 00000000 		.4byte	.LFB68
 530 012e 74000000 		.4byte	.LFE68-.LFB68
 531 0132 01       		.uleb128 0x1
 532 0133 9C       		.byte	0x9c
 533 0134 58010000 		.4byte	0x158
 534 0138 09       		.uleb128 0x9
 535 0139 DB010000 		.4byte	.LASF26
 536 013d 01       		.byte	0x1
 537 013e 58       		.byte	0x58
 538 013f EC000000 		.4byte	0xec
 539 0143 02       		.uleb128 0x2
 540 0144 91       		.byte	0x91
 541 0145 74       		.sleb128 -12
 542 0146 0A       		.uleb128 0xa
 543 0147 86010000 		.4byte	.LASF28
 544 014b 01       		.byte	0x1
 545 014c 5A       		.byte	0x5a
 546 014d 18010000 		.4byte	0x118
 547 0151 05       		.uleb128 0x5
 548 0152 03       		.byte	0x3
 549 0153 08000000 		.4byte	xPolledQueue.6774
 550 0157 00       		.byte	0
 551 0158 0B       		.uleb128 0xb
 552 0159 F5020000 		.4byte	.LASF32
 553 015d 01       		.byte	0x1
 554 015e 70       		.byte	0x70
 555 015f 00000000 		.4byte	.LFB69
 556 0163 70000000 		.4byte	.LFE69-.LFB69
 557 0167 01       		.uleb128 0x1
 558 0168 9C       		.byte	0x9c
 559 0169 A6010000 		.4byte	0x1a6
 560 016d 09       		.uleb128 0x9
 561 016e D5020000 		.4byte	.LASF27
 562 0172 01       		.byte	0x1
 563 0173 70       		.byte	0x70
 564 0174 9E000000 		.4byte	0x9e
 565 0178 02       		.uleb128 0x2
 566 0179 91       		.byte	0x91
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 15


 567 017a 64       		.sleb128 -28
 568 017b 0A       		.uleb128 0xa
 569 017c 71010000 		.4byte	.LASF29
 570 0180 01       		.byte	0x1
 571 0181 72       		.byte	0x72
 572 0182 B2000000 		.4byte	0xb2
 573 0186 02       		.uleb128 0x2
 574 0187 91       		.byte	0x91
 575 0188 6E       		.sleb128 -18
 576 0189 0A       		.uleb128 0xa
 577 018a 50000000 		.4byte	.LASF30
 578 018e 01       		.byte	0x1
 579 018f 73       		.byte	0x73
 580 0190 E1000000 		.4byte	0xe1
 581 0194 02       		.uleb128 0x2
 582 0195 91       		.byte	0x91
 583 0196 74       		.sleb128 -12
 584 0197 0A       		.uleb128 0xa
 585 0198 40000000 		.4byte	.LASF31
 586 019c 01       		.byte	0x1
 587 019d 73       		.byte	0x73
 588 019e E1000000 		.4byte	0xe1
 589 01a2 02       		.uleb128 0x2
 590 01a3 91       		.byte	0x91
 591 01a4 70       		.sleb128 -16
 592 01a5 00       		.byte	0
 593 01a6 0B       		.uleb128 0xb
 594 01a7 2B000000 		.4byte	.LASF33
 595 01ab 01       		.byte	0x1
 596 01ac 97       		.byte	0x97
 597 01ad 00000000 		.4byte	.LFB70
 598 01b1 78000000 		.4byte	.LFE70-.LFB70
 599 01b5 01       		.uleb128 0x1
 600 01b6 9C       		.byte	0x9c
 601 01b7 F4010000 		.4byte	0x1f4
 602 01bb 09       		.uleb128 0x9
 603 01bc D5020000 		.4byte	.LASF27
 604 01c0 01       		.byte	0x1
 605 01c1 97       		.byte	0x97
 606 01c2 9E000000 		.4byte	0x9e
 607 01c6 02       		.uleb128 0x2
 608 01c7 91       		.byte	0x91
 609 01c8 64       		.sleb128 -28
 610 01c9 0A       		.uleb128 0xa
 611 01ca 3A010000 		.4byte	.LASF34
 612 01ce 01       		.byte	0x1
 613 01cf 99       		.byte	0x99
 614 01d0 B2000000 		.4byte	0xb2
 615 01d4 02       		.uleb128 0x2
 616 01d5 91       		.byte	0x91
 617 01d6 6E       		.sleb128 -18
 618 01d7 0A       		.uleb128 0xa
 619 01d8 B0010000 		.4byte	.LASF35
 620 01dc 01       		.byte	0x1
 621 01dd 99       		.byte	0x99
 622 01de B2000000 		.4byte	0xb2
 623 01e2 02       		.uleb128 0x2
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 16


 624 01e3 91       		.byte	0x91
 625 01e4 76       		.sleb128 -10
 626 01e5 0A       		.uleb128 0xa
 627 01e6 50000000 		.4byte	.LASF30
 628 01ea 01       		.byte	0x1
 629 01eb 9A       		.byte	0x9a
 630 01ec E1000000 		.4byte	0xe1
 631 01f0 02       		.uleb128 0x2
 632 01f1 91       		.byte	0x91
 633 01f2 70       		.sleb128 -16
 634 01f3 00       		.byte	0
 635 01f4 0C       		.uleb128 0xc
 636 01f5 53010000 		.4byte	.LASF44
 637 01f9 01       		.byte	0x1
 638 01fa C6       		.byte	0xc6
 639 01fb E1000000 		.4byte	0xe1
 640 01ff 00000000 		.4byte	.LFB71
 641 0203 44000000 		.4byte	.LFE71-.LFB71
 642 0207 01       		.uleb128 0x1
 643 0208 9C       		.byte	0x9c
 644 0209 1C020000 		.4byte	0x21c
 645 020d 0A       		.uleb128 0xa
 646 020e D3010000 		.4byte	.LASF36
 647 0212 01       		.byte	0x1
 648 0213 C8       		.byte	0xc8
 649 0214 E1000000 		.4byte	0xe1
 650 0218 02       		.uleb128 0x2
 651 0219 91       		.byte	0x91
 652 021a 74       		.sleb128 -12
 653 021b 00       		.byte	0
 654 021c 0A       		.uleb128 0xa
 655 021d F3000000 		.4byte	.LASF37
 656 0221 01       		.byte	0x1
 657 0222 54       		.byte	0x54
 658 0223 2D020000 		.4byte	0x22d
 659 0227 05       		.uleb128 0x5
 660 0228 03       		.byte	0x3
 661 0229 00000000 		.4byte	xPollingConsumerCount
 662 022d 0D       		.uleb128 0xd
 663 022e E1000000 		.4byte	0xe1
 664 0232 0A       		.uleb128 0xa
 665 0233 15000000 		.4byte	.LASF38
 666 0237 01       		.byte	0x1
 667 0238 54       		.byte	0x54
 668 0239 2D020000 		.4byte	0x22d
 669 023d 05       		.uleb128 0x5
 670 023e 03       		.byte	0x3
 671 023f 04000000 		.4byte	xPollingProducerCount
 672 0243 0E       		.uleb128 0xe
 673 0244 79010000 		.4byte	.LASF45
 674 0248 07       		.byte	0x7
 675 0249 9606     		.2byte	0x696
 676 024b 4F020000 		.4byte	0x24f
 677 024f 0D       		.uleb128 0xd
 678 0250 BD000000 		.4byte	0xbd
 679 0254 00       		.byte	0
 680              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 17


 681              	.Ldebug_abbrev0:
 682 0000 01       		.uleb128 0x1
 683 0001 11       		.uleb128 0x11
 684 0002 01       		.byte	0x1
 685 0003 25       		.uleb128 0x25
 686 0004 0E       		.uleb128 0xe
 687 0005 13       		.uleb128 0x13
 688 0006 0B       		.uleb128 0xb
 689 0007 03       		.uleb128 0x3
 690 0008 0E       		.uleb128 0xe
 691 0009 1B       		.uleb128 0x1b
 692 000a 0E       		.uleb128 0xe
 693 000b 55       		.uleb128 0x55
 694 000c 17       		.uleb128 0x17
 695 000d 11       		.uleb128 0x11
 696 000e 01       		.uleb128 0x1
 697 000f 10       		.uleb128 0x10
 698 0010 17       		.uleb128 0x17
 699 0011 00       		.byte	0
 700 0012 00       		.byte	0
 701 0013 02       		.uleb128 0x2
 702 0014 24       		.uleb128 0x24
 703 0015 00       		.byte	0
 704 0016 0B       		.uleb128 0xb
 705 0017 0B       		.uleb128 0xb
 706 0018 3E       		.uleb128 0x3e
 707 0019 0B       		.uleb128 0xb
 708 001a 03       		.uleb128 0x3
 709 001b 0E       		.uleb128 0xe
 710 001c 00       		.byte	0
 711 001d 00       		.byte	0
 712 001e 03       		.uleb128 0x3
 713 001f 24       		.uleb128 0x24
 714 0020 00       		.byte	0
 715 0021 0B       		.uleb128 0xb
 716 0022 0B       		.uleb128 0xb
 717 0023 3E       		.uleb128 0x3e
 718 0024 0B       		.uleb128 0xb
 719 0025 03       		.uleb128 0x3
 720 0026 08       		.uleb128 0x8
 721 0027 00       		.byte	0
 722 0028 00       		.byte	0
 723 0029 04       		.uleb128 0x4
 724 002a 16       		.uleb128 0x16
 725 002b 00       		.byte	0
 726 002c 03       		.uleb128 0x3
 727 002d 0E       		.uleb128 0xe
 728 002e 3A       		.uleb128 0x3a
 729 002f 0B       		.uleb128 0xb
 730 0030 3B       		.uleb128 0x3b
 731 0031 0B       		.uleb128 0xb
 732 0032 49       		.uleb128 0x49
 733 0033 13       		.uleb128 0x13
 734 0034 00       		.byte	0
 735 0035 00       		.byte	0
 736 0036 05       		.uleb128 0x5
 737 0037 0F       		.uleb128 0xf
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 18


 738 0038 00       		.byte	0
 739 0039 0B       		.uleb128 0xb
 740 003a 0B       		.uleb128 0xb
 741 003b 00       		.byte	0
 742 003c 00       		.byte	0
 743 003d 06       		.uleb128 0x6
 744 003e 0F       		.uleb128 0xf
 745 003f 00       		.byte	0
 746 0040 0B       		.uleb128 0xb
 747 0041 0B       		.uleb128 0xb
 748 0042 49       		.uleb128 0x49
 749 0043 13       		.uleb128 0x13
 750 0044 00       		.byte	0
 751 0045 00       		.byte	0
 752 0046 07       		.uleb128 0x7
 753 0047 13       		.uleb128 0x13
 754 0048 00       		.byte	0
 755 0049 03       		.uleb128 0x3
 756 004a 0E       		.uleb128 0xe
 757 004b 3C       		.uleb128 0x3c
 758 004c 19       		.uleb128 0x19
 759 004d 00       		.byte	0
 760 004e 00       		.byte	0
 761 004f 08       		.uleb128 0x8
 762 0050 2E       		.uleb128 0x2e
 763 0051 01       		.byte	0x1
 764 0052 3F       		.uleb128 0x3f
 765 0053 19       		.uleb128 0x19
 766 0054 03       		.uleb128 0x3
 767 0055 0E       		.uleb128 0xe
 768 0056 3A       		.uleb128 0x3a
 769 0057 0B       		.uleb128 0xb
 770 0058 3B       		.uleb128 0x3b
 771 0059 0B       		.uleb128 0xb
 772 005a 27       		.uleb128 0x27
 773 005b 19       		.uleb128 0x19
 774 005c 11       		.uleb128 0x11
 775 005d 01       		.uleb128 0x1
 776 005e 12       		.uleb128 0x12
 777 005f 06       		.uleb128 0x6
 778 0060 40       		.uleb128 0x40
 779 0061 18       		.uleb128 0x18
 780 0062 9642     		.uleb128 0x2116
 781 0064 19       		.uleb128 0x19
 782 0065 01       		.uleb128 0x1
 783 0066 13       		.uleb128 0x13
 784 0067 00       		.byte	0
 785 0068 00       		.byte	0
 786 0069 09       		.uleb128 0x9
 787 006a 05       		.uleb128 0x5
 788 006b 00       		.byte	0
 789 006c 03       		.uleb128 0x3
 790 006d 0E       		.uleb128 0xe
 791 006e 3A       		.uleb128 0x3a
 792 006f 0B       		.uleb128 0xb
 793 0070 3B       		.uleb128 0x3b
 794 0071 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 19


 795 0072 49       		.uleb128 0x49
 796 0073 13       		.uleb128 0x13
 797 0074 02       		.uleb128 0x2
 798 0075 18       		.uleb128 0x18
 799 0076 00       		.byte	0
 800 0077 00       		.byte	0
 801 0078 0A       		.uleb128 0xa
 802 0079 34       		.uleb128 0x34
 803 007a 00       		.byte	0
 804 007b 03       		.uleb128 0x3
 805 007c 0E       		.uleb128 0xe
 806 007d 3A       		.uleb128 0x3a
 807 007e 0B       		.uleb128 0xb
 808 007f 3B       		.uleb128 0x3b
 809 0080 0B       		.uleb128 0xb
 810 0081 49       		.uleb128 0x49
 811 0082 13       		.uleb128 0x13
 812 0083 02       		.uleb128 0x2
 813 0084 18       		.uleb128 0x18
 814 0085 00       		.byte	0
 815 0086 00       		.byte	0
 816 0087 0B       		.uleb128 0xb
 817 0088 2E       		.uleb128 0x2e
 818 0089 01       		.byte	0x1
 819 008a 03       		.uleb128 0x3
 820 008b 0E       		.uleb128 0xe
 821 008c 3A       		.uleb128 0x3a
 822 008d 0B       		.uleb128 0xb
 823 008e 3B       		.uleb128 0x3b
 824 008f 0B       		.uleb128 0xb
 825 0090 27       		.uleb128 0x27
 826 0091 19       		.uleb128 0x19
 827 0092 11       		.uleb128 0x11
 828 0093 01       		.uleb128 0x1
 829 0094 12       		.uleb128 0x12
 830 0095 06       		.uleb128 0x6
 831 0096 40       		.uleb128 0x40
 832 0097 18       		.uleb128 0x18
 833 0098 9642     		.uleb128 0x2116
 834 009a 19       		.uleb128 0x19
 835 009b 01       		.uleb128 0x1
 836 009c 13       		.uleb128 0x13
 837 009d 00       		.byte	0
 838 009e 00       		.byte	0
 839 009f 0C       		.uleb128 0xc
 840 00a0 2E       		.uleb128 0x2e
 841 00a1 01       		.byte	0x1
 842 00a2 3F       		.uleb128 0x3f
 843 00a3 19       		.uleb128 0x19
 844 00a4 03       		.uleb128 0x3
 845 00a5 0E       		.uleb128 0xe
 846 00a6 3A       		.uleb128 0x3a
 847 00a7 0B       		.uleb128 0xb
 848 00a8 3B       		.uleb128 0x3b
 849 00a9 0B       		.uleb128 0xb
 850 00aa 27       		.uleb128 0x27
 851 00ab 19       		.uleb128 0x19
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 20


 852 00ac 49       		.uleb128 0x49
 853 00ad 13       		.uleb128 0x13
 854 00ae 11       		.uleb128 0x11
 855 00af 01       		.uleb128 0x1
 856 00b0 12       		.uleb128 0x12
 857 00b1 06       		.uleb128 0x6
 858 00b2 40       		.uleb128 0x40
 859 00b3 18       		.uleb128 0x18
 860 00b4 9742     		.uleb128 0x2117
 861 00b6 19       		.uleb128 0x19
 862 00b7 01       		.uleb128 0x1
 863 00b8 13       		.uleb128 0x13
 864 00b9 00       		.byte	0
 865 00ba 00       		.byte	0
 866 00bb 0D       		.uleb128 0xd
 867 00bc 35       		.uleb128 0x35
 868 00bd 00       		.byte	0
 869 00be 49       		.uleb128 0x49
 870 00bf 13       		.uleb128 0x13
 871 00c0 00       		.byte	0
 872 00c1 00       		.byte	0
 873 00c2 0E       		.uleb128 0xe
 874 00c3 34       		.uleb128 0x34
 875 00c4 00       		.byte	0
 876 00c5 03       		.uleb128 0x3
 877 00c6 0E       		.uleb128 0xe
 878 00c7 3A       		.uleb128 0x3a
 879 00c8 0B       		.uleb128 0xb
 880 00c9 3B       		.uleb128 0x3b
 881 00ca 05       		.uleb128 0x5
 882 00cb 49       		.uleb128 0x49
 883 00cc 13       		.uleb128 0x13
 884 00cd 3F       		.uleb128 0x3f
 885 00ce 19       		.uleb128 0x19
 886 00cf 3C       		.uleb128 0x3c
 887 00d0 19       		.uleb128 0x19
 888 00d1 00       		.byte	0
 889 00d2 00       		.byte	0
 890 00d3 00       		.byte	0
 891              		.section	.debug_aranges,"",%progbits
 892 0000 34000000 		.4byte	0x34
 893 0004 0200     		.2byte	0x2
 894 0006 00000000 		.4byte	.Ldebug_info0
 895 000a 04       		.byte	0x4
 896 000b 00       		.byte	0
 897 000c 0000     		.2byte	0
 898 000e 0000     		.2byte	0
 899 0010 00000000 		.4byte	.LFB68
 900 0014 74000000 		.4byte	.LFE68-.LFB68
 901 0018 00000000 		.4byte	.LFB69
 902 001c 70000000 		.4byte	.LFE69-.LFB69
 903 0020 00000000 		.4byte	.LFB70
 904 0024 78000000 		.4byte	.LFE70-.LFB70
 905 0028 00000000 		.4byte	.LFB71
 906 002c 44000000 		.4byte	.LFE71-.LFB71
 907 0030 00000000 		.4byte	0
 908 0034 00000000 		.4byte	0
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 21


 909              		.section	.debug_ranges,"",%progbits
 910              	.Ldebug_ranges0:
 911 0000 00000000 		.4byte	.LFB68
 912 0004 74000000 		.4byte	.LFE68
 913 0008 00000000 		.4byte	.LFB69
 914 000c 70000000 		.4byte	.LFE69
 915 0010 00000000 		.4byte	.LFB70
 916 0014 78000000 		.4byte	.LFE70
 917 0018 00000000 		.4byte	.LFB71
 918 001c 44000000 		.4byte	.LFE71
 919 0020 00000000 		.4byte	0
 920 0024 00000000 		.4byte	0
 921              		.section	.debug_line,"",%progbits
 922              	.Ldebug_line0:
 923 0000 3D020000 		.section	.debug_str,"MS",%progbits,1
 923      0200B101 
 923      00000201 
 923      FB0E0D00 
 923      01010101 
 924              	.LASF23:
 925 0000 5469636B 		.ascii	"TickType_t\000"
 925      54797065 
 925      5F7400
 926              	.LASF4:
 927 000b 5F5F7569 		.ascii	"__uint8_t\000"
 927      6E74385F 
 927      7400
 928              	.LASF38:
 929 0015 78506F6C 		.ascii	"xPollingProducerCount\000"
 929      6C696E67 
 929      50726F64 
 929      75636572 
 929      436F756E 
 930              	.LASF33:
 931 002b 76506F6C 		.ascii	"vPolledQueueConsumer\000"
 931      6C656451 
 931      75657565 
 931      436F6E73 
 931      756D6572 
 932              	.LASF31:
 933 0040 784C6F6F 		.ascii	"xLoop\000"
 933      7000
 934              	.LASF7:
 935 0046 5F5F696E 		.ascii	"__int32_t\000"
 935      7433325F 
 935      7400
 936              	.LASF30:
 937 0050 78457272 		.ascii	"xError\000"
 937      6F7200
 938              	.LASF39:
 939 0057 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 939      4320342E 
 939      392E3320 
 939      32303135 
 939      30333033 
 940 008a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 940      20726576 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 22


 940      6973696F 
 940      6E203232 
 940      31323230 
 941 00bd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 941      66756E63 
 941      74696F6E 
 941      2D736563 
 941      74696F6E 
 942              	.LASF25:
 943 00e5 51756575 		.ascii	"QueueHandle_t\000"
 943      6548616E 
 943      646C655F 
 943      7400
 944              	.LASF37:
 945 00f3 78506F6C 		.ascii	"xPollingConsumerCount\000"
 945      6C696E67 
 945      436F6E73 
 945      756D6572 
 945      436F756E 
 946              	.LASF19:
 947 0109 666C6F61 		.ascii	"float\000"
 947      7400
 948              	.LASF2:
 949 010f 756E7369 		.ascii	"unsigned char\000"
 949      676E6564 
 949      20636861 
 949      7200
 950              	.LASF40:
 951 011d 2E2E5C2E 		.ascii	"..\\..\\Common\\Minimal\\PollQ.c\000"
 951      2E5C436F 
 951      6D6D6F6E 
 951      5C4D696E 
 951      696D616C 
 952              	.LASF34:
 953 013a 75734461 		.ascii	"usData\000"
 953      746100
 954              	.LASF10:
 955 0141 6C6F6E67 		.ascii	"long unsigned int\000"
 955      20756E73 
 955      69676E65 
 955      6420696E 
 955      7400
 956              	.LASF44:
 957 0153 78417265 		.ascii	"xArePollingQueuesStillRunning\000"
 957      506F6C6C 
 957      696E6751 
 957      75657565 
 957      73537469 
 958              	.LASF29:
 959 0171 75735661 		.ascii	"usValue\000"
 959      6C756500 
 960              	.LASF45:
 961 0179 49544D5F 		.ascii	"ITM_RxBuffer\000"
 961      52784275 
 961      66666572 
 961      00
 962              	.LASF28:
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 23


 963 0186 78506F6C 		.ascii	"xPolledQueue\000"
 963      6C656451 
 963      75657565 
 963      00
 964              	.LASF5:
 965 0193 5F5F7569 		.ascii	"__uint16_t\000"
 965      6E743136 
 965      5F7400
 966              	.LASF20:
 967 019e 646F7562 		.ascii	"double\000"
 967      6C6500
 968              	.LASF9:
 969 01a5 5F5F7569 		.ascii	"__uint32_t\000"
 969      6E743332 
 969      5F7400
 970              	.LASF35:
 971 01b0 75734578 		.ascii	"usExpectedValue\000"
 971      70656374 
 971      65645661 
 971      6C756500 
 972              	.LASF42:
 973 01c0 5461736B 		.ascii	"TaskControlBlock_t\000"
 973      436F6E74 
 973      726F6C42 
 973      6C6F636B 
 973      5F7400
 974              	.LASF36:
 975 01d3 78526574 		.ascii	"xReturn\000"
 975      75726E00 
 976              	.LASF26:
 977 01db 75785072 		.ascii	"uxPriority\000"
 977      696F7269 
 977      747900
 978              	.LASF0:
 979 01e6 756E7369 		.ascii	"unsigned int\000"
 979      676E6564 
 979      20696E74 
 979      00
 980              	.LASF12:
 981 01f3 6C6F6E67 		.ascii	"long long unsigned int\000"
 981      206C6F6E 
 981      6720756E 
 981      7369676E 
 981      65642069 
 982              	.LASF15:
 983 020a 75696E74 		.ascii	"uint8_t\000"
 983      385F7400 
 984              	.LASF41:
 985 0212 453A5C47 		.ascii	"E:\\GitHub\\FreeRTOS\\freertos-code-2543-trunk\\fre"
 985      69744875 
 985      625C4672 
 985      65655254 
 985      4F535C66 
 986 0241 6572746F 		.ascii	"ertos-code-2543-trunk\\FreeRTOS\\Demo\\CORTEX_CY8C5"
 986      732D636F 
 986      64652D32 
 986      3534332D 
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 24


 986      7472756E 
 987 0271 3538385F 		.ascii	"588_PSoC_Creator_GCC\\FreeRTOS_Demo.cydsn\000"
 987      50536F43 
 987      5F437265 
 987      61746F72 
 987      5F474343 
 988              	.LASF43:
 989 029a 76537461 		.ascii	"vStartPolledQueueTasks\000"
 989      7274506F 
 989      6C6C6564 
 989      51756575 
 989      65546173 
 990              	.LASF17:
 991 02b1 696E7433 		.ascii	"int32_t\000"
 991      325F7400 
 992              	.LASF13:
 993 02b9 73697A65 		.ascii	"sizetype\000"
 993      74797065 
 993      00
 994              	.LASF11:
 995 02c2 6C6F6E67 		.ascii	"long long int\000"
 995      206C6F6E 
 995      6720696E 
 995      7400
 996              	.LASF14:
 997 02d0 63686172 		.ascii	"char\000"
 997      00
 998              	.LASF27:
 999 02d5 70765061 		.ascii	"pvParameters\000"
 999      72616D65 
 999      74657273 
 999      00
 1000              	.LASF3:
 1001 02e2 73686F72 		.ascii	"short int\000"
 1001      7420696E 
 1001      7400
 1002              	.LASF16:
 1003 02ec 75696E74 		.ascii	"uint16_t\000"
 1003      31365F74 
 1003      00
 1004              	.LASF32:
 1005 02f5 76506F6C 		.ascii	"vPolledQueueProducer\000"
 1005      6C656451 
 1005      75657565 
 1005      50726F64 
 1005      75636572 
 1006              	.LASF24:
 1007 030a 5461736B 		.ascii	"TaskHandle_t\000"
 1007      48616E64 
 1007      6C655F74 
 1007      00
 1008              	.LASF18:
 1009 0317 75696E74 		.ascii	"uint32_t\000"
 1009      33325F74 
 1009      00
 1010              	.LASF8:
 1011 0320 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Jamie\AppData\Local\Temp\cceYgyzb.s 			page 25


 1011      20696E74 
 1011      00
 1012              	.LASF1:
 1013 0329 7369676E 		.ascii	"signed char\000"
 1013      65642063 
 1013      68617200 
 1014              	.LASF6:
 1015 0335 73686F72 		.ascii	"short unsigned int\000"
 1015      7420756E 
 1015      7369676E 
 1015      65642069 
 1015      6E7400
 1016              	.LASF22:
 1017 0348 55426173 		.ascii	"UBaseType_t\000"
 1017      65547970 
 1017      655F7400 
 1018              	.LASF21:
 1019 0354 42617365 		.ascii	"BaseType_t\000"
 1019      54797065 
 1019      5F7400
 1020              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
